/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuh’s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the AgentInsertForce type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentInsertForce{}

// AgentInsertForce Remove the old agent with the same name, ID or IP if the configuration is matched
type AgentInsertForce struct {
	// Enable force option
	Enabled *bool `json:"enabled,omitempty"`
	DisconnectedTime *AgentInsertForceDisconnectedTime `json:"disconnected_time,omitempty"`
	// Time the agent must has been registered to force the insertion. Time in seconds, ‘[n_days]d’, ‘[n_hours]h’, ‘[n_minutes]m’ or ‘[n_seconds]s’. For example, `7d`, `10s` and `10` are valid values. If no time unit is specified, seconds are used
	AfterRegistrationTime *string `json:"after_registration_time,omitempty"`
}

// NewAgentInsertForce instantiates a new AgentInsertForce object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentInsertForce() *AgentInsertForce {
	this := AgentInsertForce{}
	var enabled bool = true
	this.Enabled = &enabled
	var afterRegistrationTime string = "1h"
	this.AfterRegistrationTime = &afterRegistrationTime
	return &this
}

// NewAgentInsertForceWithDefaults instantiates a new AgentInsertForce object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentInsertForceWithDefaults() *AgentInsertForce {
	this := AgentInsertForce{}
	var enabled bool = true
	this.Enabled = &enabled
	var afterRegistrationTime string = "1h"
	this.AfterRegistrationTime = &afterRegistrationTime
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *AgentInsertForce) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentInsertForce) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *AgentInsertForce) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *AgentInsertForce) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetDisconnectedTime returns the DisconnectedTime field value if set, zero value otherwise.
func (o *AgentInsertForce) GetDisconnectedTime() AgentInsertForceDisconnectedTime {
	if o == nil || IsNil(o.DisconnectedTime) {
		var ret AgentInsertForceDisconnectedTime
		return ret
	}
	return *o.DisconnectedTime
}

// GetDisconnectedTimeOk returns a tuple with the DisconnectedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentInsertForce) GetDisconnectedTimeOk() (*AgentInsertForceDisconnectedTime, bool) {
	if o == nil || IsNil(o.DisconnectedTime) {
		return nil, false
	}
	return o.DisconnectedTime, true
}

// HasDisconnectedTime returns a boolean if a field has been set.
func (o *AgentInsertForce) HasDisconnectedTime() bool {
	if o != nil && !IsNil(o.DisconnectedTime) {
		return true
	}

	return false
}

// SetDisconnectedTime gets a reference to the given AgentInsertForceDisconnectedTime and assigns it to the DisconnectedTime field.
func (o *AgentInsertForce) SetDisconnectedTime(v AgentInsertForceDisconnectedTime) {
	o.DisconnectedTime = &v
}

// GetAfterRegistrationTime returns the AfterRegistrationTime field value if set, zero value otherwise.
func (o *AgentInsertForce) GetAfterRegistrationTime() string {
	if o == nil || IsNil(o.AfterRegistrationTime) {
		var ret string
		return ret
	}
	return *o.AfterRegistrationTime
}

// GetAfterRegistrationTimeOk returns a tuple with the AfterRegistrationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentInsertForce) GetAfterRegistrationTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AfterRegistrationTime) {
		return nil, false
	}
	return o.AfterRegistrationTime, true
}

// HasAfterRegistrationTime returns a boolean if a field has been set.
func (o *AgentInsertForce) HasAfterRegistrationTime() bool {
	if o != nil && !IsNil(o.AfterRegistrationTime) {
		return true
	}

	return false
}

// SetAfterRegistrationTime gets a reference to the given string and assigns it to the AfterRegistrationTime field.
func (o *AgentInsertForce) SetAfterRegistrationTime(v string) {
	o.AfterRegistrationTime = &v
}

func (o AgentInsertForce) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentInsertForce) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.DisconnectedTime) {
		toSerialize["disconnected_time"] = o.DisconnectedTime
	}
	if !IsNil(o.AfterRegistrationTime) {
		toSerialize["after_registration_time"] = o.AfterRegistrationTime
	}
	return toSerialize, nil
}

type NullableAgentInsertForce struct {
	value *AgentInsertForce
	isSet bool
}

func (v NullableAgentInsertForce) Get() *AgentInsertForce {
	return v.value
}

func (v *NullableAgentInsertForce) Set(val *AgentInsertForce) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentInsertForce) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentInsertForce) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentInsertForce(val *AgentInsertForce) *NullableAgentInsertForce {
	return &NullableAgentInsertForce{value: val, isSet: true}
}

func (v NullableAgentInsertForce) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentInsertForce) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


