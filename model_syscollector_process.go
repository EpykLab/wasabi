/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the SyscollectorProcess type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyscollectorProcess{}

// SyscollectorProcess struct for SyscollectorProcess
type SyscollectorProcess struct {
	// Process received arguments
	Argvs *string `json:"argvs,omitempty"`
	// Executed command
	Cmd *string `json:"cmd,omitempty"`
	// Effective group
	Egroup *string `json:"egroup,omitempty"`
	// Effective user
	Euser *string `json:"euser,omitempty"`
	// Filesystem group name
	Fgroup *string `json:"fgroup,omitempty"`
	// Process name
	Name *string `json:"name,omitempty"`
	// Nice value of the process
	Nice *int32 `json:"nice,omitempty"`
	// Number of light weight processes
	Nlwp *int32 `json:"nlwp,omitempty"`
	// Process group
	Pgrp *int32 `json:"pgrp,omitempty"`
	// Process PID
	Pid *string `json:"pid,omitempty"`
	// Process parent PID
	Ppid *int32 `json:"ppid,omitempty"`
	// Kernel scheduling priority
	Priority *int32 `json:"priority,omitempty"`
	// Processor number which is running the process
	Processor *int32 `json:"processor,omitempty"`
	// Process resident size in bytes
	Resident *int32 `json:"resident,omitempty"`
	// Real group
	Rgroup *string `json:"rgroup,omitempty"`
	// Real user
	Ruser *string `json:"ruser,omitempty"`
	Scan *ScanIdTime `json:"scan,omitempty"`
	// Process session
	Session *int32 `json:"session,omitempty"`
	// Saved-set group
	Sgroup *string `json:"sgroup,omitempty"`
	// Shared memory
	Share *int32 `json:"share,omitempty"`
	// Process size in bytes
	Size *int32 `json:"size,omitempty"`
	// Time when the process started
	StartTime *int64 `json:"start_time,omitempty"`
	// Process state
	State *string `json:"state,omitempty"`
	// Time spent executing system code
	Stime *int32 `json:"stime,omitempty"`
	// Saved-set user
	Suser *string `json:"suser,omitempty"`
	// Thread Group ID
	Tgid *int32 `json:"tgid,omitempty"`
	// Process TTY number
	Tty *int32 `json:"tty,omitempty"`
	// Time spent executing user code
	Utime *int32 `json:"utime,omitempty"`
	// Total VM size (KB)
	VmSize *int32 `json:"vm_size,omitempty"`
	// Agent ID
	AgentId *string `json:"agent_id,omitempty"`
}

// NewSyscollectorProcess instantiates a new SyscollectorProcess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyscollectorProcess() *SyscollectorProcess {
	this := SyscollectorProcess{}
	return &this
}

// NewSyscollectorProcessWithDefaults instantiates a new SyscollectorProcess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyscollectorProcessWithDefaults() *SyscollectorProcess {
	this := SyscollectorProcess{}
	return &this
}

// GetArgvs returns the Argvs field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetArgvs() string {
	if o == nil || IsNil(o.Argvs) {
		var ret string
		return ret
	}
	return *o.Argvs
}

// GetArgvsOk returns a tuple with the Argvs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetArgvsOk() (*string, bool) {
	if o == nil || IsNil(o.Argvs) {
		return nil, false
	}
	return o.Argvs, true
}

// HasArgvs returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasArgvs() bool {
	if o != nil && !IsNil(o.Argvs) {
		return true
	}

	return false
}

// SetArgvs gets a reference to the given string and assigns it to the Argvs field.
func (o *SyscollectorProcess) SetArgvs(v string) {
	o.Argvs = &v
}

// GetCmd returns the Cmd field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetCmd() string {
	if o == nil || IsNil(o.Cmd) {
		var ret string
		return ret
	}
	return *o.Cmd
}

// GetCmdOk returns a tuple with the Cmd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetCmdOk() (*string, bool) {
	if o == nil || IsNil(o.Cmd) {
		return nil, false
	}
	return o.Cmd, true
}

// HasCmd returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasCmd() bool {
	if o != nil && !IsNil(o.Cmd) {
		return true
	}

	return false
}

// SetCmd gets a reference to the given string and assigns it to the Cmd field.
func (o *SyscollectorProcess) SetCmd(v string) {
	o.Cmd = &v
}

// GetEgroup returns the Egroup field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetEgroup() string {
	if o == nil || IsNil(o.Egroup) {
		var ret string
		return ret
	}
	return *o.Egroup
}

// GetEgroupOk returns a tuple with the Egroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetEgroupOk() (*string, bool) {
	if o == nil || IsNil(o.Egroup) {
		return nil, false
	}
	return o.Egroup, true
}

// HasEgroup returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasEgroup() bool {
	if o != nil && !IsNil(o.Egroup) {
		return true
	}

	return false
}

// SetEgroup gets a reference to the given string and assigns it to the Egroup field.
func (o *SyscollectorProcess) SetEgroup(v string) {
	o.Egroup = &v
}

// GetEuser returns the Euser field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetEuser() string {
	if o == nil || IsNil(o.Euser) {
		var ret string
		return ret
	}
	return *o.Euser
}

// GetEuserOk returns a tuple with the Euser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetEuserOk() (*string, bool) {
	if o == nil || IsNil(o.Euser) {
		return nil, false
	}
	return o.Euser, true
}

// HasEuser returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasEuser() bool {
	if o != nil && !IsNil(o.Euser) {
		return true
	}

	return false
}

// SetEuser gets a reference to the given string and assigns it to the Euser field.
func (o *SyscollectorProcess) SetEuser(v string) {
	o.Euser = &v
}

// GetFgroup returns the Fgroup field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetFgroup() string {
	if o == nil || IsNil(o.Fgroup) {
		var ret string
		return ret
	}
	return *o.Fgroup
}

// GetFgroupOk returns a tuple with the Fgroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetFgroupOk() (*string, bool) {
	if o == nil || IsNil(o.Fgroup) {
		return nil, false
	}
	return o.Fgroup, true
}

// HasFgroup returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasFgroup() bool {
	if o != nil && !IsNil(o.Fgroup) {
		return true
	}

	return false
}

// SetFgroup gets a reference to the given string and assigns it to the Fgroup field.
func (o *SyscollectorProcess) SetFgroup(v string) {
	o.Fgroup = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SyscollectorProcess) SetName(v string) {
	o.Name = &v
}

// GetNice returns the Nice field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetNice() int32 {
	if o == nil || IsNil(o.Nice) {
		var ret int32
		return ret
	}
	return *o.Nice
}

// GetNiceOk returns a tuple with the Nice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetNiceOk() (*int32, bool) {
	if o == nil || IsNil(o.Nice) {
		return nil, false
	}
	return o.Nice, true
}

// HasNice returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasNice() bool {
	if o != nil && !IsNil(o.Nice) {
		return true
	}

	return false
}

// SetNice gets a reference to the given int32 and assigns it to the Nice field.
func (o *SyscollectorProcess) SetNice(v int32) {
	o.Nice = &v
}

// GetNlwp returns the Nlwp field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetNlwp() int32 {
	if o == nil || IsNil(o.Nlwp) {
		var ret int32
		return ret
	}
	return *o.Nlwp
}

// GetNlwpOk returns a tuple with the Nlwp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetNlwpOk() (*int32, bool) {
	if o == nil || IsNil(o.Nlwp) {
		return nil, false
	}
	return o.Nlwp, true
}

// HasNlwp returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasNlwp() bool {
	if o != nil && !IsNil(o.Nlwp) {
		return true
	}

	return false
}

// SetNlwp gets a reference to the given int32 and assigns it to the Nlwp field.
func (o *SyscollectorProcess) SetNlwp(v int32) {
	o.Nlwp = &v
}

// GetPgrp returns the Pgrp field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetPgrp() int32 {
	if o == nil || IsNil(o.Pgrp) {
		var ret int32
		return ret
	}
	return *o.Pgrp
}

// GetPgrpOk returns a tuple with the Pgrp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetPgrpOk() (*int32, bool) {
	if o == nil || IsNil(o.Pgrp) {
		return nil, false
	}
	return o.Pgrp, true
}

// HasPgrp returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasPgrp() bool {
	if o != nil && !IsNil(o.Pgrp) {
		return true
	}

	return false
}

// SetPgrp gets a reference to the given int32 and assigns it to the Pgrp field.
func (o *SyscollectorProcess) SetPgrp(v int32) {
	o.Pgrp = &v
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetPid() string {
	if o == nil || IsNil(o.Pid) {
		var ret string
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetPidOk() (*string, bool) {
	if o == nil || IsNil(o.Pid) {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasPid() bool {
	if o != nil && !IsNil(o.Pid) {
		return true
	}

	return false
}

// SetPid gets a reference to the given string and assigns it to the Pid field.
func (o *SyscollectorProcess) SetPid(v string) {
	o.Pid = &v
}

// GetPpid returns the Ppid field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetPpid() int32 {
	if o == nil || IsNil(o.Ppid) {
		var ret int32
		return ret
	}
	return *o.Ppid
}

// GetPpidOk returns a tuple with the Ppid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetPpidOk() (*int32, bool) {
	if o == nil || IsNil(o.Ppid) {
		return nil, false
	}
	return o.Ppid, true
}

// HasPpid returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasPpid() bool {
	if o != nil && !IsNil(o.Ppid) {
		return true
	}

	return false
}

// SetPpid gets a reference to the given int32 and assigns it to the Ppid field.
func (o *SyscollectorProcess) SetPpid(v int32) {
	o.Ppid = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *SyscollectorProcess) SetPriority(v int32) {
	o.Priority = &v
}

// GetProcessor returns the Processor field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetProcessor() int32 {
	if o == nil || IsNil(o.Processor) {
		var ret int32
		return ret
	}
	return *o.Processor
}

// GetProcessorOk returns a tuple with the Processor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetProcessorOk() (*int32, bool) {
	if o == nil || IsNil(o.Processor) {
		return nil, false
	}
	return o.Processor, true
}

// HasProcessor returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasProcessor() bool {
	if o != nil && !IsNil(o.Processor) {
		return true
	}

	return false
}

// SetProcessor gets a reference to the given int32 and assigns it to the Processor field.
func (o *SyscollectorProcess) SetProcessor(v int32) {
	o.Processor = &v
}

// GetResident returns the Resident field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetResident() int32 {
	if o == nil || IsNil(o.Resident) {
		var ret int32
		return ret
	}
	return *o.Resident
}

// GetResidentOk returns a tuple with the Resident field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetResidentOk() (*int32, bool) {
	if o == nil || IsNil(o.Resident) {
		return nil, false
	}
	return o.Resident, true
}

// HasResident returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasResident() bool {
	if o != nil && !IsNil(o.Resident) {
		return true
	}

	return false
}

// SetResident gets a reference to the given int32 and assigns it to the Resident field.
func (o *SyscollectorProcess) SetResident(v int32) {
	o.Resident = &v
}

// GetRgroup returns the Rgroup field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetRgroup() string {
	if o == nil || IsNil(o.Rgroup) {
		var ret string
		return ret
	}
	return *o.Rgroup
}

// GetRgroupOk returns a tuple with the Rgroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetRgroupOk() (*string, bool) {
	if o == nil || IsNil(o.Rgroup) {
		return nil, false
	}
	return o.Rgroup, true
}

// HasRgroup returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasRgroup() bool {
	if o != nil && !IsNil(o.Rgroup) {
		return true
	}

	return false
}

// SetRgroup gets a reference to the given string and assigns it to the Rgroup field.
func (o *SyscollectorProcess) SetRgroup(v string) {
	o.Rgroup = &v
}

// GetRuser returns the Ruser field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetRuser() string {
	if o == nil || IsNil(o.Ruser) {
		var ret string
		return ret
	}
	return *o.Ruser
}

// GetRuserOk returns a tuple with the Ruser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetRuserOk() (*string, bool) {
	if o == nil || IsNil(o.Ruser) {
		return nil, false
	}
	return o.Ruser, true
}

// HasRuser returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasRuser() bool {
	if o != nil && !IsNil(o.Ruser) {
		return true
	}

	return false
}

// SetRuser gets a reference to the given string and assigns it to the Ruser field.
func (o *SyscollectorProcess) SetRuser(v string) {
	o.Ruser = &v
}

// GetScan returns the Scan field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetScan() ScanIdTime {
	if o == nil || IsNil(o.Scan) {
		var ret ScanIdTime
		return ret
	}
	return *o.Scan
}

// GetScanOk returns a tuple with the Scan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetScanOk() (*ScanIdTime, bool) {
	if o == nil || IsNil(o.Scan) {
		return nil, false
	}
	return o.Scan, true
}

// HasScan returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasScan() bool {
	if o != nil && !IsNil(o.Scan) {
		return true
	}

	return false
}

// SetScan gets a reference to the given ScanIdTime and assigns it to the Scan field.
func (o *SyscollectorProcess) SetScan(v ScanIdTime) {
	o.Scan = &v
}

// GetSession returns the Session field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetSession() int32 {
	if o == nil || IsNil(o.Session) {
		var ret int32
		return ret
	}
	return *o.Session
}

// GetSessionOk returns a tuple with the Session field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetSessionOk() (*int32, bool) {
	if o == nil || IsNil(o.Session) {
		return nil, false
	}
	return o.Session, true
}

// HasSession returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasSession() bool {
	if o != nil && !IsNil(o.Session) {
		return true
	}

	return false
}

// SetSession gets a reference to the given int32 and assigns it to the Session field.
func (o *SyscollectorProcess) SetSession(v int32) {
	o.Session = &v
}

// GetSgroup returns the Sgroup field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetSgroup() string {
	if o == nil || IsNil(o.Sgroup) {
		var ret string
		return ret
	}
	return *o.Sgroup
}

// GetSgroupOk returns a tuple with the Sgroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetSgroupOk() (*string, bool) {
	if o == nil || IsNil(o.Sgroup) {
		return nil, false
	}
	return o.Sgroup, true
}

// HasSgroup returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasSgroup() bool {
	if o != nil && !IsNil(o.Sgroup) {
		return true
	}

	return false
}

// SetSgroup gets a reference to the given string and assigns it to the Sgroup field.
func (o *SyscollectorProcess) SetSgroup(v string) {
	o.Sgroup = &v
}

// GetShare returns the Share field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetShare() int32 {
	if o == nil || IsNil(o.Share) {
		var ret int32
		return ret
	}
	return *o.Share
}

// GetShareOk returns a tuple with the Share field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetShareOk() (*int32, bool) {
	if o == nil || IsNil(o.Share) {
		return nil, false
	}
	return o.Share, true
}

// HasShare returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasShare() bool {
	if o != nil && !IsNil(o.Share) {
		return true
	}

	return false
}

// SetShare gets a reference to the given int32 and assigns it to the Share field.
func (o *SyscollectorProcess) SetShare(v int32) {
	o.Share = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *SyscollectorProcess) SetSize(v int32) {
	o.Size = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetStartTime() int64 {
	if o == nil || IsNil(o.StartTime) {
		var ret int64
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetStartTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given int64 and assigns it to the StartTime field.
func (o *SyscollectorProcess) SetStartTime(v int64) {
	o.StartTime = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *SyscollectorProcess) SetState(v string) {
	o.State = &v
}

// GetStime returns the Stime field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetStime() int32 {
	if o == nil || IsNil(o.Stime) {
		var ret int32
		return ret
	}
	return *o.Stime
}

// GetStimeOk returns a tuple with the Stime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetStimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Stime) {
		return nil, false
	}
	return o.Stime, true
}

// HasStime returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasStime() bool {
	if o != nil && !IsNil(o.Stime) {
		return true
	}

	return false
}

// SetStime gets a reference to the given int32 and assigns it to the Stime field.
func (o *SyscollectorProcess) SetStime(v int32) {
	o.Stime = &v
}

// GetSuser returns the Suser field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetSuser() string {
	if o == nil || IsNil(o.Suser) {
		var ret string
		return ret
	}
	return *o.Suser
}

// GetSuserOk returns a tuple with the Suser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetSuserOk() (*string, bool) {
	if o == nil || IsNil(o.Suser) {
		return nil, false
	}
	return o.Suser, true
}

// HasSuser returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasSuser() bool {
	if o != nil && !IsNil(o.Suser) {
		return true
	}

	return false
}

// SetSuser gets a reference to the given string and assigns it to the Suser field.
func (o *SyscollectorProcess) SetSuser(v string) {
	o.Suser = &v
}

// GetTgid returns the Tgid field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetTgid() int32 {
	if o == nil || IsNil(o.Tgid) {
		var ret int32
		return ret
	}
	return *o.Tgid
}

// GetTgidOk returns a tuple with the Tgid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetTgidOk() (*int32, bool) {
	if o == nil || IsNil(o.Tgid) {
		return nil, false
	}
	return o.Tgid, true
}

// HasTgid returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasTgid() bool {
	if o != nil && !IsNil(o.Tgid) {
		return true
	}

	return false
}

// SetTgid gets a reference to the given int32 and assigns it to the Tgid field.
func (o *SyscollectorProcess) SetTgid(v int32) {
	o.Tgid = &v
}

// GetTty returns the Tty field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetTty() int32 {
	if o == nil || IsNil(o.Tty) {
		var ret int32
		return ret
	}
	return *o.Tty
}

// GetTtyOk returns a tuple with the Tty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetTtyOk() (*int32, bool) {
	if o == nil || IsNil(o.Tty) {
		return nil, false
	}
	return o.Tty, true
}

// HasTty returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasTty() bool {
	if o != nil && !IsNil(o.Tty) {
		return true
	}

	return false
}

// SetTty gets a reference to the given int32 and assigns it to the Tty field.
func (o *SyscollectorProcess) SetTty(v int32) {
	o.Tty = &v
}

// GetUtime returns the Utime field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetUtime() int32 {
	if o == nil || IsNil(o.Utime) {
		var ret int32
		return ret
	}
	return *o.Utime
}

// GetUtimeOk returns a tuple with the Utime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetUtimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Utime) {
		return nil, false
	}
	return o.Utime, true
}

// HasUtime returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasUtime() bool {
	if o != nil && !IsNil(o.Utime) {
		return true
	}

	return false
}

// SetUtime gets a reference to the given int32 and assigns it to the Utime field.
func (o *SyscollectorProcess) SetUtime(v int32) {
	o.Utime = &v
}

// GetVmSize returns the VmSize field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetVmSize() int32 {
	if o == nil || IsNil(o.VmSize) {
		var ret int32
		return ret
	}
	return *o.VmSize
}

// GetVmSizeOk returns a tuple with the VmSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetVmSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.VmSize) {
		return nil, false
	}
	return o.VmSize, true
}

// HasVmSize returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasVmSize() bool {
	if o != nil && !IsNil(o.VmSize) {
		return true
	}

	return false
}

// SetVmSize gets a reference to the given int32 and assigns it to the VmSize field.
func (o *SyscollectorProcess) SetVmSize(v int32) {
	o.VmSize = &v
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *SyscollectorProcess) GetAgentId() string {
	if o == nil || IsNil(o.AgentId) {
		var ret string
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorProcess) GetAgentIdOk() (*string, bool) {
	if o == nil || IsNil(o.AgentId) {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *SyscollectorProcess) HasAgentId() bool {
	if o != nil && !IsNil(o.AgentId) {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given string and assigns it to the AgentId field.
func (o *SyscollectorProcess) SetAgentId(v string) {
	o.AgentId = &v
}

func (o SyscollectorProcess) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyscollectorProcess) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Argvs) {
		toSerialize["argvs"] = o.Argvs
	}
	if !IsNil(o.Cmd) {
		toSerialize["cmd"] = o.Cmd
	}
	if !IsNil(o.Egroup) {
		toSerialize["egroup"] = o.Egroup
	}
	if !IsNil(o.Euser) {
		toSerialize["euser"] = o.Euser
	}
	if !IsNil(o.Fgroup) {
		toSerialize["fgroup"] = o.Fgroup
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Nice) {
		toSerialize["nice"] = o.Nice
	}
	if !IsNil(o.Nlwp) {
		toSerialize["nlwp"] = o.Nlwp
	}
	if !IsNil(o.Pgrp) {
		toSerialize["pgrp"] = o.Pgrp
	}
	if !IsNil(o.Pid) {
		toSerialize["pid"] = o.Pid
	}
	if !IsNil(o.Ppid) {
		toSerialize["ppid"] = o.Ppid
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Processor) {
		toSerialize["processor"] = o.Processor
	}
	if !IsNil(o.Resident) {
		toSerialize["resident"] = o.Resident
	}
	if !IsNil(o.Rgroup) {
		toSerialize["rgroup"] = o.Rgroup
	}
	if !IsNil(o.Ruser) {
		toSerialize["ruser"] = o.Ruser
	}
	if !IsNil(o.Scan) {
		toSerialize["scan"] = o.Scan
	}
	if !IsNil(o.Session) {
		toSerialize["session"] = o.Session
	}
	if !IsNil(o.Sgroup) {
		toSerialize["sgroup"] = o.Sgroup
	}
	if !IsNil(o.Share) {
		toSerialize["share"] = o.Share
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Stime) {
		toSerialize["stime"] = o.Stime
	}
	if !IsNil(o.Suser) {
		toSerialize["suser"] = o.Suser
	}
	if !IsNil(o.Tgid) {
		toSerialize["tgid"] = o.Tgid
	}
	if !IsNil(o.Tty) {
		toSerialize["tty"] = o.Tty
	}
	if !IsNil(o.Utime) {
		toSerialize["utime"] = o.Utime
	}
	if !IsNil(o.VmSize) {
		toSerialize["vm_size"] = o.VmSize
	}
	if !IsNil(o.AgentId) {
		toSerialize["agent_id"] = o.AgentId
	}
	return toSerialize, nil
}

type NullableSyscollectorProcess struct {
	value *SyscollectorProcess
	isSet bool
}

func (v NullableSyscollectorProcess) Get() *SyscollectorProcess {
	return v.value
}

func (v *NullableSyscollectorProcess) Set(val *SyscollectorProcess) {
	v.value = val
	v.isSet = true
}

func (v NullableSyscollectorProcess) IsSet() bool {
	return v.isSet
}

func (v *NullableSyscollectorProcess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyscollectorProcess(val *SyscollectorProcess) *NullableSyscollectorProcess {
	return &NullableSyscollectorProcess{value: val, isSet: true}
}

func (v NullableSyscollectorProcess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyscollectorProcess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


