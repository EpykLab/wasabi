/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the SyscollectorPorts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyscollectorPorts{}

// SyscollectorPorts struct for SyscollectorPorts
type SyscollectorPorts struct {
	// Port inode
	Inode *int64 `json:"inode,omitempty"`
	Local *LocalPortInfo `json:"local,omitempty"`
	// Protocol used in the communication
	Protocol *string `json:"protocol,omitempty"`
	Remote *RemotePortInfo `json:"remote,omitempty"`
	// Packets at the receiver queue
	RxQueue *int32 `json:"rx_queue,omitempty"`
	Scan *ScanIdTime `json:"scan,omitempty"`
	// Communication status
	State *string `json:"state,omitempty"`
	// Packets pending to be transmitted
	TxQueue *int32 `json:"tx_queue,omitempty"`
	// Agent ID
	AgentId *string `json:"agent_id,omitempty"`
	// PID owner of the opened port
	Pid *int32 `json:"pid,omitempty"`
	// Name of the PID
	Process *string `json:"process,omitempty"`
}

// NewSyscollectorPorts instantiates a new SyscollectorPorts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyscollectorPorts() *SyscollectorPorts {
	this := SyscollectorPorts{}
	return &this
}

// NewSyscollectorPortsWithDefaults instantiates a new SyscollectorPorts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyscollectorPortsWithDefaults() *SyscollectorPorts {
	this := SyscollectorPorts{}
	return &this
}

// GetInode returns the Inode field value if set, zero value otherwise.
func (o *SyscollectorPorts) GetInode() int64 {
	if o == nil || IsNil(o.Inode) {
		var ret int64
		return ret
	}
	return *o.Inode
}

// GetInodeOk returns a tuple with the Inode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPorts) GetInodeOk() (*int64, bool) {
	if o == nil || IsNil(o.Inode) {
		return nil, false
	}
	return o.Inode, true
}

// HasInode returns a boolean if a field has been set.
func (o *SyscollectorPorts) HasInode() bool {
	if o != nil && !IsNil(o.Inode) {
		return true
	}

	return false
}

// SetInode gets a reference to the given int64 and assigns it to the Inode field.
func (o *SyscollectorPorts) SetInode(v int64) {
	o.Inode = &v
}

// GetLocal returns the Local field value if set, zero value otherwise.
func (o *SyscollectorPorts) GetLocal() LocalPortInfo {
	if o == nil || IsNil(o.Local) {
		var ret LocalPortInfo
		return ret
	}
	return *o.Local
}

// GetLocalOk returns a tuple with the Local field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPorts) GetLocalOk() (*LocalPortInfo, bool) {
	if o == nil || IsNil(o.Local) {
		return nil, false
	}
	return o.Local, true
}

// HasLocal returns a boolean if a field has been set.
func (o *SyscollectorPorts) HasLocal() bool {
	if o != nil && !IsNil(o.Local) {
		return true
	}

	return false
}

// SetLocal gets a reference to the given LocalPortInfo and assigns it to the Local field.
func (o *SyscollectorPorts) SetLocal(v LocalPortInfo) {
	o.Local = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *SyscollectorPorts) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPorts) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *SyscollectorPorts) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *SyscollectorPorts) SetProtocol(v string) {
	o.Protocol = &v
}

// GetRemote returns the Remote field value if set, zero value otherwise.
func (o *SyscollectorPorts) GetRemote() RemotePortInfo {
	if o == nil || IsNil(o.Remote) {
		var ret RemotePortInfo
		return ret
	}
	return *o.Remote
}

// GetRemoteOk returns a tuple with the Remote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPorts) GetRemoteOk() (*RemotePortInfo, bool) {
	if o == nil || IsNil(o.Remote) {
		return nil, false
	}
	return o.Remote, true
}

// HasRemote returns a boolean if a field has been set.
func (o *SyscollectorPorts) HasRemote() bool {
	if o != nil && !IsNil(o.Remote) {
		return true
	}

	return false
}

// SetRemote gets a reference to the given RemotePortInfo and assigns it to the Remote field.
func (o *SyscollectorPorts) SetRemote(v RemotePortInfo) {
	o.Remote = &v
}

// GetRxQueue returns the RxQueue field value if set, zero value otherwise.
func (o *SyscollectorPorts) GetRxQueue() int32 {
	if o == nil || IsNil(o.RxQueue) {
		var ret int32
		return ret
	}
	return *o.RxQueue
}

// GetRxQueueOk returns a tuple with the RxQueue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPorts) GetRxQueueOk() (*int32, bool) {
	if o == nil || IsNil(o.RxQueue) {
		return nil, false
	}
	return o.RxQueue, true
}

// HasRxQueue returns a boolean if a field has been set.
func (o *SyscollectorPorts) HasRxQueue() bool {
	if o != nil && !IsNil(o.RxQueue) {
		return true
	}

	return false
}

// SetRxQueue gets a reference to the given int32 and assigns it to the RxQueue field.
func (o *SyscollectorPorts) SetRxQueue(v int32) {
	o.RxQueue = &v
}

// GetScan returns the Scan field value if set, zero value otherwise.
func (o *SyscollectorPorts) GetScan() ScanIdTime {
	if o == nil || IsNil(o.Scan) {
		var ret ScanIdTime
		return ret
	}
	return *o.Scan
}

// GetScanOk returns a tuple with the Scan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPorts) GetScanOk() (*ScanIdTime, bool) {
	if o == nil || IsNil(o.Scan) {
		return nil, false
	}
	return o.Scan, true
}

// HasScan returns a boolean if a field has been set.
func (o *SyscollectorPorts) HasScan() bool {
	if o != nil && !IsNil(o.Scan) {
		return true
	}

	return false
}

// SetScan gets a reference to the given ScanIdTime and assigns it to the Scan field.
func (o *SyscollectorPorts) SetScan(v ScanIdTime) {
	o.Scan = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *SyscollectorPorts) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPorts) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *SyscollectorPorts) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *SyscollectorPorts) SetState(v string) {
	o.State = &v
}

// GetTxQueue returns the TxQueue field value if set, zero value otherwise.
func (o *SyscollectorPorts) GetTxQueue() int32 {
	if o == nil || IsNil(o.TxQueue) {
		var ret int32
		return ret
	}
	return *o.TxQueue
}

// GetTxQueueOk returns a tuple with the TxQueue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPorts) GetTxQueueOk() (*int32, bool) {
	if o == nil || IsNil(o.TxQueue) {
		return nil, false
	}
	return o.TxQueue, true
}

// HasTxQueue returns a boolean if a field has been set.
func (o *SyscollectorPorts) HasTxQueue() bool {
	if o != nil && !IsNil(o.TxQueue) {
		return true
	}

	return false
}

// SetTxQueue gets a reference to the given int32 and assigns it to the TxQueue field.
func (o *SyscollectorPorts) SetTxQueue(v int32) {
	o.TxQueue = &v
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *SyscollectorPorts) GetAgentId() string {
	if o == nil || IsNil(o.AgentId) {
		var ret string
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPorts) GetAgentIdOk() (*string, bool) {
	if o == nil || IsNil(o.AgentId) {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *SyscollectorPorts) HasAgentId() bool {
	if o != nil && !IsNil(o.AgentId) {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given string and assigns it to the AgentId field.
func (o *SyscollectorPorts) SetAgentId(v string) {
	o.AgentId = &v
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *SyscollectorPorts) GetPid() int32 {
	if o == nil || IsNil(o.Pid) {
		var ret int32
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPorts) GetPidOk() (*int32, bool) {
	if o == nil || IsNil(o.Pid) {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *SyscollectorPorts) HasPid() bool {
	if o != nil && !IsNil(o.Pid) {
		return true
	}

	return false
}

// SetPid gets a reference to the given int32 and assigns it to the Pid field.
func (o *SyscollectorPorts) SetPid(v int32) {
	o.Pid = &v
}

// GetProcess returns the Process field value if set, zero value otherwise.
func (o *SyscollectorPorts) GetProcess() string {
	if o == nil || IsNil(o.Process) {
		var ret string
		return ret
	}
	return *o.Process
}

// GetProcessOk returns a tuple with the Process field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPorts) GetProcessOk() (*string, bool) {
	if o == nil || IsNil(o.Process) {
		return nil, false
	}
	return o.Process, true
}

// HasProcess returns a boolean if a field has been set.
func (o *SyscollectorPorts) HasProcess() bool {
	if o != nil && !IsNil(o.Process) {
		return true
	}

	return false
}

// SetProcess gets a reference to the given string and assigns it to the Process field.
func (o *SyscollectorPorts) SetProcess(v string) {
	o.Process = &v
}

func (o SyscollectorPorts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyscollectorPorts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Inode) {
		toSerialize["inode"] = o.Inode
	}
	if !IsNil(o.Local) {
		toSerialize["local"] = o.Local
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.Remote) {
		toSerialize["remote"] = o.Remote
	}
	if !IsNil(o.RxQueue) {
		toSerialize["rx_queue"] = o.RxQueue
	}
	if !IsNil(o.Scan) {
		toSerialize["scan"] = o.Scan
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.TxQueue) {
		toSerialize["tx_queue"] = o.TxQueue
	}
	if !IsNil(o.AgentId) {
		toSerialize["agent_id"] = o.AgentId
	}
	if !IsNil(o.Pid) {
		toSerialize["pid"] = o.Pid
	}
	if !IsNil(o.Process) {
		toSerialize["process"] = o.Process
	}
	return toSerialize, nil
}

type NullableSyscollectorPorts struct {
	value *SyscollectorPorts
	isSet bool
}

func (v NullableSyscollectorPorts) Get() *SyscollectorPorts {
	return v.value
}

func (v *NullableSyscollectorPorts) Set(val *SyscollectorPorts) {
	v.value = val
	v.isSet = true
}

func (v NullableSyscollectorPorts) IsSet() bool {
	return v.isSet
}

func (v *NullableSyscollectorPorts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyscollectorPorts(val *SyscollectorPorts) *NullableSyscollectorPorts {
	return &NullableSyscollectorPorts{value: val, isSet: true}
}

func (v NullableSyscollectorPorts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyscollectorPorts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


