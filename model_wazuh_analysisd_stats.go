/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the WazuhAnalysisdStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WazuhAnalysisdStats{}

// WazuhAnalysisdStats struct for WazuhAnalysisdStats
type WazuhAnalysisdStats struct {
	// Pending to write in disk alerts queue size
	AlertsQueueSize *float32 `json:"alerts_queue_size,omitempty"`
	// If an event matches a rule, an alert is raised. The alerts are pushed to a _pending to write in disk alerts_ queue. This variable shows usage of that queue
	AlertsQueueUsage *float32 `json:"alerts_queue_usage,omitempty"`
	// Total number of alerts written in disk during the last 5 seconds
	AlertsWritten *float32 `json:"alerts_written,omitempty"`
	// _Events to write in the archives.log_ queue size
	ArchivesQueueSize *float32 `json:"archives_queue_size,omitempty"`
	// _Events to write in the archives.log_ queue usage
	ArchivesQueueUsage *float32 `json:"archives_queue_usage,omitempty"`
	// Non-catalogued events queue size
	EventQueueSize *float32 `json:"event_queue_size,omitempty"`
	// Same as `syscheck_queue_usage` but for events not catalogued in any of the previously mentioned queues
	EventQueueUsage *float32 `json:"event_queue_usage,omitempty"`
	// Discarded events because they didn't match any rule in the ruleset
	EventsDropped *float32 `json:"events_dropped,omitempty"`
	// Total number of events processed (i.e. matched against Wazuh ruleset) in the last 5 seconds
	EventsProcessed *float32 `json:"events_processed,omitempty"`
	// Events received in `analysisd` from the rest of modules in the last 5 seconds
	EventsReceived *float32 `json:"events_received,omitempty"`
	// _Events to write in the firewall log_ queue size
	FirewallQueueSize *float32 `json:"firewall_queue_size,omitempty"`
	// Percentage of use in the queue of events to write in the firewall log
	FirewallQueueUsage *float32 `json:"firewall_queue_usage,omitempty"`
	// Same as `alerts_written` but focusing on firewall alerts
	FirewallWritten *float32 `json:"firewall_written,omitempty"`
	// Same as `alerts_written` but focusing on [FTS alerts] (https://documentation.wazuh.com/4.12/user-manual/ruleset/ruleset-xml-syntax/decoders.html?highlight=fts #fts)
	FtsWritten *float32 `json:"fts_written,omitempty"`
	// Hostinfo events queue size
	HostinfoQueueSize *float32 `json:"hostinfo_queue_size,omitempty"`
	// Same as `syscheck_queue_usage` but for hostinfo events
	HostinfoQueueUsage *float32 `json:"hostinfo_queue_usage,omitempty"`
	// Same as `total_events_decoded` but for non-catalogued events
	OtherEventsDecoded *float32 `json:"other_events_decoded,omitempty"`
	// Same as `total_events_decoded` but for rootcheck events
	RootcheckEventsDecoded *float32 `json:"rootcheck_events_decoded,omitempty"`
	// Rootcheck events queue size
	RootcheckQueueSize *float32 `json:"rootcheck_queue_size,omitempty"`
	// Same as `syscheck_queue_usage` but for rootcheck events
	RootcheckQueueUsage *float32 `json:"rootcheck_queue_usage,omitempty"`
	// Pending to process events queue size
	RuleMatchingQueueSize *float32 `json:"rule_matching_queue_size,omitempty"`
	// After decoding, events are pushed to a _pending to process_ queue which will match the events against the Wazuh ruleset to raise alerts. This variable shows usage of that queue
	RuleMatchingQueueUsage *float32 `json:"rule_matching_queue_usage,omitempty"`
	// Same as `total_events_decoded` but for policy monitoring events
	ScaEventsDecoded *float32 `json:"sca_events_decoded,omitempty"`
	// Policy monitoring events queue size
	ScaQueueSize *float32 `json:"sca_queue_size,omitempty"`
	// Same as `syscheck_queue_usage` but for policy monitoring events
	ScaQueueUsage *float32 `json:"sca_queue_usage,omitempty"`
	// Stats log queue size
	StatisticalQueueSize *float32 `json:"statistical_queue_size,omitempty"`
	// Stats log queue usage
	StatisticalQueueUsage *float32 `json:"statistical_queue_usage,omitempty"`
	// Same as `total_events_decoded` but for FIM events
	SyscheckEventsDecoded *float32 `json:"syscheck_events_decoded,omitempty"`
	// Syscheck events queue size
	SyscheckQueueSize *float32 `json:"syscheck_queue_size,omitempty"`
	// Percentage of use in the syscheck events queue pending to be decoded. Events are discarded when the queue is full
	SyscheckQueueUsage *float32 `json:"syscheck_queue_usage,omitempty"`
	// Same as `total_events_decoded` but for system inventory events
	SyscollectorEventsDecoded *float32 `json:"syscollector_events_decoded,omitempty"`
	// System inventory events queue size
	SyscollectorQueueSize *float32 `json:"syscollector_queue_size,omitempty"`
	// Same as `syscheck_queue_usage` but for system inventory events
	SyscollectorQueueUsage *float32 `json:"syscollector_queue_usage,omitempty"`
	// Total events decoded in the last 5 seconds. This number is not accumulative, the number in the following 5 seconds can be lower than the previous one
	TotalEventsDecoded *float32 `json:"total_events_decoded,omitempty"`
	// Same as `total_events_decoded` but for Windows events
	WinevtEventsDecoded *float32 `json:"winevt_events_decoded,omitempty"`
	// Windows events queue size
	WinevtQueueSize *float32 `json:"winevt_queue_size,omitempty"`
	// Same as `syscheck_queue_usage` but for Windows events
	WinevtQueueUsage *float32 `json:"winevt_queue_usage,omitempty"`
}

// NewWazuhAnalysisdStats instantiates a new WazuhAnalysisdStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWazuhAnalysisdStats() *WazuhAnalysisdStats {
	this := WazuhAnalysisdStats{}
	return &this
}

// NewWazuhAnalysisdStatsWithDefaults instantiates a new WazuhAnalysisdStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWazuhAnalysisdStatsWithDefaults() *WazuhAnalysisdStats {
	this := WazuhAnalysisdStats{}
	return &this
}

// GetAlertsQueueSize returns the AlertsQueueSize field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetAlertsQueueSize() float32 {
	if o == nil || IsNil(o.AlertsQueueSize) {
		var ret float32
		return ret
	}
	return *o.AlertsQueueSize
}

// GetAlertsQueueSizeOk returns a tuple with the AlertsQueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetAlertsQueueSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.AlertsQueueSize) {
		return nil, false
	}
	return o.AlertsQueueSize, true
}

// HasAlertsQueueSize returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasAlertsQueueSize() bool {
	if o != nil && !IsNil(o.AlertsQueueSize) {
		return true
	}

	return false
}

// SetAlertsQueueSize gets a reference to the given float32 and assigns it to the AlertsQueueSize field.
func (o *WazuhAnalysisdStats) SetAlertsQueueSize(v float32) {
	o.AlertsQueueSize = &v
}

// GetAlertsQueueUsage returns the AlertsQueueUsage field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetAlertsQueueUsage() float32 {
	if o == nil || IsNil(o.AlertsQueueUsage) {
		var ret float32
		return ret
	}
	return *o.AlertsQueueUsage
}

// GetAlertsQueueUsageOk returns a tuple with the AlertsQueueUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetAlertsQueueUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.AlertsQueueUsage) {
		return nil, false
	}
	return o.AlertsQueueUsage, true
}

// HasAlertsQueueUsage returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasAlertsQueueUsage() bool {
	if o != nil && !IsNil(o.AlertsQueueUsage) {
		return true
	}

	return false
}

// SetAlertsQueueUsage gets a reference to the given float32 and assigns it to the AlertsQueueUsage field.
func (o *WazuhAnalysisdStats) SetAlertsQueueUsage(v float32) {
	o.AlertsQueueUsage = &v
}

// GetAlertsWritten returns the AlertsWritten field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetAlertsWritten() float32 {
	if o == nil || IsNil(o.AlertsWritten) {
		var ret float32
		return ret
	}
	return *o.AlertsWritten
}

// GetAlertsWrittenOk returns a tuple with the AlertsWritten field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetAlertsWrittenOk() (*float32, bool) {
	if o == nil || IsNil(o.AlertsWritten) {
		return nil, false
	}
	return o.AlertsWritten, true
}

// HasAlertsWritten returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasAlertsWritten() bool {
	if o != nil && !IsNil(o.AlertsWritten) {
		return true
	}

	return false
}

// SetAlertsWritten gets a reference to the given float32 and assigns it to the AlertsWritten field.
func (o *WazuhAnalysisdStats) SetAlertsWritten(v float32) {
	o.AlertsWritten = &v
}

// GetArchivesQueueSize returns the ArchivesQueueSize field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetArchivesQueueSize() float32 {
	if o == nil || IsNil(o.ArchivesQueueSize) {
		var ret float32
		return ret
	}
	return *o.ArchivesQueueSize
}

// GetArchivesQueueSizeOk returns a tuple with the ArchivesQueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetArchivesQueueSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.ArchivesQueueSize) {
		return nil, false
	}
	return o.ArchivesQueueSize, true
}

// HasArchivesQueueSize returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasArchivesQueueSize() bool {
	if o != nil && !IsNil(o.ArchivesQueueSize) {
		return true
	}

	return false
}

// SetArchivesQueueSize gets a reference to the given float32 and assigns it to the ArchivesQueueSize field.
func (o *WazuhAnalysisdStats) SetArchivesQueueSize(v float32) {
	o.ArchivesQueueSize = &v
}

// GetArchivesQueueUsage returns the ArchivesQueueUsage field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetArchivesQueueUsage() float32 {
	if o == nil || IsNil(o.ArchivesQueueUsage) {
		var ret float32
		return ret
	}
	return *o.ArchivesQueueUsage
}

// GetArchivesQueueUsageOk returns a tuple with the ArchivesQueueUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetArchivesQueueUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.ArchivesQueueUsage) {
		return nil, false
	}
	return o.ArchivesQueueUsage, true
}

// HasArchivesQueueUsage returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasArchivesQueueUsage() bool {
	if o != nil && !IsNil(o.ArchivesQueueUsage) {
		return true
	}

	return false
}

// SetArchivesQueueUsage gets a reference to the given float32 and assigns it to the ArchivesQueueUsage field.
func (o *WazuhAnalysisdStats) SetArchivesQueueUsage(v float32) {
	o.ArchivesQueueUsage = &v
}

// GetEventQueueSize returns the EventQueueSize field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetEventQueueSize() float32 {
	if o == nil || IsNil(o.EventQueueSize) {
		var ret float32
		return ret
	}
	return *o.EventQueueSize
}

// GetEventQueueSizeOk returns a tuple with the EventQueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetEventQueueSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.EventQueueSize) {
		return nil, false
	}
	return o.EventQueueSize, true
}

// HasEventQueueSize returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasEventQueueSize() bool {
	if o != nil && !IsNil(o.EventQueueSize) {
		return true
	}

	return false
}

// SetEventQueueSize gets a reference to the given float32 and assigns it to the EventQueueSize field.
func (o *WazuhAnalysisdStats) SetEventQueueSize(v float32) {
	o.EventQueueSize = &v
}

// GetEventQueueUsage returns the EventQueueUsage field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetEventQueueUsage() float32 {
	if o == nil || IsNil(o.EventQueueUsage) {
		var ret float32
		return ret
	}
	return *o.EventQueueUsage
}

// GetEventQueueUsageOk returns a tuple with the EventQueueUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetEventQueueUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.EventQueueUsage) {
		return nil, false
	}
	return o.EventQueueUsage, true
}

// HasEventQueueUsage returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasEventQueueUsage() bool {
	if o != nil && !IsNil(o.EventQueueUsage) {
		return true
	}

	return false
}

// SetEventQueueUsage gets a reference to the given float32 and assigns it to the EventQueueUsage field.
func (o *WazuhAnalysisdStats) SetEventQueueUsage(v float32) {
	o.EventQueueUsage = &v
}

// GetEventsDropped returns the EventsDropped field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetEventsDropped() float32 {
	if o == nil || IsNil(o.EventsDropped) {
		var ret float32
		return ret
	}
	return *o.EventsDropped
}

// GetEventsDroppedOk returns a tuple with the EventsDropped field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetEventsDroppedOk() (*float32, bool) {
	if o == nil || IsNil(o.EventsDropped) {
		return nil, false
	}
	return o.EventsDropped, true
}

// HasEventsDropped returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasEventsDropped() bool {
	if o != nil && !IsNil(o.EventsDropped) {
		return true
	}

	return false
}

// SetEventsDropped gets a reference to the given float32 and assigns it to the EventsDropped field.
func (o *WazuhAnalysisdStats) SetEventsDropped(v float32) {
	o.EventsDropped = &v
}

// GetEventsProcessed returns the EventsProcessed field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetEventsProcessed() float32 {
	if o == nil || IsNil(o.EventsProcessed) {
		var ret float32
		return ret
	}
	return *o.EventsProcessed
}

// GetEventsProcessedOk returns a tuple with the EventsProcessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetEventsProcessedOk() (*float32, bool) {
	if o == nil || IsNil(o.EventsProcessed) {
		return nil, false
	}
	return o.EventsProcessed, true
}

// HasEventsProcessed returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasEventsProcessed() bool {
	if o != nil && !IsNil(o.EventsProcessed) {
		return true
	}

	return false
}

// SetEventsProcessed gets a reference to the given float32 and assigns it to the EventsProcessed field.
func (o *WazuhAnalysisdStats) SetEventsProcessed(v float32) {
	o.EventsProcessed = &v
}

// GetEventsReceived returns the EventsReceived field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetEventsReceived() float32 {
	if o == nil || IsNil(o.EventsReceived) {
		var ret float32
		return ret
	}
	return *o.EventsReceived
}

// GetEventsReceivedOk returns a tuple with the EventsReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetEventsReceivedOk() (*float32, bool) {
	if o == nil || IsNil(o.EventsReceived) {
		return nil, false
	}
	return o.EventsReceived, true
}

// HasEventsReceived returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasEventsReceived() bool {
	if o != nil && !IsNil(o.EventsReceived) {
		return true
	}

	return false
}

// SetEventsReceived gets a reference to the given float32 and assigns it to the EventsReceived field.
func (o *WazuhAnalysisdStats) SetEventsReceived(v float32) {
	o.EventsReceived = &v
}

// GetFirewallQueueSize returns the FirewallQueueSize field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetFirewallQueueSize() float32 {
	if o == nil || IsNil(o.FirewallQueueSize) {
		var ret float32
		return ret
	}
	return *o.FirewallQueueSize
}

// GetFirewallQueueSizeOk returns a tuple with the FirewallQueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetFirewallQueueSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.FirewallQueueSize) {
		return nil, false
	}
	return o.FirewallQueueSize, true
}

// HasFirewallQueueSize returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasFirewallQueueSize() bool {
	if o != nil && !IsNil(o.FirewallQueueSize) {
		return true
	}

	return false
}

// SetFirewallQueueSize gets a reference to the given float32 and assigns it to the FirewallQueueSize field.
func (o *WazuhAnalysisdStats) SetFirewallQueueSize(v float32) {
	o.FirewallQueueSize = &v
}

// GetFirewallQueueUsage returns the FirewallQueueUsage field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetFirewallQueueUsage() float32 {
	if o == nil || IsNil(o.FirewallQueueUsage) {
		var ret float32
		return ret
	}
	return *o.FirewallQueueUsage
}

// GetFirewallQueueUsageOk returns a tuple with the FirewallQueueUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetFirewallQueueUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.FirewallQueueUsage) {
		return nil, false
	}
	return o.FirewallQueueUsage, true
}

// HasFirewallQueueUsage returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasFirewallQueueUsage() bool {
	if o != nil && !IsNil(o.FirewallQueueUsage) {
		return true
	}

	return false
}

// SetFirewallQueueUsage gets a reference to the given float32 and assigns it to the FirewallQueueUsage field.
func (o *WazuhAnalysisdStats) SetFirewallQueueUsage(v float32) {
	o.FirewallQueueUsage = &v
}

// GetFirewallWritten returns the FirewallWritten field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetFirewallWritten() float32 {
	if o == nil || IsNil(o.FirewallWritten) {
		var ret float32
		return ret
	}
	return *o.FirewallWritten
}

// GetFirewallWrittenOk returns a tuple with the FirewallWritten field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetFirewallWrittenOk() (*float32, bool) {
	if o == nil || IsNil(o.FirewallWritten) {
		return nil, false
	}
	return o.FirewallWritten, true
}

// HasFirewallWritten returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasFirewallWritten() bool {
	if o != nil && !IsNil(o.FirewallWritten) {
		return true
	}

	return false
}

// SetFirewallWritten gets a reference to the given float32 and assigns it to the FirewallWritten field.
func (o *WazuhAnalysisdStats) SetFirewallWritten(v float32) {
	o.FirewallWritten = &v
}

// GetFtsWritten returns the FtsWritten field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetFtsWritten() float32 {
	if o == nil || IsNil(o.FtsWritten) {
		var ret float32
		return ret
	}
	return *o.FtsWritten
}

// GetFtsWrittenOk returns a tuple with the FtsWritten field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetFtsWrittenOk() (*float32, bool) {
	if o == nil || IsNil(o.FtsWritten) {
		return nil, false
	}
	return o.FtsWritten, true
}

// HasFtsWritten returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasFtsWritten() bool {
	if o != nil && !IsNil(o.FtsWritten) {
		return true
	}

	return false
}

// SetFtsWritten gets a reference to the given float32 and assigns it to the FtsWritten field.
func (o *WazuhAnalysisdStats) SetFtsWritten(v float32) {
	o.FtsWritten = &v
}

// GetHostinfoQueueSize returns the HostinfoQueueSize field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetHostinfoQueueSize() float32 {
	if o == nil || IsNil(o.HostinfoQueueSize) {
		var ret float32
		return ret
	}
	return *o.HostinfoQueueSize
}

// GetHostinfoQueueSizeOk returns a tuple with the HostinfoQueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetHostinfoQueueSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.HostinfoQueueSize) {
		return nil, false
	}
	return o.HostinfoQueueSize, true
}

// HasHostinfoQueueSize returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasHostinfoQueueSize() bool {
	if o != nil && !IsNil(o.HostinfoQueueSize) {
		return true
	}

	return false
}

// SetHostinfoQueueSize gets a reference to the given float32 and assigns it to the HostinfoQueueSize field.
func (o *WazuhAnalysisdStats) SetHostinfoQueueSize(v float32) {
	o.HostinfoQueueSize = &v
}

// GetHostinfoQueueUsage returns the HostinfoQueueUsage field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetHostinfoQueueUsage() float32 {
	if o == nil || IsNil(o.HostinfoQueueUsage) {
		var ret float32
		return ret
	}
	return *o.HostinfoQueueUsage
}

// GetHostinfoQueueUsageOk returns a tuple with the HostinfoQueueUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetHostinfoQueueUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HostinfoQueueUsage) {
		return nil, false
	}
	return o.HostinfoQueueUsage, true
}

// HasHostinfoQueueUsage returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasHostinfoQueueUsage() bool {
	if o != nil && !IsNil(o.HostinfoQueueUsage) {
		return true
	}

	return false
}

// SetHostinfoQueueUsage gets a reference to the given float32 and assigns it to the HostinfoQueueUsage field.
func (o *WazuhAnalysisdStats) SetHostinfoQueueUsage(v float32) {
	o.HostinfoQueueUsage = &v
}

// GetOtherEventsDecoded returns the OtherEventsDecoded field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetOtherEventsDecoded() float32 {
	if o == nil || IsNil(o.OtherEventsDecoded) {
		var ret float32
		return ret
	}
	return *o.OtherEventsDecoded
}

// GetOtherEventsDecodedOk returns a tuple with the OtherEventsDecoded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetOtherEventsDecodedOk() (*float32, bool) {
	if o == nil || IsNil(o.OtherEventsDecoded) {
		return nil, false
	}
	return o.OtherEventsDecoded, true
}

// HasOtherEventsDecoded returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasOtherEventsDecoded() bool {
	if o != nil && !IsNil(o.OtherEventsDecoded) {
		return true
	}

	return false
}

// SetOtherEventsDecoded gets a reference to the given float32 and assigns it to the OtherEventsDecoded field.
func (o *WazuhAnalysisdStats) SetOtherEventsDecoded(v float32) {
	o.OtherEventsDecoded = &v
}

// GetRootcheckEventsDecoded returns the RootcheckEventsDecoded field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetRootcheckEventsDecoded() float32 {
	if o == nil || IsNil(o.RootcheckEventsDecoded) {
		var ret float32
		return ret
	}
	return *o.RootcheckEventsDecoded
}

// GetRootcheckEventsDecodedOk returns a tuple with the RootcheckEventsDecoded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetRootcheckEventsDecodedOk() (*float32, bool) {
	if o == nil || IsNil(o.RootcheckEventsDecoded) {
		return nil, false
	}
	return o.RootcheckEventsDecoded, true
}

// HasRootcheckEventsDecoded returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasRootcheckEventsDecoded() bool {
	if o != nil && !IsNil(o.RootcheckEventsDecoded) {
		return true
	}

	return false
}

// SetRootcheckEventsDecoded gets a reference to the given float32 and assigns it to the RootcheckEventsDecoded field.
func (o *WazuhAnalysisdStats) SetRootcheckEventsDecoded(v float32) {
	o.RootcheckEventsDecoded = &v
}

// GetRootcheckQueueSize returns the RootcheckQueueSize field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetRootcheckQueueSize() float32 {
	if o == nil || IsNil(o.RootcheckQueueSize) {
		var ret float32
		return ret
	}
	return *o.RootcheckQueueSize
}

// GetRootcheckQueueSizeOk returns a tuple with the RootcheckQueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetRootcheckQueueSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.RootcheckQueueSize) {
		return nil, false
	}
	return o.RootcheckQueueSize, true
}

// HasRootcheckQueueSize returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasRootcheckQueueSize() bool {
	if o != nil && !IsNil(o.RootcheckQueueSize) {
		return true
	}

	return false
}

// SetRootcheckQueueSize gets a reference to the given float32 and assigns it to the RootcheckQueueSize field.
func (o *WazuhAnalysisdStats) SetRootcheckQueueSize(v float32) {
	o.RootcheckQueueSize = &v
}

// GetRootcheckQueueUsage returns the RootcheckQueueUsage field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetRootcheckQueueUsage() float32 {
	if o == nil || IsNil(o.RootcheckQueueUsage) {
		var ret float32
		return ret
	}
	return *o.RootcheckQueueUsage
}

// GetRootcheckQueueUsageOk returns a tuple with the RootcheckQueueUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetRootcheckQueueUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.RootcheckQueueUsage) {
		return nil, false
	}
	return o.RootcheckQueueUsage, true
}

// HasRootcheckQueueUsage returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasRootcheckQueueUsage() bool {
	if o != nil && !IsNil(o.RootcheckQueueUsage) {
		return true
	}

	return false
}

// SetRootcheckQueueUsage gets a reference to the given float32 and assigns it to the RootcheckQueueUsage field.
func (o *WazuhAnalysisdStats) SetRootcheckQueueUsage(v float32) {
	o.RootcheckQueueUsage = &v
}

// GetRuleMatchingQueueSize returns the RuleMatchingQueueSize field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetRuleMatchingQueueSize() float32 {
	if o == nil || IsNil(o.RuleMatchingQueueSize) {
		var ret float32
		return ret
	}
	return *o.RuleMatchingQueueSize
}

// GetRuleMatchingQueueSizeOk returns a tuple with the RuleMatchingQueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetRuleMatchingQueueSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.RuleMatchingQueueSize) {
		return nil, false
	}
	return o.RuleMatchingQueueSize, true
}

// HasRuleMatchingQueueSize returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasRuleMatchingQueueSize() bool {
	if o != nil && !IsNil(o.RuleMatchingQueueSize) {
		return true
	}

	return false
}

// SetRuleMatchingQueueSize gets a reference to the given float32 and assigns it to the RuleMatchingQueueSize field.
func (o *WazuhAnalysisdStats) SetRuleMatchingQueueSize(v float32) {
	o.RuleMatchingQueueSize = &v
}

// GetRuleMatchingQueueUsage returns the RuleMatchingQueueUsage field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetRuleMatchingQueueUsage() float32 {
	if o == nil || IsNil(o.RuleMatchingQueueUsage) {
		var ret float32
		return ret
	}
	return *o.RuleMatchingQueueUsage
}

// GetRuleMatchingQueueUsageOk returns a tuple with the RuleMatchingQueueUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetRuleMatchingQueueUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.RuleMatchingQueueUsage) {
		return nil, false
	}
	return o.RuleMatchingQueueUsage, true
}

// HasRuleMatchingQueueUsage returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasRuleMatchingQueueUsage() bool {
	if o != nil && !IsNil(o.RuleMatchingQueueUsage) {
		return true
	}

	return false
}

// SetRuleMatchingQueueUsage gets a reference to the given float32 and assigns it to the RuleMatchingQueueUsage field.
func (o *WazuhAnalysisdStats) SetRuleMatchingQueueUsage(v float32) {
	o.RuleMatchingQueueUsage = &v
}

// GetScaEventsDecoded returns the ScaEventsDecoded field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetScaEventsDecoded() float32 {
	if o == nil || IsNil(o.ScaEventsDecoded) {
		var ret float32
		return ret
	}
	return *o.ScaEventsDecoded
}

// GetScaEventsDecodedOk returns a tuple with the ScaEventsDecoded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetScaEventsDecodedOk() (*float32, bool) {
	if o == nil || IsNil(o.ScaEventsDecoded) {
		return nil, false
	}
	return o.ScaEventsDecoded, true
}

// HasScaEventsDecoded returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasScaEventsDecoded() bool {
	if o != nil && !IsNil(o.ScaEventsDecoded) {
		return true
	}

	return false
}

// SetScaEventsDecoded gets a reference to the given float32 and assigns it to the ScaEventsDecoded field.
func (o *WazuhAnalysisdStats) SetScaEventsDecoded(v float32) {
	o.ScaEventsDecoded = &v
}

// GetScaQueueSize returns the ScaQueueSize field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetScaQueueSize() float32 {
	if o == nil || IsNil(o.ScaQueueSize) {
		var ret float32
		return ret
	}
	return *o.ScaQueueSize
}

// GetScaQueueSizeOk returns a tuple with the ScaQueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetScaQueueSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.ScaQueueSize) {
		return nil, false
	}
	return o.ScaQueueSize, true
}

// HasScaQueueSize returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasScaQueueSize() bool {
	if o != nil && !IsNil(o.ScaQueueSize) {
		return true
	}

	return false
}

// SetScaQueueSize gets a reference to the given float32 and assigns it to the ScaQueueSize field.
func (o *WazuhAnalysisdStats) SetScaQueueSize(v float32) {
	o.ScaQueueSize = &v
}

// GetScaQueueUsage returns the ScaQueueUsage field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetScaQueueUsage() float32 {
	if o == nil || IsNil(o.ScaQueueUsage) {
		var ret float32
		return ret
	}
	return *o.ScaQueueUsage
}

// GetScaQueueUsageOk returns a tuple with the ScaQueueUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetScaQueueUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.ScaQueueUsage) {
		return nil, false
	}
	return o.ScaQueueUsage, true
}

// HasScaQueueUsage returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasScaQueueUsage() bool {
	if o != nil && !IsNil(o.ScaQueueUsage) {
		return true
	}

	return false
}

// SetScaQueueUsage gets a reference to the given float32 and assigns it to the ScaQueueUsage field.
func (o *WazuhAnalysisdStats) SetScaQueueUsage(v float32) {
	o.ScaQueueUsage = &v
}

// GetStatisticalQueueSize returns the StatisticalQueueSize field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetStatisticalQueueSize() float32 {
	if o == nil || IsNil(o.StatisticalQueueSize) {
		var ret float32
		return ret
	}
	return *o.StatisticalQueueSize
}

// GetStatisticalQueueSizeOk returns a tuple with the StatisticalQueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetStatisticalQueueSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.StatisticalQueueSize) {
		return nil, false
	}
	return o.StatisticalQueueSize, true
}

// HasStatisticalQueueSize returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasStatisticalQueueSize() bool {
	if o != nil && !IsNil(o.StatisticalQueueSize) {
		return true
	}

	return false
}

// SetStatisticalQueueSize gets a reference to the given float32 and assigns it to the StatisticalQueueSize field.
func (o *WazuhAnalysisdStats) SetStatisticalQueueSize(v float32) {
	o.StatisticalQueueSize = &v
}

// GetStatisticalQueueUsage returns the StatisticalQueueUsage field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetStatisticalQueueUsage() float32 {
	if o == nil || IsNil(o.StatisticalQueueUsage) {
		var ret float32
		return ret
	}
	return *o.StatisticalQueueUsage
}

// GetStatisticalQueueUsageOk returns a tuple with the StatisticalQueueUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetStatisticalQueueUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.StatisticalQueueUsage) {
		return nil, false
	}
	return o.StatisticalQueueUsage, true
}

// HasStatisticalQueueUsage returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasStatisticalQueueUsage() bool {
	if o != nil && !IsNil(o.StatisticalQueueUsage) {
		return true
	}

	return false
}

// SetStatisticalQueueUsage gets a reference to the given float32 and assigns it to the StatisticalQueueUsage field.
func (o *WazuhAnalysisdStats) SetStatisticalQueueUsage(v float32) {
	o.StatisticalQueueUsage = &v
}

// GetSyscheckEventsDecoded returns the SyscheckEventsDecoded field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetSyscheckEventsDecoded() float32 {
	if o == nil || IsNil(o.SyscheckEventsDecoded) {
		var ret float32
		return ret
	}
	return *o.SyscheckEventsDecoded
}

// GetSyscheckEventsDecodedOk returns a tuple with the SyscheckEventsDecoded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetSyscheckEventsDecodedOk() (*float32, bool) {
	if o == nil || IsNil(o.SyscheckEventsDecoded) {
		return nil, false
	}
	return o.SyscheckEventsDecoded, true
}

// HasSyscheckEventsDecoded returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasSyscheckEventsDecoded() bool {
	if o != nil && !IsNil(o.SyscheckEventsDecoded) {
		return true
	}

	return false
}

// SetSyscheckEventsDecoded gets a reference to the given float32 and assigns it to the SyscheckEventsDecoded field.
func (o *WazuhAnalysisdStats) SetSyscheckEventsDecoded(v float32) {
	o.SyscheckEventsDecoded = &v
}

// GetSyscheckQueueSize returns the SyscheckQueueSize field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetSyscheckQueueSize() float32 {
	if o == nil || IsNil(o.SyscheckQueueSize) {
		var ret float32
		return ret
	}
	return *o.SyscheckQueueSize
}

// GetSyscheckQueueSizeOk returns a tuple with the SyscheckQueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetSyscheckQueueSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.SyscheckQueueSize) {
		return nil, false
	}
	return o.SyscheckQueueSize, true
}

// HasSyscheckQueueSize returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasSyscheckQueueSize() bool {
	if o != nil && !IsNil(o.SyscheckQueueSize) {
		return true
	}

	return false
}

// SetSyscheckQueueSize gets a reference to the given float32 and assigns it to the SyscheckQueueSize field.
func (o *WazuhAnalysisdStats) SetSyscheckQueueSize(v float32) {
	o.SyscheckQueueSize = &v
}

// GetSyscheckQueueUsage returns the SyscheckQueueUsage field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetSyscheckQueueUsage() float32 {
	if o == nil || IsNil(o.SyscheckQueueUsage) {
		var ret float32
		return ret
	}
	return *o.SyscheckQueueUsage
}

// GetSyscheckQueueUsageOk returns a tuple with the SyscheckQueueUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetSyscheckQueueUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.SyscheckQueueUsage) {
		return nil, false
	}
	return o.SyscheckQueueUsage, true
}

// HasSyscheckQueueUsage returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasSyscheckQueueUsage() bool {
	if o != nil && !IsNil(o.SyscheckQueueUsage) {
		return true
	}

	return false
}

// SetSyscheckQueueUsage gets a reference to the given float32 and assigns it to the SyscheckQueueUsage field.
func (o *WazuhAnalysisdStats) SetSyscheckQueueUsage(v float32) {
	o.SyscheckQueueUsage = &v
}

// GetSyscollectorEventsDecoded returns the SyscollectorEventsDecoded field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetSyscollectorEventsDecoded() float32 {
	if o == nil || IsNil(o.SyscollectorEventsDecoded) {
		var ret float32
		return ret
	}
	return *o.SyscollectorEventsDecoded
}

// GetSyscollectorEventsDecodedOk returns a tuple with the SyscollectorEventsDecoded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetSyscollectorEventsDecodedOk() (*float32, bool) {
	if o == nil || IsNil(o.SyscollectorEventsDecoded) {
		return nil, false
	}
	return o.SyscollectorEventsDecoded, true
}

// HasSyscollectorEventsDecoded returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasSyscollectorEventsDecoded() bool {
	if o != nil && !IsNil(o.SyscollectorEventsDecoded) {
		return true
	}

	return false
}

// SetSyscollectorEventsDecoded gets a reference to the given float32 and assigns it to the SyscollectorEventsDecoded field.
func (o *WazuhAnalysisdStats) SetSyscollectorEventsDecoded(v float32) {
	o.SyscollectorEventsDecoded = &v
}

// GetSyscollectorQueueSize returns the SyscollectorQueueSize field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetSyscollectorQueueSize() float32 {
	if o == nil || IsNil(o.SyscollectorQueueSize) {
		var ret float32
		return ret
	}
	return *o.SyscollectorQueueSize
}

// GetSyscollectorQueueSizeOk returns a tuple with the SyscollectorQueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetSyscollectorQueueSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.SyscollectorQueueSize) {
		return nil, false
	}
	return o.SyscollectorQueueSize, true
}

// HasSyscollectorQueueSize returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasSyscollectorQueueSize() bool {
	if o != nil && !IsNil(o.SyscollectorQueueSize) {
		return true
	}

	return false
}

// SetSyscollectorQueueSize gets a reference to the given float32 and assigns it to the SyscollectorQueueSize field.
func (o *WazuhAnalysisdStats) SetSyscollectorQueueSize(v float32) {
	o.SyscollectorQueueSize = &v
}

// GetSyscollectorQueueUsage returns the SyscollectorQueueUsage field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetSyscollectorQueueUsage() float32 {
	if o == nil || IsNil(o.SyscollectorQueueUsage) {
		var ret float32
		return ret
	}
	return *o.SyscollectorQueueUsage
}

// GetSyscollectorQueueUsageOk returns a tuple with the SyscollectorQueueUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetSyscollectorQueueUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.SyscollectorQueueUsage) {
		return nil, false
	}
	return o.SyscollectorQueueUsage, true
}

// HasSyscollectorQueueUsage returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasSyscollectorQueueUsage() bool {
	if o != nil && !IsNil(o.SyscollectorQueueUsage) {
		return true
	}

	return false
}

// SetSyscollectorQueueUsage gets a reference to the given float32 and assigns it to the SyscollectorQueueUsage field.
func (o *WazuhAnalysisdStats) SetSyscollectorQueueUsage(v float32) {
	o.SyscollectorQueueUsage = &v
}

// GetTotalEventsDecoded returns the TotalEventsDecoded field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetTotalEventsDecoded() float32 {
	if o == nil || IsNil(o.TotalEventsDecoded) {
		var ret float32
		return ret
	}
	return *o.TotalEventsDecoded
}

// GetTotalEventsDecodedOk returns a tuple with the TotalEventsDecoded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetTotalEventsDecodedOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalEventsDecoded) {
		return nil, false
	}
	return o.TotalEventsDecoded, true
}

// HasTotalEventsDecoded returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasTotalEventsDecoded() bool {
	if o != nil && !IsNil(o.TotalEventsDecoded) {
		return true
	}

	return false
}

// SetTotalEventsDecoded gets a reference to the given float32 and assigns it to the TotalEventsDecoded field.
func (o *WazuhAnalysisdStats) SetTotalEventsDecoded(v float32) {
	o.TotalEventsDecoded = &v
}

// GetWinevtEventsDecoded returns the WinevtEventsDecoded field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetWinevtEventsDecoded() float32 {
	if o == nil || IsNil(o.WinevtEventsDecoded) {
		var ret float32
		return ret
	}
	return *o.WinevtEventsDecoded
}

// GetWinevtEventsDecodedOk returns a tuple with the WinevtEventsDecoded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetWinevtEventsDecodedOk() (*float32, bool) {
	if o == nil || IsNil(o.WinevtEventsDecoded) {
		return nil, false
	}
	return o.WinevtEventsDecoded, true
}

// HasWinevtEventsDecoded returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasWinevtEventsDecoded() bool {
	if o != nil && !IsNil(o.WinevtEventsDecoded) {
		return true
	}

	return false
}

// SetWinevtEventsDecoded gets a reference to the given float32 and assigns it to the WinevtEventsDecoded field.
func (o *WazuhAnalysisdStats) SetWinevtEventsDecoded(v float32) {
	o.WinevtEventsDecoded = &v
}

// GetWinevtQueueSize returns the WinevtQueueSize field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetWinevtQueueSize() float32 {
	if o == nil || IsNil(o.WinevtQueueSize) {
		var ret float32
		return ret
	}
	return *o.WinevtQueueSize
}

// GetWinevtQueueSizeOk returns a tuple with the WinevtQueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetWinevtQueueSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.WinevtQueueSize) {
		return nil, false
	}
	return o.WinevtQueueSize, true
}

// HasWinevtQueueSize returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasWinevtQueueSize() bool {
	if o != nil && !IsNil(o.WinevtQueueSize) {
		return true
	}

	return false
}

// SetWinevtQueueSize gets a reference to the given float32 and assigns it to the WinevtQueueSize field.
func (o *WazuhAnalysisdStats) SetWinevtQueueSize(v float32) {
	o.WinevtQueueSize = &v
}

// GetWinevtQueueUsage returns the WinevtQueueUsage field value if set, zero value otherwise.
func (o *WazuhAnalysisdStats) GetWinevtQueueUsage() float32 {
	if o == nil || IsNil(o.WinevtQueueUsage) {
		var ret float32
		return ret
	}
	return *o.WinevtQueueUsage
}

// GetWinevtQueueUsageOk returns a tuple with the WinevtQueueUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStats) GetWinevtQueueUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.WinevtQueueUsage) {
		return nil, false
	}
	return o.WinevtQueueUsage, true
}

// HasWinevtQueueUsage returns a boolean if a field has been set.
func (o *WazuhAnalysisdStats) HasWinevtQueueUsage() bool {
	if o != nil && !IsNil(o.WinevtQueueUsage) {
		return true
	}

	return false
}

// SetWinevtQueueUsage gets a reference to the given float32 and assigns it to the WinevtQueueUsage field.
func (o *WazuhAnalysisdStats) SetWinevtQueueUsage(v float32) {
	o.WinevtQueueUsage = &v
}

func (o WazuhAnalysisdStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WazuhAnalysisdStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertsQueueSize) {
		toSerialize["alerts_queue_size"] = o.AlertsQueueSize
	}
	if !IsNil(o.AlertsQueueUsage) {
		toSerialize["alerts_queue_usage"] = o.AlertsQueueUsage
	}
	if !IsNil(o.AlertsWritten) {
		toSerialize["alerts_written"] = o.AlertsWritten
	}
	if !IsNil(o.ArchivesQueueSize) {
		toSerialize["archives_queue_size"] = o.ArchivesQueueSize
	}
	if !IsNil(o.ArchivesQueueUsage) {
		toSerialize["archives_queue_usage"] = o.ArchivesQueueUsage
	}
	if !IsNil(o.EventQueueSize) {
		toSerialize["event_queue_size"] = o.EventQueueSize
	}
	if !IsNil(o.EventQueueUsage) {
		toSerialize["event_queue_usage"] = o.EventQueueUsage
	}
	if !IsNil(o.EventsDropped) {
		toSerialize["events_dropped"] = o.EventsDropped
	}
	if !IsNil(o.EventsProcessed) {
		toSerialize["events_processed"] = o.EventsProcessed
	}
	if !IsNil(o.EventsReceived) {
		toSerialize["events_received"] = o.EventsReceived
	}
	if !IsNil(o.FirewallQueueSize) {
		toSerialize["firewall_queue_size"] = o.FirewallQueueSize
	}
	if !IsNil(o.FirewallQueueUsage) {
		toSerialize["firewall_queue_usage"] = o.FirewallQueueUsage
	}
	if !IsNil(o.FirewallWritten) {
		toSerialize["firewall_written"] = o.FirewallWritten
	}
	if !IsNil(o.FtsWritten) {
		toSerialize["fts_written"] = o.FtsWritten
	}
	if !IsNil(o.HostinfoQueueSize) {
		toSerialize["hostinfo_queue_size"] = o.HostinfoQueueSize
	}
	if !IsNil(o.HostinfoQueueUsage) {
		toSerialize["hostinfo_queue_usage"] = o.HostinfoQueueUsage
	}
	if !IsNil(o.OtherEventsDecoded) {
		toSerialize["other_events_decoded"] = o.OtherEventsDecoded
	}
	if !IsNil(o.RootcheckEventsDecoded) {
		toSerialize["rootcheck_events_decoded"] = o.RootcheckEventsDecoded
	}
	if !IsNil(o.RootcheckQueueSize) {
		toSerialize["rootcheck_queue_size"] = o.RootcheckQueueSize
	}
	if !IsNil(o.RootcheckQueueUsage) {
		toSerialize["rootcheck_queue_usage"] = o.RootcheckQueueUsage
	}
	if !IsNil(o.RuleMatchingQueueSize) {
		toSerialize["rule_matching_queue_size"] = o.RuleMatchingQueueSize
	}
	if !IsNil(o.RuleMatchingQueueUsage) {
		toSerialize["rule_matching_queue_usage"] = o.RuleMatchingQueueUsage
	}
	if !IsNil(o.ScaEventsDecoded) {
		toSerialize["sca_events_decoded"] = o.ScaEventsDecoded
	}
	if !IsNil(o.ScaQueueSize) {
		toSerialize["sca_queue_size"] = o.ScaQueueSize
	}
	if !IsNil(o.ScaQueueUsage) {
		toSerialize["sca_queue_usage"] = o.ScaQueueUsage
	}
	if !IsNil(o.StatisticalQueueSize) {
		toSerialize["statistical_queue_size"] = o.StatisticalQueueSize
	}
	if !IsNil(o.StatisticalQueueUsage) {
		toSerialize["statistical_queue_usage"] = o.StatisticalQueueUsage
	}
	if !IsNil(o.SyscheckEventsDecoded) {
		toSerialize["syscheck_events_decoded"] = o.SyscheckEventsDecoded
	}
	if !IsNil(o.SyscheckQueueSize) {
		toSerialize["syscheck_queue_size"] = o.SyscheckQueueSize
	}
	if !IsNil(o.SyscheckQueueUsage) {
		toSerialize["syscheck_queue_usage"] = o.SyscheckQueueUsage
	}
	if !IsNil(o.SyscollectorEventsDecoded) {
		toSerialize["syscollector_events_decoded"] = o.SyscollectorEventsDecoded
	}
	if !IsNil(o.SyscollectorQueueSize) {
		toSerialize["syscollector_queue_size"] = o.SyscollectorQueueSize
	}
	if !IsNil(o.SyscollectorQueueUsage) {
		toSerialize["syscollector_queue_usage"] = o.SyscollectorQueueUsage
	}
	if !IsNil(o.TotalEventsDecoded) {
		toSerialize["total_events_decoded"] = o.TotalEventsDecoded
	}
	if !IsNil(o.WinevtEventsDecoded) {
		toSerialize["winevt_events_decoded"] = o.WinevtEventsDecoded
	}
	if !IsNil(o.WinevtQueueSize) {
		toSerialize["winevt_queue_size"] = o.WinevtQueueSize
	}
	if !IsNil(o.WinevtQueueUsage) {
		toSerialize["winevt_queue_usage"] = o.WinevtQueueUsage
	}
	return toSerialize, nil
}

type NullableWazuhAnalysisdStats struct {
	value *WazuhAnalysisdStats
	isSet bool
}

func (v NullableWazuhAnalysisdStats) Get() *WazuhAnalysisdStats {
	return v.value
}

func (v *NullableWazuhAnalysisdStats) Set(val *WazuhAnalysisdStats) {
	v.value = val
	v.isSet = true
}

func (v NullableWazuhAnalysisdStats) IsSet() bool {
	return v.isSet
}

func (v *NullableWazuhAnalysisdStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWazuhAnalysisdStats(val *WazuhAnalysisdStats) *NullableWazuhAnalysisdStats {
	return &NullableWazuhAnalysisdStats{value: val, isSet: true}
}

func (v NullableWazuhAnalysisdStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWazuhAnalysisdStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


