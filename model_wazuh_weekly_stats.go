/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the WazuhWeeklyStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WazuhWeeklyStats{}

// WazuhWeeklyStats struct for WazuhWeeklyStats
type WazuhWeeklyStats struct {
	Sun *WazuhHourlyStats `json:"Sun,omitempty"`
	Mon *WazuhHourlyStats `json:"Mon,omitempty"`
	Tue *WazuhHourlyStats `json:"Tue,omitempty"`
	Wed *WazuhHourlyStats `json:"Wed,omitempty"`
	Thu *WazuhHourlyStats `json:"Thu,omitempty"`
	Fri *WazuhHourlyStats `json:"Fri,omitempty"`
	Sat *WazuhHourlyStats `json:"Sat,omitempty"`
}

// NewWazuhWeeklyStats instantiates a new WazuhWeeklyStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWazuhWeeklyStats() *WazuhWeeklyStats {
	this := WazuhWeeklyStats{}
	return &this
}

// NewWazuhWeeklyStatsWithDefaults instantiates a new WazuhWeeklyStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWazuhWeeklyStatsWithDefaults() *WazuhWeeklyStats {
	this := WazuhWeeklyStats{}
	return &this
}

// GetSun returns the Sun field value if set, zero value otherwise.
func (o *WazuhWeeklyStats) GetSun() WazuhHourlyStats {
	if o == nil || IsNil(o.Sun) {
		var ret WazuhHourlyStats
		return ret
	}
	return *o.Sun
}

// GetSunOk returns a tuple with the Sun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhWeeklyStats) GetSunOk() (*WazuhHourlyStats, bool) {
	if o == nil || IsNil(o.Sun) {
		return nil, false
	}
	return o.Sun, true
}

// HasSun returns a boolean if a field has been set.
func (o *WazuhWeeklyStats) HasSun() bool {
	if o != nil && !IsNil(o.Sun) {
		return true
	}

	return false
}

// SetSun gets a reference to the given WazuhHourlyStats and assigns it to the Sun field.
func (o *WazuhWeeklyStats) SetSun(v WazuhHourlyStats) {
	o.Sun = &v
}

// GetMon returns the Mon field value if set, zero value otherwise.
func (o *WazuhWeeklyStats) GetMon() WazuhHourlyStats {
	if o == nil || IsNil(o.Mon) {
		var ret WazuhHourlyStats
		return ret
	}
	return *o.Mon
}

// GetMonOk returns a tuple with the Mon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhWeeklyStats) GetMonOk() (*WazuhHourlyStats, bool) {
	if o == nil || IsNil(o.Mon) {
		return nil, false
	}
	return o.Mon, true
}

// HasMon returns a boolean if a field has been set.
func (o *WazuhWeeklyStats) HasMon() bool {
	if o != nil && !IsNil(o.Mon) {
		return true
	}

	return false
}

// SetMon gets a reference to the given WazuhHourlyStats and assigns it to the Mon field.
func (o *WazuhWeeklyStats) SetMon(v WazuhHourlyStats) {
	o.Mon = &v
}

// GetTue returns the Tue field value if set, zero value otherwise.
func (o *WazuhWeeklyStats) GetTue() WazuhHourlyStats {
	if o == nil || IsNil(o.Tue) {
		var ret WazuhHourlyStats
		return ret
	}
	return *o.Tue
}

// GetTueOk returns a tuple with the Tue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhWeeklyStats) GetTueOk() (*WazuhHourlyStats, bool) {
	if o == nil || IsNil(o.Tue) {
		return nil, false
	}
	return o.Tue, true
}

// HasTue returns a boolean if a field has been set.
func (o *WazuhWeeklyStats) HasTue() bool {
	if o != nil && !IsNil(o.Tue) {
		return true
	}

	return false
}

// SetTue gets a reference to the given WazuhHourlyStats and assigns it to the Tue field.
func (o *WazuhWeeklyStats) SetTue(v WazuhHourlyStats) {
	o.Tue = &v
}

// GetWed returns the Wed field value if set, zero value otherwise.
func (o *WazuhWeeklyStats) GetWed() WazuhHourlyStats {
	if o == nil || IsNil(o.Wed) {
		var ret WazuhHourlyStats
		return ret
	}
	return *o.Wed
}

// GetWedOk returns a tuple with the Wed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhWeeklyStats) GetWedOk() (*WazuhHourlyStats, bool) {
	if o == nil || IsNil(o.Wed) {
		return nil, false
	}
	return o.Wed, true
}

// HasWed returns a boolean if a field has been set.
func (o *WazuhWeeklyStats) HasWed() bool {
	if o != nil && !IsNil(o.Wed) {
		return true
	}

	return false
}

// SetWed gets a reference to the given WazuhHourlyStats and assigns it to the Wed field.
func (o *WazuhWeeklyStats) SetWed(v WazuhHourlyStats) {
	o.Wed = &v
}

// GetThu returns the Thu field value if set, zero value otherwise.
func (o *WazuhWeeklyStats) GetThu() WazuhHourlyStats {
	if o == nil || IsNil(o.Thu) {
		var ret WazuhHourlyStats
		return ret
	}
	return *o.Thu
}

// GetThuOk returns a tuple with the Thu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhWeeklyStats) GetThuOk() (*WazuhHourlyStats, bool) {
	if o == nil || IsNil(o.Thu) {
		return nil, false
	}
	return o.Thu, true
}

// HasThu returns a boolean if a field has been set.
func (o *WazuhWeeklyStats) HasThu() bool {
	if o != nil && !IsNil(o.Thu) {
		return true
	}

	return false
}

// SetThu gets a reference to the given WazuhHourlyStats and assigns it to the Thu field.
func (o *WazuhWeeklyStats) SetThu(v WazuhHourlyStats) {
	o.Thu = &v
}

// GetFri returns the Fri field value if set, zero value otherwise.
func (o *WazuhWeeklyStats) GetFri() WazuhHourlyStats {
	if o == nil || IsNil(o.Fri) {
		var ret WazuhHourlyStats
		return ret
	}
	return *o.Fri
}

// GetFriOk returns a tuple with the Fri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhWeeklyStats) GetFriOk() (*WazuhHourlyStats, bool) {
	if o == nil || IsNil(o.Fri) {
		return nil, false
	}
	return o.Fri, true
}

// HasFri returns a boolean if a field has been set.
func (o *WazuhWeeklyStats) HasFri() bool {
	if o != nil && !IsNil(o.Fri) {
		return true
	}

	return false
}

// SetFri gets a reference to the given WazuhHourlyStats and assigns it to the Fri field.
func (o *WazuhWeeklyStats) SetFri(v WazuhHourlyStats) {
	o.Fri = &v
}

// GetSat returns the Sat field value if set, zero value otherwise.
func (o *WazuhWeeklyStats) GetSat() WazuhHourlyStats {
	if o == nil || IsNil(o.Sat) {
		var ret WazuhHourlyStats
		return ret
	}
	return *o.Sat
}

// GetSatOk returns a tuple with the Sat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhWeeklyStats) GetSatOk() (*WazuhHourlyStats, bool) {
	if o == nil || IsNil(o.Sat) {
		return nil, false
	}
	return o.Sat, true
}

// HasSat returns a boolean if a field has been set.
func (o *WazuhWeeklyStats) HasSat() bool {
	if o != nil && !IsNil(o.Sat) {
		return true
	}

	return false
}

// SetSat gets a reference to the given WazuhHourlyStats and assigns it to the Sat field.
func (o *WazuhWeeklyStats) SetSat(v WazuhHourlyStats) {
	o.Sat = &v
}

func (o WazuhWeeklyStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WazuhWeeklyStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sun) {
		toSerialize["Sun"] = o.Sun
	}
	if !IsNil(o.Mon) {
		toSerialize["Mon"] = o.Mon
	}
	if !IsNil(o.Tue) {
		toSerialize["Tue"] = o.Tue
	}
	if !IsNil(o.Wed) {
		toSerialize["Wed"] = o.Wed
	}
	if !IsNil(o.Thu) {
		toSerialize["Thu"] = o.Thu
	}
	if !IsNil(o.Fri) {
		toSerialize["Fri"] = o.Fri
	}
	if !IsNil(o.Sat) {
		toSerialize["Sat"] = o.Sat
	}
	return toSerialize, nil
}

type NullableWazuhWeeklyStats struct {
	value *WazuhWeeklyStats
	isSet bool
}

func (v NullableWazuhWeeklyStats) Get() *WazuhWeeklyStats {
	return v.value
}

func (v *NullableWazuhWeeklyStats) Set(val *WazuhWeeklyStats) {
	v.value = val
	v.isSet = true
}

func (v NullableWazuhWeeklyStats) IsSet() bool {
	return v.isSet
}

func (v *NullableWazuhWeeklyStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWazuhWeeklyStats(val *WazuhWeeklyStats) *NullableWazuhWeeklyStats {
	return &NullableWazuhWeeklyStats{value: val, isSet: true}
}

func (v NullableWazuhWeeklyStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWazuhWeeklyStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


