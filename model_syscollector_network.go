/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the SyscollectorNetwork type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyscollectorNetwork{}

// SyscollectorNetwork struct for SyscollectorNetwork
type SyscollectorNetwork struct {
	// IP address associated with the network interface
	Address *string `json:"address,omitempty"`
	// IP address associated with the broadcast
	Broadcast *string `json:"broadcast,omitempty"`
	// Network interface name
	Iface *string `json:"iface,omitempty"`
	// Netmask associated with the network interface
	Netmask *string `json:"netmask,omitempty"`
	// Protocol associated with the network interface
	Proto *string `json:"proto,omitempty"`
	// Scan ID
	ScanId *int64 `json:"scan_id,omitempty"`
	// Agent ID
	AgentId *string `json:"agent_id,omitempty"`
}

// NewSyscollectorNetwork instantiates a new SyscollectorNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyscollectorNetwork() *SyscollectorNetwork {
	this := SyscollectorNetwork{}
	return &this
}

// NewSyscollectorNetworkWithDefaults instantiates a new SyscollectorNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyscollectorNetworkWithDefaults() *SyscollectorNetwork {
	this := SyscollectorNetwork{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *SyscollectorNetwork) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorNetwork) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *SyscollectorNetwork) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *SyscollectorNetwork) SetAddress(v string) {
	o.Address = &v
}

// GetBroadcast returns the Broadcast field value if set, zero value otherwise.
func (o *SyscollectorNetwork) GetBroadcast() string {
	if o == nil || IsNil(o.Broadcast) {
		var ret string
		return ret
	}
	return *o.Broadcast
}

// GetBroadcastOk returns a tuple with the Broadcast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorNetwork) GetBroadcastOk() (*string, bool) {
	if o == nil || IsNil(o.Broadcast) {
		return nil, false
	}
	return o.Broadcast, true
}

// HasBroadcast returns a boolean if a field has been set.
func (o *SyscollectorNetwork) HasBroadcast() bool {
	if o != nil && !IsNil(o.Broadcast) {
		return true
	}

	return false
}

// SetBroadcast gets a reference to the given string and assigns it to the Broadcast field.
func (o *SyscollectorNetwork) SetBroadcast(v string) {
	o.Broadcast = &v
}

// GetIface returns the Iface field value if set, zero value otherwise.
func (o *SyscollectorNetwork) GetIface() string {
	if o == nil || IsNil(o.Iface) {
		var ret string
		return ret
	}
	return *o.Iface
}

// GetIfaceOk returns a tuple with the Iface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorNetwork) GetIfaceOk() (*string, bool) {
	if o == nil || IsNil(o.Iface) {
		return nil, false
	}
	return o.Iface, true
}

// HasIface returns a boolean if a field has been set.
func (o *SyscollectorNetwork) HasIface() bool {
	if o != nil && !IsNil(o.Iface) {
		return true
	}

	return false
}

// SetIface gets a reference to the given string and assigns it to the Iface field.
func (o *SyscollectorNetwork) SetIface(v string) {
	o.Iface = &v
}

// GetNetmask returns the Netmask field value if set, zero value otherwise.
func (o *SyscollectorNetwork) GetNetmask() string {
	if o == nil || IsNil(o.Netmask) {
		var ret string
		return ret
	}
	return *o.Netmask
}

// GetNetmaskOk returns a tuple with the Netmask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorNetwork) GetNetmaskOk() (*string, bool) {
	if o == nil || IsNil(o.Netmask) {
		return nil, false
	}
	return o.Netmask, true
}

// HasNetmask returns a boolean if a field has been set.
func (o *SyscollectorNetwork) HasNetmask() bool {
	if o != nil && !IsNil(o.Netmask) {
		return true
	}

	return false
}

// SetNetmask gets a reference to the given string and assigns it to the Netmask field.
func (o *SyscollectorNetwork) SetNetmask(v string) {
	o.Netmask = &v
}

// GetProto returns the Proto field value if set, zero value otherwise.
func (o *SyscollectorNetwork) GetProto() string {
	if o == nil || IsNil(o.Proto) {
		var ret string
		return ret
	}
	return *o.Proto
}

// GetProtoOk returns a tuple with the Proto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorNetwork) GetProtoOk() (*string, bool) {
	if o == nil || IsNil(o.Proto) {
		return nil, false
	}
	return o.Proto, true
}

// HasProto returns a boolean if a field has been set.
func (o *SyscollectorNetwork) HasProto() bool {
	if o != nil && !IsNil(o.Proto) {
		return true
	}

	return false
}

// SetProto gets a reference to the given string and assigns it to the Proto field.
func (o *SyscollectorNetwork) SetProto(v string) {
	o.Proto = &v
}

// GetScanId returns the ScanId field value if set, zero value otherwise.
func (o *SyscollectorNetwork) GetScanId() int64 {
	if o == nil || IsNil(o.ScanId) {
		var ret int64
		return ret
	}
	return *o.ScanId
}

// GetScanIdOk returns a tuple with the ScanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorNetwork) GetScanIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ScanId) {
		return nil, false
	}
	return o.ScanId, true
}

// HasScanId returns a boolean if a field has been set.
func (o *SyscollectorNetwork) HasScanId() bool {
	if o != nil && !IsNil(o.ScanId) {
		return true
	}

	return false
}

// SetScanId gets a reference to the given int64 and assigns it to the ScanId field.
func (o *SyscollectorNetwork) SetScanId(v int64) {
	o.ScanId = &v
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *SyscollectorNetwork) GetAgentId() string {
	if o == nil || IsNil(o.AgentId) {
		var ret string
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorNetwork) GetAgentIdOk() (*string, bool) {
	if o == nil || IsNil(o.AgentId) {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *SyscollectorNetwork) HasAgentId() bool {
	if o != nil && !IsNil(o.AgentId) {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given string and assigns it to the AgentId field.
func (o *SyscollectorNetwork) SetAgentId(v string) {
	o.AgentId = &v
}

func (o SyscollectorNetwork) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyscollectorNetwork) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Broadcast) {
		toSerialize["broadcast"] = o.Broadcast
	}
	if !IsNil(o.Iface) {
		toSerialize["iface"] = o.Iface
	}
	if !IsNil(o.Netmask) {
		toSerialize["netmask"] = o.Netmask
	}
	if !IsNil(o.Proto) {
		toSerialize["proto"] = o.Proto
	}
	if !IsNil(o.ScanId) {
		toSerialize["scan_id"] = o.ScanId
	}
	if !IsNil(o.AgentId) {
		toSerialize["agent_id"] = o.AgentId
	}
	return toSerialize, nil
}

type NullableSyscollectorNetwork struct {
	value *SyscollectorNetwork
	isSet bool
}

func (v NullableSyscollectorNetwork) Get() *SyscollectorNetwork {
	return v.value
}

func (v *NullableSyscollectorNetwork) Set(val *SyscollectorNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableSyscollectorNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableSyscollectorNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyscollectorNetwork(val *SyscollectorNetwork) *NullableSyscollectorNetwork {
	return &NullableSyscollectorNetwork{value: val, isSet: true}
}

func (v NullableSyscollectorNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyscollectorNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


