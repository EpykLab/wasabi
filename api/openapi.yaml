openapi: 3.0.0
info:
  description: |
    The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser,
    command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this
    heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI.
    Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s)
    or looking up syscheck details.

    # Authentication

    Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token.
    JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting
    information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate`
    and obtain a JWT token to run any endpoint.

    JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid
    JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously
    issued tokens are revoked when any change is performed on security configuration.

    Login with USER and PASSWORD:

    `curl -u <USER>:<PASSWORD> -k -X POST "https://<HOST_IP>:55000/security/user/authenticate"`
    ```json
    {
        "data": {
            "token": "<YOUR_JWT_TOKEN>"
        },
        "error": 0
    }
    ```
    Use the token from the previous response to perform any endpoint request:

    `curl -k -X <METHOD> "https://<HOST_IP>:55000/<ENDPOINT>" -H  "Authorization: Bearer <YOUR_JWT_TOKEN>"`

    Change the token base duration:

    `curl -k -X PUT "https://<HOST_IP>:55000/security/config" -H "Authorization: Bearer <YOUR_JWT_TOKEN>"
    -d '{"auth_token_exp_timeout": <NEW_EXPIRE_TIME_IN_SECONDS>}'`

    <SecurityDefinitions />
  license:
    name: GPL 2.0
    url: https://github.com/wazuh/wazuh/blob/v4.12.0/LICENSE
  title: Wazuh API REST
  version: 4.12.0
  x-revision: rc1
externalDocs:
  description: Learn more about the Wazuh API
  url: https://documentation.wazuh.com/4.12/user-manual/api/index.html
servers:
- url: "{protocol}://{host}:{port}"
  variables:
    protocol:
      default: https
      enum:
      - http
      - https
    host:
      default: localhost
    port:
      default: "55000"
security:
- jwt: []
tags:
- description: Wazuh API information
  name: API Info
- description: Agents Active Response
  name: Active-response
- description: Agents management related operations
  name: Agents
- description: Retrieve information from CIS-CAT scans
  name: Ciscat
- description: Wazuh cluster and nodes management
  name: Cluster
- description: Decoders management
  name: Decoders
- description: Ingestion endpoints
  name: Events
- description: Not ready for production endpoints. Use with caution
  name: Experimental
- description: Group of agents and centralized configurations
  name: Groups
- description: CDB lists management
  name: Lists
- description: "Logtest: testing and verification tool for rules and decoders"
  name: Logtest
- description: Wazuh manager management
  name: Manager
- description: Technique information from MITRE database
  name: MITRE
- description: Overview of Wazuh
  name: Overview
- description: Rootcheck management
  name: Rootcheck
- description: Rules management
  name: Rules
- description: Policy monitoring
  name: SCA
- description: Roles administration and user authentication management
  name: Security
- description: File integrity monitoring
  name: Syscheck
- description: Syscollector information
  name: Syscollector
- description: Tasks information
  name: Tasks
paths:
  /:
    get:
      description: Return basic information about the API
      operationId: api.controllers.default_controller.default_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                title: Wazuh API
                api_version: v4.5.0
                revision: beta1
                license_name: GPL 2.0
                license_url: https://github.com/wazuh/wazuh/blob/v4.12.0/LICENSE
                hostname: wazuh
                timestamp: 2019-04-02T08:08:11Z
              schema:
                $ref: '#/components/schemas/api_controllers_default_controller_default_info_200_response'
          description: API default information
      summary: Get API info
      tags:
      - API Info
  /active-response:
    put:
      description: Run an Active Response command on all agents or a list of them
      operationId: api.controllers.active_response_controller.run_command
      parameters:
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveResponseBody'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - "001"
                  - "002"
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: AR command was sent to all agents
                error: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Command sent to agents
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Run command
      tags:
      - Active-response
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/active-response:command'
  /agents:
    delete:
      description: Delete all agents or a list of them based on optional criteria
      operationId: api.controllers.agent_controller.delete_agents
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), use the keyword `all`\
          \ to select all agents"
        explode: true
        in: query
        name: agents_list
        required: true
        schema:
          items:
            $ref: '#/components/schemas/AgentIDListAll'
          type: array
        style: form
      - description: Permanently delete an agent from the key store
        explode: true
        in: query
        name: purge
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filter by agent status (use commas to enter multiple statuses)
        explode: true
        in: query
        name: status
        required: true
        schema:
          items:
            enum:
            - all
            - active
            - pending
            - never_connected
            - disconnected
            type: string
          minItems: 1
          type: array
        style: form
      - description: "Consider only agents whose last keep alive is older than the\
          \ specified time frame. For never_connected agents, register date is considered\
          \ instead of last keep alive. For example, `7d`, `10s` and `10` are valid\
          \ values. When no time unit is specified, seconds are assumed. Use 0s to\
          \ select all agents"
        explode: true
        in: query
        name: older_than
        required: false
        schema:
          default: 7d
          format: timeframe
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Filter by OS platform
        explode: true
        in: query
        name: os.platform
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by OS version
        explode: true
        in: query
        name: os.version
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by OS name
        explode: true
        in: query
        name: os.name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by manager hostname where agents are connected to
        explode: true
        in: query
        name: manager
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: "Filter by agents version using one of the following formats:\
          \ 'X.Y.Z', 'vX.Y.Z', 'wazuh X.Y.Z' or 'wazuh vX.Y.Z'. For example: '4.4.0'"
        explode: true
        in: query
        name: version
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by group of agents
        explode: true
        in: query
        name: group
        required: false
        schema:
          $ref: '#/components/schemas/GroupID'
        style: form
      - description: Filter by node name
        explode: true
        in: query
        name: node_name
        required: false
        schema:
          format: names
          type: string
        style: form
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: "Filter by the IP used by the agent to communicate with the manager.\
          \ If it's not available, it will have the same value as registerIP"
        explode: true
        in: query
        name: ip
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by the IP used when registering the agent
        explode: true
        in: query
        name: registerIP
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - "001"
                  - "002"
                  - "003"
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All selected agents were deleted
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_delete_agents_200_response'
          description: Delete agents
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Delete agents
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:delete'
    get:
      description: Return information about all available agents or a list of them
      operationId: api.controllers.agent_controller.get_agents
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: Filter by agent status (use commas to enter multiple statuses)
        explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - active
            - pending
            - never_connected
            - disconnected
            type: string
          minItems: 1
          type: array
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: "Filter out agents whose time lapse from last keep alive signal\
          \ is longer than specified. Time in seconds, â€˜[n_days]dâ€™, â€˜[n_hours]hâ€™,\
          \ â€˜[n_minutes]mâ€™ or â€˜[n_seconds]sâ€™. For never_connected agents, uses the\
          \ register date. For example, `7d`, `10s` and `10` are valid values. If\
          \ no time unit is specified, seconds are used"
        explode: true
        in: query
        name: older_than
        required: false
        schema:
          format: timeframe
          type: string
        style: form
      - description: Filter by OS platform
        explode: true
        in: query
        name: os.platform
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by OS version
        explode: true
        in: query
        name: os.version
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by OS name
        explode: true
        in: query
        name: os.name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by manager hostname where agents are connected to
        explode: true
        in: query
        name: manager
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: "Filter by agents version using one of the following formats:\
          \ 'X.Y.Z', 'vX.Y.Z', 'wazuh X.Y.Z' or 'wazuh vX.Y.Z'. For example: '4.4.0'"
        explode: true
        in: query
        name: version
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by group of agents
        explode: true
        in: query
        name: group
        required: false
        schema:
          $ref: '#/components/schemas/GroupID'
        style: form
      - description: Filter by node name
        explode: true
        in: query
        name: node_name
        required: false
        schema:
          format: names
          type: string
        style: form
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: "Filter by the IP used by the agent to communicate with the manager.\
          \ If it's not available, it will have the same value as registerIP"
        explode: true
        in: query
        name: ip
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by the IP used when registering the agent
        explode: true
        in: query
        name: registerIP
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Agent groups configuration sync status
        explode: true
        in: query
        name: group_config_status
        required: false
        schema:
          enum:
          - synced
          - not synced
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: "20"
                      minor: "04"
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |ac7cb188d538 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.2 LTS
                    lastKeepAlive: 2021-05-26T12:40:40Z
                    id: "001"
                    dateAdd: 2021-05-26T12:40:08Z
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    manager: wazuh-worker2
                    group:
                    - default
                    registerIP: any
                    ip: 172.25.0.6
                    name: ac7cb188d538
                    status: active
                    mergedSum: 9a016508cea1e997ab8569f5cfab30f5
                    version: Wazuh v4.3.0
                    node_name: worker2
                    group_config_status: synced
                    status_code: 0
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: "20"
                      minor: "04"
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |ac7cb188d538 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.2 LTS
                    lastKeepAlive: 2021-05-26T12:40:40Z
                    id: "002"
                    dateAdd: 2021-05-26T12:40:10Z
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    manager: wazuh-worker2
                    group:
                    - default
                    registerIP: any
                    ip: 172.25.0.11
                    name: 91642a418627
                    status: active
                    mergedSum: 9a016508cea1e997ab8569f5cfab30f5
                    version: Wazuh v4.3.0
                    node_name: worker2
                    group_config_status: synced
                    status_code: 0
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: "20"
                      minor: "04"
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |ac7cb188d538 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.2 LTS
                    lastKeepAlive: 2021-05-26T12:40:40Z
                    id: "003"
                    dateAdd: 2021-05-26T12:40:10Z
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    manager: wazuh-worker2
                    group:
                    - default
                    registerIP: any
                    ip: 172.25.0.10
                    name: a442e15bc84e
                    status: active
                    mergedSum: 9a016508cea1e997ab8569f5cfab30f5
                    version: Wazuh v4.3.0
                    node_name: worker1
                    group_config_status: not synced
                    status_code: 0
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All selected agents information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_get_agents_200_response'
          description: List of agents or error description
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: List agents
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
    post:
      description: Add a new agent
      operationId: api.controllers.agent_controller.add_agent
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              name: NewHost_2
              ip: 10.0.10.11
            schema:
              $ref: '#/components/schemas/AgentAddBody'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: "009"
                  key: MDA5IE5ld0hvc3RfMiAxMC4wLjEwLjExIDhkNjllMzRiYTM2ZjcwMzgzZmVkNTIyNzk4MzFiZDg2NWQzZGRkZjJhMTkwZWR
                    jMjY5YmRhOTY1ODU4M2JkMjg=
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_add_agent_200_response'
          description: Add an agent
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Add agent
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:create'
  /agents/{agent_id}/config/{component}/{configuration}:
    get:
      description: "Return the active configuration the agent is currently using.\
        \ This can be different from the configuration present in the configuration\
        \ file, if it has been modified and the agent has not been restarted yet"
      operationId: api.controllers.agent_controller.get_agent_config
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: Selected agent's component
        explode: false
        in: path
        name: component
        required: true
        schema:
          enum:
          - agent
          - agentless
          - analysis
          - auth
          - com
          - csyslog
          - integrator
          - logcollector
          - mail
          - monitor
          - request
          - syscheck
          - wazuh-db
          - wmodules
          type: string
        style: simple
      - description: |
          <p>Selected agent's configuration to read. The configuration to read depends on the selected component.
          The following table shows all available combinations of component and configuration values:</p>
          <table class="table table-striped table-bordered">
          <thead>
          <tr>
          <th>Component</th>
          <th>Configuration</th>
          <th>Tag</th>
          </tr>
          </thead>
          <tbody>
          <tr>
          <td>agent</td>
          <td>client</td>
          <td><code>&lt;client&gt;</code></td>
          </tr>
          <tr>
          <td>agent</td>
          <td>buffer</td>
          <td><code>&lt;client_buffer&gt;</code></td>
          </tr>
          <tr>
          <td>agent</td>
          <td>labels</td>
          <td><code>&lt;labels&gt;</code></td>
          </tr>
          <tr>
          <td>agent</td>
          <td>internal</td>
          <td><code>&lt;agent&gt;</code>, <code>&lt;monitord&gt;</code>, <code>&lt;remoted&gt;</code></td>
          </tr>
          <tr>
          <td>agent</td>
          <td>anti_tampering</td>
          <td><code>&lt;anti_tampering&gt;</code></td>
          </tr>
          <tr>
          <td>agentless</td>
          <td>agentless</td>
          <td><code>&lt;agentless&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>global</td>
          <td><code>&lt;global&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>active_response</td>
          <td><code>&lt;active-response&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>alerts</td>
          <td><code>&lt;alerts&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>command</td>
          <td><code>&lt;command&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>rules</td>
          <td><code>&lt;rule&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>decoders</td>
          <td><code>&lt;decoder&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>internal</td>
          <td><code>&lt;analysisd&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>rule_test</td>
          <td><code>&lt;rule_test&gt;</code></td>
          </tr>
          <tr>
          <td>auth</td>
          <td>auth</td>
          <td><code>&lt;auth&gt;</code></td>
          </tr>
          <tr>
          <td>com</td>
          <td>active-response</td>
          <td><code>&lt;active-response&gt;</code></td>
          </tr>
          <tr>
          <td>com</td>
          <td>logging</td>
          <td><code>&lt;logging&gt;</code></td>
          </tr>
          <tr>
          <td>com</td>
          <td>internal</td>
          <td><code>&lt;execd&gt;</code></td>
          </tr>
          <tr>
          <td>com</td>
          <td>cluster</td>
          <td><code>&lt;cluster&gt;</code></td>
          </tr>
          <tr>
          <td>csyslog</td>
          <td>csyslog</td>
          <td><code>&lt;csyslog_output&gt;</code></td>
          </tr>
          <tr>
          <td>integrator</td>
          <td>integration</td>
          <td><code>&lt;integration&gt;</code></td>
          </tr>
          <tr>
          <td>logcollector</td>
          <td>localfile</td>
          <td><code>&lt;localfile&gt;</code></td>
          </tr>
          <tr>
          <td>logcollector</td>
          <td>socket</td>
          <td><code>&lt;socket&gt;</code></td>
          </tr>
          <tr>
          <td>logcollector</td>
          <td>internal</td>
          <td><code>&lt;logcollector&gt;</code></td>
          </tr>
          <tr>
          <td>mail</td>
          <td>global</td>
          <td><code>&lt;global&gt;&lt;email...&gt;</code></td>
          </tr>
          <tr>
          <td>mail</td>
          <td>alerts</td>
          <td><code>&lt;email_alerts&gt;</code></td>
          </tr>
          <tr>
          <td>mail</td>
          <td>internal</td>
          <td><code>&lt;maild&gt;</code></td>
          </tr>
          <tr>
          <td>monitor</td>
          <td>global</td>
          <td><code>&lt;global&gt;</code></td>
          </tr>
          <tr>
          <td>monitor</td>
          <td>internal</td>
          <td><code>&lt;monitord&gt;</code></td>
          </tr>
          <tr>
          <td>monitor</td>
          <td>reports</td>
          <td><code>&lt;reports&gt;</code></td>
          </tr>
          <tr>
          <td>request</td>
          <td>global</td>
          <td><code>&lt;global&gt;</code></td>
          </tr>
          <tr>
          <td>request</td>
          <td>remote</td>
          <td><code>&lt;remote&gt;</code></td>
          </tr>
          <tr>
          <td>request</td>
          <td>internal</td>
          <td><code>&lt;remoted&gt;</code></td>
          </tr>
          <tr>
          <td>syscheck</td>
          <td>syscheck</td>
          <td><code>&lt;syscheck&gt;</code></td>
          </tr>
          <tr>
          <td>syscheck</td>
          <td>rootcheck</td>
          <td><code>&lt;rootcheck&gt;</code></td>
          </tr>
          <tr>
          <td>syscheck</td>
          <td>internal</td>
          <td><code>&lt;syscheck&gt;</code>, <code>&lt;rootcheck&gt;</code></td>
          </tr>
          <tr>
          <td>wazuh-db</td>
          <td>internal</td>
          <td><code>&lt;wazuh_db&gt;</code></td>
          </tr>
          <tr>
          <td>wazuh-db</td>
          <td>wdb</td>
          <td><code>&lt;wdb&gt;</code></td>
          </tr>
          <tr>
          <td>wmodules</td>
          <td>wmodules</td>
          <td><code>&lt;wodle&gt;</code></td>
          </tr>
          </tbody>
          </table>
        explode: false
        in: path
        name: configuration
        required: true
        schema:
          enum:
          - client
          - buffer
          - labels
          - internal
          - anti_tampering
          - agentless
          - global
          - active_response
          - alerts
          - command
          - rules
          - decoders
          - auth
          - logging
          - reports
          - active-response
          - cluster
          - csyslog
          - integration
          - localfile
          - socket
          - remote
          - syscheck
          - rootcheck
          - wdb
          - wmodules
          - rule_test
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  client:
                    config-profile: "ubuntu, ubuntu20, ubuntu20.04"
                    notify_time: 10
                    time-reconnect: 60
                    force_reconnect_interval: 0
                    ip_update_interval: 0
                    auto_restart: "yes"
                    remote_conf: "yes"
                    crypto_method: aes
                    server:
                    - address: nginx-lb/172.25.0.4
                      port: 1514
                      max_retries: 5
                      retry_interval: 10
                      protocol: tcp
                    enrollment:
                    - enabled: "yes"
                      delay_after_enrollment: 20
                      port: 1515
                      ssl_cipher: HIGH:!ADH:!EXP:!MD5:!RC4:!3DES:!CAMELLIA:@STRENGTH
                      auto_method: "no"
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_get_agent_config_200_response'
          description: Get agent configuration
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get active configuration
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
  /agents/{agent_id}/group:
    delete:
      description: Remove the agent from all groups or a list of them. The agent will
        automatically revert to the default group if it is removed from all its assigned
        groups
      operationId: api.controllers.agent_controller.delete_single_agent_multiple_groups
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: "List of group IDs (separated by comma), all groups selected\
          \ by default if not specified"
        explode: true
        in: query
        name: groups_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GroupID'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - group1
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Specified agent was removed from returned groups
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_delete_single_agent_multiple_groups_200_response'
          description: Remove the agent from all groups
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Remove agent from groups
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:modify_group'
      - $ref: '#/x-rbac-catalog/actions/group:modify_assignments'
  /agents/{agent_id}/group/is_sync:
    get:
      deprecated: true
      description: Return whether the agent configuration has been synchronized with
        the agent or not. This can be useful to check after updating a group configuration
      operationId: api.controllers.agent_controller.get_sync_agent
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: "002"
                    synced: true
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Sync info was returned for all selected agents
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_get_sync_agent_200_response'
          description: Get agent sync
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get configuration sync status
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
  /agents/{agent_id}/group/{group_id}:
    delete:
      description: "Remove an agent from a specified group. If the agent belongs to\
        \ several groups, only the specified group will be deleted."
      operationId: api.controllers.agent_controller.delete_single_agent_single_group
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: Group ID. (Name of the group)
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          $ref: '#/components/schemas/GroupID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                message: Agent '004' removed from 'dmz'.
                error: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Remove agent from a group
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "404":
          content:
            application/json:
              example:
                title: Resource Not Found
                detail: The group does not exist
                remediation: "Please, use `GET /groups` to find all available groups:\
                  \ https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                code: 1710
                dapi_errors:
                  unknown-node:
                    error: The group does not exist
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Resource not found
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Remove agent from group
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:modify_group'
      - $ref: '#/x-rbac-catalog/actions/group:modify_assignments'
    put:
      description: Assign an agent to a specified group
      operationId: api.controllers.agent_controller.put_agent_single_group
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: Group ID. (Name of the group)
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          $ref: '#/components/schemas/GroupID'
        style: simple
      - description: Removes the agent from all groups to which it belongs and assigns
          it to the specified group
        explode: true
        in: query
        name: force_single_group
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - "003"
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All selected agents were assigned to group3
                error: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Add agent to group
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "404":
          content:
            application/json:
              example:
                title: Resource Not Found
                detail: The group does not exist
                remediation: "Please, use `GET /groups` to find all available groups:\
                  \ https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                code: 1710
                dapi_errors:
                  unknown-node:
                    error: The group does not exist
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Resource not found
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Assign agent to group
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:modify_group'
      - $ref: '#/x-rbac-catalog/actions/group:modify_assignments'
  /agents/{agent_id}/key:
    get:
      description: Return the key of an agent
      operationId: api.controllers.agent_controller.get_agent_key
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: "002"
                    key: MDAyIHdhenVoLWFnZW50MiBhbnkgMzAxYzk0Y2I3NDc5MzliMjAyYTg0OGE3NGIwMTNkODQwZWJkNWUyZmIxMjQ3Nzhl
                      NDhjYzUxOGE4MWQyNDFkYw==
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Obtained keys for all selected agents
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_get_agent_key_200_response'
          description: Get agent key
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get key
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
  /agents/{agent_id}/restart:
    put:
      description: Restart the specified agent
      operationId: api.controllers.agent_controller.restart_agent
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_restart_agent_200_response'
          description: Agent restarted
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Restart agent
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:restart'
  /agents/{agent_id}/daemons/stats:
    get:
      description: Return Wazuh statistical information from specified daemons in
        a specified agent
      operationId: api.controllers.agent_controller.get_daemon_stats
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: "List of daemon names (separated by comma), all daemons selected\
          \ by default if not specified"
        explode: true
        in: query
        name: daemons_list
        required: false
        schema:
          items:
            enum:
            - wazuh-analysisd
            - wazuh-remoted
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - timestamp: 2022-07-27T14:09:20+00:00
                    name: wazuh-remoted
                    agents:
                    - uptime: 2022-07-27T14:09:20+00:00
                      id: 1
                      metrics:
                        messages:
                          received_breakdown:
                            control: 2
                            control_breakdown:
                              keepalive: 1
                              request: 0
                              shutdown: 0
                              startup: 1
                            event: 195
                          sent_breakdown:
                            ack: 2
                            ar: 0
                            cfga: 2
                            discarded: 0
                            request: 0
                            shared: 0
                  - timestamp: 2022-07-27T14:09:20+00:00
                    name: wazuh-analysisd
                    agents:
                    - uptime: 2022-07-27T14:09:20+00:00
                      id: 1
                      metrics:
                        events:
                          processed: 195
                          received_breakdown:
                            decoded_breakdown:
                              agent: 0
                              dbsync: 0
                              integrations_breakdown:
                                virustotal: 0
                              modules_breakdown:
                                aws: 0
                                azure: 0
                                ciscat: 0
                                command: 0
                                docker: 0
                                gcp: 0
                                github: 0
                                logcollector_breakdown:
                                  eventchannel: 0
                                  eventlog: 0
                                  macos: 0
                                  others: 0
                                office365: 0
                                ms-graph: 0
                                oscap: 0
                                osquery: 0
                                rootcheck: 1
                                sca: 194
                                syscheck: 0
                                syscollector: 0
                                upgrade: 0
                                vulnerability: 0
                              monitor: 0
                              remote: 0
                          written_breakdown:
                            alerts: 191
                            archives: 0
                            firewall: 0
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: Statistical information for each daemon was successfully
                  read
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_get_daemon_stats_200_response'
          description: Wazuh daemon stats
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get Wazuh daemon stats from an agent
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
  /agents/{agent_id}/stats/{component}:
    get:
      description: "Return Wazuh's {component} statistical information from agent\
        \ {agent_id}"
      operationId: api.controllers.agent_controller.get_component_stats
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: Selected component stats
        explode: false
        in: path
        name: component
        required: true
        schema:
          enum:
          - logcollector
          - agent
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - global:
                      start: 2021-05-27T08:01:38Z
                      end: 2021-05-27T08:08:13Z
                      files:
                      - location: df -P
                        events: 20
                        bytes: 1784
                        targets:
                        - name: agent
                          drops: 0
                      - location: /var/log/dpkg.log
                        events: 0
                        bytes: 0
                        targets:
                        - name: agent
                          drops: 0
                      - location: /var/ossec/logs/active-responses.log
                        events: 0
                        bytes: 0
                        targets:
                        - name: agent
                          drops: 0
                      - location: last -n 20
                        events: 2
                        bytes: 132
                        targets:
                        - name: agent
                          drops: 0
                    interval:
                      start: 2021-05-27T08:08:08Z
                      end: 2021-05-27T08:08:08Z
                      files:
                      - location: df -P
                        events: 0
                        bytes: 0
                        targets:
                        - name: agent
                          drops: 0
                      - location: /var/log/dpkg.log
                        events: 0
                        bytes: 0
                        targets:
                        - name: agent
                          drops: 0
                      - location: /var/ossec/logs/active-responses.log
                        events: 0
                        bytes: 0
                        targets:
                        - name: agent
                          drops: 0
                      - location: last -n 20
                        events: 0
                        bytes: 0
                        targets:
                        - name: agent
                          drops: 0
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Statistical information for each agent was successfully read
                error: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Component stats
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agent's component stats
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
  /agents/upgrade:
    put:
      description: "Upgrade agents using a WPK file from online repository. When upgrading\
        \ more than 3000 agents at the same time, it's highly recommended to use the\
        \ parameter `wait_for_complete` set to `true` to avoid a possible API timeout"
      operationId: api.controllers.agent_controller.put_upgrade_agents
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), use the keyword `all`\
          \ to select all agents"
        explode: true
        in: query
        name: agents_list
        required: true
        schema:
          items:
            $ref: '#/components/schemas/AgentIDListAll'
          type: array
        style: form
      - description: WPK repository
        explode: true
        in: query
        name: wpk_repo
        required: false
        schema:
          format: path
          type: string
        style: form
      - description: Wazuh version to upgrade to
        explode: true
        in: query
        name: upgrade_version
        required: false
        schema:
          format: wazuh_version
          type: string
        style: form
      - description: Use http protocol. If it's false use https. By default the value
          is set to false
        explode: true
        in: query
        name: use_http
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Force upgrade
        explode: true
        in: query
        name: force
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Select package type to use. By default, the manager infers this."
        explode: true
        in: query
        name: package_type
        required: false
        schema:
          enum:
          - rpm
          - deb
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Filter by OS platform
        explode: true
        in: query
        name: os.platform
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by OS version
        explode: true
        in: query
        name: os.version
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by OS name
        explode: true
        in: query
        name: os.name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by manager hostname where agents are connected to
        explode: true
        in: query
        name: manager
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: "Filter by agents version using one of the following formats:\
          \ 'X.Y.Z', 'vX.Y.Z', 'wazuh X.Y.Z' or 'wazuh vX.Y.Z'. For example: '4.4.0'"
        explode: true
        in: query
        name: version
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by group of agents
        explode: true
        in: query
        name: group
        required: false
        schema:
          $ref: '#/components/schemas/GroupID'
        style: form
      - description: Filter by node name
        explode: true
        in: query
        name: node_name
        required: false
        schema:
          format: names
          type: string
        style: form
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: "Filter by the IP used by the agent to communicate with the manager.\
          \ If it's not available, it will have the same value as registerIP"
        explode: true
        in: query
        name: ip
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by the IP used when registering the agent
        explode: true
        in: query
        name: registerIP
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - agent: "001"
                    task_id: 1
                  - agent: "002"
                    task_id: 2
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: All upgrade tasks were created
                error: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Agents upgraded
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Upgrade agents
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:upgrade'
  /agents/upgrade_custom:
    put:
      description: "Upgrade the agents using a local WPK file. When upgrading more\
        \ than 3000 agents at the same time, it's highly recommended to use the parameter\
        \ `wait_for_complete` set to `true` to avoid a possible API timeout"
      operationId: api.controllers.agent_controller.put_upgrade_custom_agents
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), use the keyword `all`\
          \ to select all agents"
        explode: true
        in: query
        name: agents_list
        required: true
        schema:
          items:
            $ref: '#/components/schemas/AgentIDListAll'
          type: array
        style: form
      - description: "Full path to the WPK file. The file must be on a folder on the\
          \ Wazuh's installation directory (by default, <code>/var/ossec</code>)"
        explode: true
        in: query
        name: file_path
        required: true
        schema:
          format: wpk_path
          type: string
        style: form
      - description: Installation script. Default is <code>upgrade.sh</code> or <code>upgrade.bat</code>
          for windows agents
        explode: true
        in: query
        name: installer
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Filter by OS platform
        explode: true
        in: query
        name: os.platform
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by OS version
        explode: true
        in: query
        name: os.version
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by OS name
        explode: true
        in: query
        name: os.name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by manager hostname where agents are connected to
        explode: true
        in: query
        name: manager
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: "Filter by agents version using one of the following formats:\
          \ 'X.Y.Z', 'vX.Y.Z', 'wazuh X.Y.Z' or 'wazuh vX.Y.Z'. For example: '4.4.0'"
        explode: true
        in: query
        name: version
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by group of agents
        explode: true
        in: query
        name: group
        required: false
        schema:
          $ref: '#/components/schemas/GroupID'
        style: form
      - description: Filter by node name
        explode: true
        in: query
        name: node_name
        required: false
        schema:
          format: names
          type: string
        style: form
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: "Filter by the IP used by the agent to communicate with the manager.\
          \ If it's not available, it will have the same value as registerIP"
        explode: true
        in: query
        name: ip
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by the IP used when registering the agent
        explode: true
        in: query
        name: registerIP
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - agent: "005"
                    task_id: 3
                  - agent: "006"
                    task_id: 4
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: All upgrade tasks were created
                error: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Agents upgraded
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Upgrade agents custom
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:upgrade'
  /agents/upgrade_result:
    get:
      description: Return the agents upgrade results
      operationId: api.controllers.agent_controller.get_agent_upgrade
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Filter by OS platform
        explode: true
        in: query
        name: os.platform
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by OS version
        explode: true
        in: query
        name: os.version
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by OS name
        explode: true
        in: query
        name: os.name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by manager hostname where agents are connected to
        explode: true
        in: query
        name: manager
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: "Filter by agents version using one of the following formats:\
          \ 'X.Y.Z', 'vX.Y.Z', 'wazuh X.Y.Z' or 'wazuh vX.Y.Z'. For example: '4.4.0'"
        explode: true
        in: query
        name: version
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by group of agents
        explode: true
        in: query
        name: group
        required: false
        schema:
          $ref: '#/components/schemas/GroupID'
        style: form
      - description: Filter by node name
        explode: true
        in: query
        name: node_name
        required: false
        schema:
          format: names
          type: string
        style: form
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: "Filter by the IP used by the agent to communicate with the manager.\
          \ If it's not available, it will have the same value as registerIP"
        explode: true
        in: query
        name: ip
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by the IP used when registering the agent
        explode: true
        in: query
        name: registerIP
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - message: Success
                    agent: "001"
                    task_id: 1
                    node: worker1
                    module: upgrade_module
                    command: upgrade
                    status: "Legacy upgrade: check the result manually since the agent\
                      \ cannot report the result of the task"
                    create_time: 2020-11-03T15:59:32Z
                    update_time: 2020-11-03T16:01:55Z
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All upgrade tasks were returned
                error: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Get agent upgrade results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get upgrade results
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:upgrade'
  /agents/uninstall:
    get:
      description: Verify if the user has the necessary permissions to uninstall agents.
      operationId: api.controllers.agent_controller.get_agent_uninstall_permission
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                message: User has permission to uninstall agents.
                error: 0
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
          description: User has the necessary permissions to uninstall agents
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Check user's permission to uninstall agents
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:uninstall'
  /agents/group:
    delete:
      description: Remove all agents assignment or a list of them from the specified
        group
      operationId: api.controllers.agent_controller.delete_multiple_agent_single_group
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), use the keyword `all`\
          \ to select all agents"
        explode: true
        in: query
        name: agents_list
        required: true
        schema:
          items:
            $ref: '#/components/schemas/AgentIDListAll'
          type: array
        style: form
      - description: Group ID. (Name of the group)
        explode: true
        in: query
        name: group_id
        required: true
        schema:
          $ref: '#/components/schemas/GroupID'
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - "002"
                  - "006"
                  - "008"
                  - "010"
                  total_affected_items: 4
                  total_failed_items: 0
                  failed_items: []
                message: All selected agents were removed from group group1
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_delete_agents_200_response'
          description: Remove multiple agents assignment from a single group
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "404":
          content:
            application/json:
              example:
                title: Resource Not Found
                detail: The group does not exist
                remediation: "Please, use `GET /groups` to find all available groups:\
                  \ https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                code: 1710
                dapi_errors:
                  unknown-node:
                    error: The group does not exist
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Resource not found
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Remove agents from group
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:modify_group'
      - $ref: '#/x-rbac-catalog/actions/group:modify_assignments'
    put:
      description: Assign all agents or a list of them to the specified group
      operationId: api.controllers.agent_controller.put_multiple_agent_single_group
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      - description: Group ID. (Name of the group)
        explode: true
        in: query
        name: group_id
        required: true
        schema:
          $ref: '#/components/schemas/GroupID'
        style: form
      - description: Removes the agent from all groups to which it belongs and assigns
          it to the specified group
        explode: true
        in: query
        name: force_single_group
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - "001"
                  - "002"
                  failed_items:
                  - error:
                      code: 1701
                      message: Agent does not exist
                      remediation: "Please, use `GET /agents?select=id,name` to find\
                        \ all available agents"
                    id:
                    - "999"
                  total_affected_items: 2
                  total_failed_items: 1
                  message: Some agents were not assigned to group2 and removed from
                    the other groups
                  error: 2
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_delete_agents_200_response'
          description: Assign multiple agents to a single group
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "404":
          content:
            application/json:
              example:
                title: Resource Not Found
                detail: The group does not exist
                remediation: "Please, use `GET /groups` to find all available groups:\
                  \ https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                code: 1710
                dapi_errors:
                  unknown-node:
                    error: The group does not exist
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Resource not found
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Assign agents to group
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:modify_group'
      - $ref: '#/x-rbac-catalog/actions/group:modify_assignments'
  /agents/group/{group_id}/restart:
    put:
      description: Restart all agents which belong to a given group
      operationId: api.controllers.agent_controller.restart_agents_by_group
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Group ID. (Name of the group)
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          $ref: '#/components/schemas/GroupID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_restart_agents_by_group_200_response'
          description: Agents restarted
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "404":
          content:
            application/json:
              example:
                title: Resource Not Found
                detail: The group does not exist
                remediation: "Please, use `GET /groups` to find all available groups:\
                  \ https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                code: 1710
                dapi_errors:
                  unknown-node:
                    error: The group does not exist
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Resource not found
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Restart agents in group
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:restart'
  /agents/insert:
    post:
      description: "Add an agent specifying its name, ID and IP. If an agent with\
        \ the same name, the same ID or the same IP already exists, replace it using\
        \ the `force` parameter"
      operationId: api.controllers.agent_controller.insert_agent
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              name: NewHost_2
              ip: 10.0.10.11
              id: "123"
              key: 1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64
              force:
                enabled: true
                disconnected_time:
                  enabled: true
                  value: 30m
                after_registration_time: 2h
            schema:
              $ref: '#/components/schemas/AgentInsertBody'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: "010"
                  key: MDEwIHRlc3RfYWdlbnRfd2F6dWhfIDE3Mi4xNi4xNi4xNyBmZTNhYzUyYmUxMDc2MDgwOGI4Y2JiZTczNzFjZDIzMWJjYjF
                    jZjUyMDVjYjMzNTI1YzhjZDEwZGIwYTkyM2E4
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_add_agent_200_response'
          description: Insert new agent
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Add agent full
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:create'
  /agents/insert/quick:
    post:
      description: Add a new agent with name `agent_name`. This agent will use `any`
        as IP
      operationId: api.controllers.agent_controller.post_new_agent
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Agent name. The special characters allowed are: '-','_','.' "
        explode: true
        in: query
        name: agent_name
        required: true
        schema:
          format: names
          maxLength: 128
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: "011"
                  key: MDExIHRlc3Rfd2F6dWhfcXVpY2sgYW55IDc3ZjNhY2RmMzBhN2ZlNzY0ODVmZTQ3YjUzMzc5ZWQ3ZDA1NDVhYzIyZDQ1NGY
                    4YzcyZTZhNDU1MjVjYzY3OTM=
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_add_agent_200_response'
          description: Agent added
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Add agent quick
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:create'
  /agents/no_group:
    get:
      description: Return a list with all the available agents without an assigned
        group
      operationId: api.controllers.agent_controller.get_agent_no_group
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - node_name: unknown
                    ip: 172.16.16.16
                    id: "009"
                    name: test_agent_wazuh
                    status: never_connected
                    dateAdd: 2021-05-27T10:06:13Z
                    registerIP: 172.16.16.16
                    status_code: 0
                    group_config_status: not synced
                  - node_name: unknown
                    ip: 172.16.16.17
                    id: 8
                    name: test_agent_wazuh2
                    status: never_connected
                    dateAdd: 2021-05-27T10:06:27Z
                    registerIP: 172.16.16.17
                    status_code: 0
                    group_config_status: not synced
                  - node_name: unknown
                    ip: any
                    id: 9
                    name: test_wazuh_quick
                    status: never_connected
                    dateAdd: 2021-05-27T10:07:37Z
                    registerIP: any
                    status_code: 0
                    group_config_status: not synced
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All selected agents information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_get_agents_200_response'
          description: Get agents without group
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: List agents without group
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
  /agents/node/{node_id}/restart:
    put:
      description: Restart all agents which belong to a specific given node
      operationId: api.controllers.agent_controller.restart_agents_by_node
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Cluster node name
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          format: names
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - "002"
                  - "006"
                  - "008"
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: Restart command was sent to all agents
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_restart_agents_by_node_200_response'
          description: Agents restarted
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Restart agents in node
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
      - $ref: '#/x-rbac-catalog/actions/agent:restart'
  /agents/outdated:
    get:
      description: Return the list of outdated agents
      operationId: api.controllers.agent_controller.get_agent_outdated
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: "20"
                      minor: "04"
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |ac7cb188d538 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.2 LTS
                    lastKeepAlive: 2024-02-26T12:40:40Z
                    id: "001"
                    dateAdd: 2024-02-26T12:40:08Z
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    manager: wazuh-worker2
                    group:
                    - default
                    registerIP: any
                    ip: 172.25.0.6
                    name: ac7cb188d538
                    status: active
                    mergedSum: 9a016508cea1e997ab8569f5cfab30f5
                    version: Wazuh v3.0.0
                    node_name: worker2
                    group_config_status: synced
                    status_code: 0
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: "20"
                      minor: "04"
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |ac7cb188d538 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.2 LTS
                    lastKeepAlive: 2024-02-26T12:40:40Z
                    id: "002"
                    dateAdd: 2024-02-26T12:40:10Z
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    manager: wazuh-worker2
                    group:
                    - default
                    registerIP: any
                    ip: 172.25.0.11
                    name: 91642a418627
                    status: active
                    mergedSum: 9a016508cea1e997ab8569f5cfab30f5
                    version: Wazuh v3.0.0
                    node_name: worker2
                    group_config_status: synced
                    status_code: 0
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: All selected agents information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_get_agents_200_response'
          description: Get outdated agents
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: List outdated agents
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
  /agents/reconnect:
    put:
      description: Force reconnect all agents or a list of them
      operationId: api.controllers.agent_controller.reconnect_agents
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_reconnect_agents_200_response'
          description: Agents reconnected
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Force reconnect agents
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:reconnect'
  /agents/restart:
    put:
      description: Restart all agents or a list of them
      operationId: api.controllers.agent_controller.restart_agents
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_restart_agents_200_response'
          description: Agents restarted
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Restart agents
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:restart'
  /agents/stats/distinct:
    get:
      description: Return all the different combinations that agents have for the
        selected fields. It also indicates the total number of agents that have each
        combination
      operationId: api.controllers.agent_controller.get_agent_fields
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: List of fields affecting the operation
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - os:
                      version: 20.04.2 LTS
                    count: 2
                  - os:
                      version: N/A
                    count: 1
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All selected agents information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_get_agent_fields_200_response'
          description: Get fields in agents
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: List agents distinct
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
  /agents/summary/os:
    get:
      description: Return a summary of the OS of available agents
      operationId: api.controllers.agent_controller.get_agent_summary_os
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - ubuntu
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Showing the operative system of all specified agents
                error: 0
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
          description: Get summary of agents OS
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Summarize agents OS
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
  /agents/summary/status:
    get:
      description: Return a summary of the connection and groups configuration synchronization
        statuses of available agents
      operationId: api.controllers.agent_controller.get_agent_summary_status
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  connection:
                    active: 8
                    disconnected: 0
                    never_connected: 3
                    pending: 0
                    total: 11
                  configuration:
                    synced: 8
                    not_synced: 3
                    total: 11
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_get_agent_summary_status_200_response'
          description: Get summary of agents connection and group configuration statuses
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Summarize agents status
      tags:
      - Agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
  /groups:
    delete:
      description: Delete all groups or a list of them
      operationId: api.controllers.agent_controller.delete_groups
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of group IDs (separated by comma), use the keyword 'all'\
          \ to select all groups"
        explode: true
        in: query
        name: groups_list
        required: true
        schema:
          items:
            $ref: '#/components/schemas/GroupIDListAll'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - webserver
                  - dataserver
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                  message: All selected groups were deleted
                  error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_delete_groups_200_response'
          description: Remove multiple group from multiple agents
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Delete groups
      tags:
      - Groups
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/group:delete'
    get:
      description: Get information about all groups or a list of them. Returns a list
        containing basic information about each group such as number of agents belonging
        to the group and the checksums of the configuration and shared files
      operationId: api.controllers.agent_controller.get_list_group
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of group IDs (separated by comma), all groups selected\
          \ by default if not specified"
        explode: true
        in: query
        name: groups_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GroupID'
          type: array
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: Select algorithm to generate the returned checksums
        explode: true
        in: query
        name: hash
        required: false
        schema:
          enum:
          - md5
          - sha1
          - sha224
          - sha256
          - sha384
          - sha512
          - blake2b
          - blake2s
          - sha3_224
          - sha3_256
          - sha3_384
          - sha3_512
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - name: default
                    count: 2
                    mergedSum: f8d49771911ed9d5c45b03a40babd065
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                  - name: dmz
                    count: 3
                    mergedSum: 220d6c5fc253f251827ee7487341c0fc
                    configSum: cfbae9ecc10eb15f1b4fc736de6758cc
                  - name: pciserver
                    count: 0
                    mergedSum: 220d6c5fc253f251827ee7487341c0fc
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All selected groups information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_get_list_group_200_response'
          description: List all groups
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get groups
      tags:
      - Groups
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/group:read'
    post:
      description: Create a new group
      operationId: api.controllers.agent_controller.post_group
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupBody'
      responses:
        "200":
          content:
            application/json:
              example:
                message: Group 'NewGroup_1' created
                error: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Add new agent
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Create a group
      tags:
      - Groups
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/group:create'
  /groups/{group_id}/agents:
    get:
      description: Return the list of agents that belong to the specified group
      operationId: api.controllers.agent_controller.get_agents_in_group
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Group ID. (Name of the group)
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          $ref: '#/components/schemas/GroupID'
        style: simple
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: Filter by agent status (use commas to enter multiple statuses)
        explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - active
            - pending
            - never_connected
            - disconnected
            type: string
          minItems: 1
          type: array
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: "20"
                      minor: "04"
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |b2497efbf876 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.2 LTS
                    mergedSum: 2c769b2ea138d472ee8f1ba23412b5d4
                    node_name: worker1
                    ip: 172.20.0.7
                    id: 4
                    manager: wazuh-worker1
                    group:
                    - default
                    - group1
                    name: b2497efbf876
                    configSum: 052374472f3a0d5c8508241dcc455ea7
                    status: active
                    dateAdd: 2021-05-27T09:14:19Z
                    registerIP: any
                    lastKeepAlive: 2021-05-27T09:23:59Z
                    version: Wazuh v4.3.0
                    status_code: 0
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: "20"
                      minor: "04"
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |600e27371700 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.2 LTS
                    mergedSum: 9a016508cea1e997ab8569f5cfab30f5
                    node_name: worker1
                    ip: 172.20.0.9
                    id: 5
                    manager: wazuh-worker1
                    group:
                    - default
                    - group2
                    name: Infinity
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    status: active
                    dateAdd: 2021-05-27T09:14:19Z
                    registerIP: any
                    lastKeepAlive: 2021-05-27T09:23:52Z
                    version: Wazuh v4.3.0
                    status_code: 0
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: "20"
                      minor: "04"
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |4bdac19ce5e3 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.2 LTS
                    mergedSum: 9a016508cea1e997ab8569f5cfab30f5
                    node_name: worker2
                    ip: 172.20.0.10
                    id: 6
                    manager: wazuh-worker2
                    group:
                    - default
                    - group3
                    name: 4bdac19ce5e3
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    status: active
                    dateAdd: 2021-05-27T09:14:19Z
                    registerIP: any
                    lastKeepAlive: 2021-05-27T09:23:52Z
                    version: Wazuh v4.3.0
                    status_code: 0
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All selected agents information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_get_agents_200_response'
          description: List of agents or error description
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "404":
          content:
            application/json:
              example:
                title: Resource Not Found
                detail: The group does not exist
                remediation: "Please, use `GET /groups` to find all available groups:\
                  \ https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                code: 1710
                dapi_errors:
                  unknown-node:
                    error: The group does not exist
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Resource not found
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agents in a group
      tags:
      - Groups
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
      - $ref: '#/x-rbac-catalog/actions/group:read'
  /groups/{group_id}/configuration:
    get:
      description: Return the group configuration defined in the `agent.conf` file
      operationId: api.controllers.agent_controller.get_group_config
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Group ID. (Name of the group)
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          $ref: '#/components/schemas/GroupID'
        style: simple
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  total_affected_items: 3
                  affected_items:
                  - filters:
                      name: agent_name
                    config:
                      localfile:
                      - location: /var/log/my.log
                        log_format: syslog
                  - filters:
                      os: Linux
                    config:
                      localfile:
                      - location: /var/log/linux.log
                        log_format: syslog
                  - filters:
                      profile: database
                    config:
                      localfile:
                      - location: /var/log/database.log
                        log_format: syslog
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_get_group_config_200_response'
          description: Get group configuration
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "404":
          content:
            application/json:
              example:
                title: Resource Not Found
                detail: The group does not exist
                remediation: "Please, use `GET /groups` to find all available groups:\
                  \ https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                code: 1710
                dapi_errors:
                  unknown-node:
                    error: The group does not exist
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Resource not found
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get group configuration
      tags:
      - Groups
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/group:read'
    put:
      description: Update an specified group's configuration. This API call expects
        a full valid XML file with the shared configuration tags/syntax
      operationId: api.controllers.agent_controller.put_group_config
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Group ID. (Name of the group)
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          $ref: '#/components/schemas/GroupID'
        style: simple
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/api_controllers_agent_controller_put_group_config_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                message: Agent configuration was successfully updated
                error: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Upload configuration
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "404":
          content:
            application/json:
              example:
                title: Resource Not Found
                detail: The group does not exist
                remediation: "Please, use `GET /groups` to find all available groups:\
                  \ https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                code: 1710
                dapi_errors:
                  unknown-node:
                    error: The group does not exist
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Resource not found
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Update group configuration
      tags:
      - Groups
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/group:update_config'
  /groups/{group_id}/files:
    get:
      description: Return the files placed under the group directory
      operationId: api.controllers.agent_controller.get_group_files
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Group ID. (Name of the group)
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          $ref: '#/components/schemas/GroupID'
        style: simple
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: Select algorithm to generate the returned checksums
        explode: true
        in: query
        name: hash
        required: false
        schema:
          enum:
          - md5
          - sha1
          - sha224
          - sha256
          - sha384
          - sha512
          - blake2b
          - blake2s
          - sha3_224
          - sha3_256
          - sha3_384
          - sha3_512
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - filename: agent.conf
                    hash: ab73af41699f13fdd81903b5f23d8d00
                  - filename: ar.conf
                    hash: 76d8be9b97d8eae4c239e530ee7e71c8
                  - filename: merged.mg
                    hash: f8d49771911ed9d5c45b03a40babd065
                  - filename: rootkit_files.txt
                    hash: e5ddcac443143cef6237d5f9b8d48585
                  - filename: rootkit_trojans.txt
                    hash: 6bcf7016d3e6b4c7faa62cf265c24dcc
                  - filename: system_audit_rcl.txt
                    hash: be69b84dd5ee73200bb903a46270e18c
                  - filename: system_audit_ssh.txt
                    hash: 407c1f5e103f0cb58249eb7252a84797
                  - filename: win_applications_rcl.txt
                    hash: 0a4ad12c8145aca8a28d31de5c448b48
                  - filename: win_audit_rcl.txt
                    hash: 92d8011facc8b921ece301ea4ce6a616
                  - filename: win_malware_rcl.txt
                    hash: f5e0305e248bd00e05445f329bd1dd5e
                  total_affected_items: 10
                  total_failed_items: 0
                  failed_items: []
                message: All selected groups files were returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_get_group_files_200_response'
          description: Get group files
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "404":
          content:
            application/json:
              example:
                title: Resource Not Found
                detail: The group does not exist
                remediation: "Please, use `GET /groups` to find all available groups:\
                  \ https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                code: 1710
                dapi_errors:
                  unknown-node:
                    error: The group does not exist
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Resource not found
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get group files
      tags:
      - Groups
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/group:read'
  /groups/{group_id}/files/{file_name}:
    get:
      description: Return the content of the specified group file
      operationId: api.controllers.agent_controller.get_group_file
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Group ID. (Name of the group)
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          $ref: '#/components/schemas/GroupID'
        style: simple
      - description: Filename
        explode: false
        in: path
        name: file_name
        required: true
        schema:
          format: alphanumeric
          type: string
        style: simple
      - description: Type of file
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            enum:
            - conf
            - rootkit_files
            - rootkit_trojans
            - rcl
            type: string
          type: array
        style: form
      - description: Format response in plain text
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  vars:
                    web_dirs: "/var/www,/var/htdocs,/home/httpd,/usr/local/apache,/usr/local/apache2,/usr/local/www;"
                  controls:
                  - name: CIS - Testing against the CIS Debian Linux Benchmark v1.
                    cis: []
                    pci: []
                    condition: all required
                    reference: CIS_Debian_Benchmark_v1.0pdf
                    checks:
                    - f:/etc/debian_version;
                    - f:/proc/sys/kernel/ostype -> Linux;
                  - name: CIS - Debian Linux - 1.4 - Robust partition scheme - /tmp
                      is not on its own partition
                    cis: []
                    pci: []
                    condition: any
                    reference: https://benchmarks.cisecurity.org/tools2/linux/CIS_Debian_Benchmark_v1.0.pdf
                    checks:
                    - f:/etc/fstab -> !r:/tmp;
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_get_group_file_200_response'
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Get group file in json format
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "404":
          content:
            application/json:
              example:
                title: Resource Not Found
                detail: The group does not exist
                remediation: "Please, use `GET /groups` to find all available groups:\
                  \ https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                code: 1710
                dapi_errors:
                  unknown-node:
                    error: The group does not exist
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Resource not found
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get a file in group
      tags:
      - Groups
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/group:read'
  /ciscat/{agent_id}/results:
    get:
      description: Return the agent's ciscat results info
      operationId: api.controllers.ciscat_controller.get_agents_ciscat_results
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by benchmark type
        explode: true
        in: query
        name: benchmark
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by evaluated profile
        explode: true
        in: query
        name: profile
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by passed checks
        explode: true
        in: query
        name: pass
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by failed checks
        explode: true
        in: query
        name: fail
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by encountered errors
        explode: true
        in: query
        name: error
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by not checked
        explode: true
        in: query
        name: notchecked
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by unknown results
        explode: true
        in: query
        name: unknown
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter by final score
        explode: true
        in: query
        name: score
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - benchmark: CIS Ubuntu Linux 16.04 LTS Benchmark
                    error: 0
                    fail: 82
                    notchecked: 36
                    pass: 102
                    profile: xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Server
                    scan:
                      id: 23487414
                      time: 2019-10-24T14:30:20.768Z
                    score: 55
                    unknown: 0
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All CISCAT results were returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_ciscat_controller_get_agents_ciscat_results_200_response'
          description: List of agents or error description
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get results
      tags:
      - Ciscat
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/ciscat:read'
  /cluster/local/info:
    get:
      description: Return basic information about the cluster node receiving the request
      operationId: api.controllers.cluster_controller.get_cluster_node
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - node: master-node
                    cluster: wazuh
                    type: master
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All selected information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_cluster_node_200_response'
          description: Node basic information
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get local node info
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /cluster/local/config:
    get:
      description: Return the current node cluster configuration
      operationId: api.controllers.cluster_controller.get_config
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - name: wazuh
                    node_name: master-node
                    node_type: master
                    key: 9d273b53510fef702b54a92e9cffc82e
                    port: 1516
                    bind_addr: 0.0.0.0
                    nodes:
                    - wazuh-master
                    hidden: "no"
                    disabled: false
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All selected information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_config_200_response'
          description: Cluster configuration
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get local node config
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /cluster/nodes:
    get:
      description: Get information about all nodes in the cluster or a list of them
      operationId: api.controllers.cluster_controller.get_cluster_nodes
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by node type
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - worker
          - master
          type: string
        style: form
      - description: "List of node IDs (separated by comma), all nodes selected by\
          \ default if not specified"
        explode: true
        in: query
        name: nodes_list
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - name: master-node
                    type: master
                    version: 4.4.0
                    ip: wazuh-master
                  - name: worker1
                    type: worker
                    version: 4.4.0
                    ip: 172.26.0.7
                  - name: worker2
                    type: worker
                    version: 4.4.0
                    ip: 172.26.0.6
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All selected nodes information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_cluster_nodes_200_response'
          description: List of connected nodes
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get nodes info
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /cluster/healthcheck:
    get:
      description: "Return cluster healthcheck information for all nodes or a list\
        \ of them. Such information includes last keep alive, last synchronization\
        \ time and number of agents reporting on each node"
      operationId: api.controllers.cluster_controller.get_healthcheck
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of node IDs (separated by comma), all nodes selected by\
          \ default if not specified"
        explode: true
        in: query
        name: nodes_list
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - info:
                      name: master-node
                      type: master
                      version: 4.4.0
                      ip: wazuh-master
                      n_active_agents: 5
                  - info:
                      name: worker1
                      type: worker
                      version: 4.4.0
                      ip: 172.21.0.7
                      n_active_agents: 3
                    status:
                      sync_integrity_free: true
                      last_check_integrity:
                        date_start_master: 2021-05-27T10:50:51.325656Z
                        date_end_master: 2021-05-27T10:50:51.342140Z
                      last_sync_integrity:
                        date_start_master: 2021-05-27T10:48:54.086973Z
                        tmp_date_start_master: 2021-05-27T10:48:54.086973Z
                        date_end_master: 2021-05-27T10:48:54.093328Z
                        total_extra_valid: 0
                        total_files:
                          missing: 2
                          extra: 0
                          extra_valid: 0
                          shared: 0
                      sync_agent_info_free: true
                      last_sync_agentgroup:
                        date_start: 2021-05-27T10:48:54.086973Z
                        date_end: 2021-05-27T10:49:52.075794Z
                        n_synced_chunks: 1
                      last_sync_full_agentgroup:
                        date_start: 2021-05-27T10:52:48.038573Z
                        date_end: 2021-05-27T10:53:23.057795Z
                        n_synced_chunks: 2
                      last_sync_agentinfo:
                        date_start_master: 2021-05-27T10:50:49.174463Z
                        date_end_master: 2021-05-27T10:50:49.175921Z
                        n_synced_chunks: 1
                      last_keep_alive: 2021-05-27T10:50:08.985208Z
                  - info:
                      name: worker2
                      type: worker
                      version: 4.4.0
                      ip: 172.21.0.6
                      n_active_agents: 1
                    status:
                      sync_integrity_free: true
                      last_check_integrity:
                        date_start_master: 2021-05-27T10:50:51.939323Z
                        date_end_master: 2021-05-27T10:50:51.955007Z
                      last_sync_integrity:
                        date_start_master: 2021-05-27T10:48:54.706395Z
                        tmp_date_start_master: 2021-05-27T10:48:54.706395Z
                        date_end_master: 2021-05-27T10:48:54.726944Z
                        total_extra_valid: 0
                        total_files:
                          missing: 2
                          extra: 0
                          extra_valid: 0
                          shared: 0
                      sync_agent_info_free: true
                      last_sync_agentgroup:
                        date_start: 2021-05-27T10:48:54.086973Z
                        date_end: 2021-05-27T10:49:52.075794Z
                        n_synced_chunks: 1
                      last_sync_full_agentgroup:
                        date_start: 2021-05-27T10:52:48.038573Z
                        date_end: 2021-05-27T10:53:23.057795Z
                        n_synced_chunks: 2
                      last_sync_agentinfo:
                        date_start_master: 2021-05-27T10:50:48.832800Z
                        date_end_master: 2021-05-27T10:50:48.833854Z
                        n_synced_chunks: 1
                      last_keep_alive: 2021-05-27T10:50:18.650204Z
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All selected nodes healthcheck information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_healthcheck_200_response'
          description: Health information for cluster nodes
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get nodes healthcheck
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /cluster/ruleset/synchronization:
    get:
      description: Return ruleset synchronization status for all nodes or a list of
        them. This synchronization only covers the user custom ruleset
      operationId: api.controllers.cluster_controller.get_nodes_ruleset_sync_status
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of node IDs (separated by comma), all nodes selected by\
          \ default if not specified"
        explode: true
        in: query
        name: nodes_list
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - name: master-node
                    synced: true
                  - name: worker1
                    synced: true
                  - name: worker2
                    synced: true
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: Nodes ruleset synchronization status was successfully read
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_nodes_ruleset_sync_status_200_response'
          description: Ruleset synchronization status for cluster nodes
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get cluster nodes ruleset synchronization status
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /cluster/status:
    get:
      description: Return information about the cluster status
      operationId: api.controllers.cluster_controller.get_status
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  enabled: "yes"
                  running: "yes"
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_status_200_response'
          description: Cluster status
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get cluster status
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:status'
  /cluster/api/config:
    get:
      description: Return the API configuration of all nodes (or a list of them) in
        JSON format
      operationId: api.controllers.cluster_controller.get_api_config
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of node IDs (separated by comma), all nodes selected by\
          \ default if not specified"
        explode: true
        in: query
        name: nodes_list
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - node_name: master_node
                    node_api_config:
                      host: 0.0.0.0
                      port: 55000
                      drop_privileges: true
                      experimental_features: false
                      max_upload_size: 10485760
                      authentication_pool_size: 2
                      intervals:
                        request_timeout: 10
                      https:
                        enabled: true
                        key: /var/ossec/api/configuration/ssl/server.key
                        cert: /var/ossec/api/configuration/ssl/server.crt
                        use_ca: false
                        ca: /var/ossec/api/configuration/ssl/ca.crt
                        ssl_protocol: auto
                        ssl_ciphers: ""
                      logs:
                        level: info
                        format: plain
                        max_size:
                          enabled: false
                          size: 1M
                      cors:
                        enabled: false
                        source_route: '*'
                        expose_headers: '*'
                        allow_headers: '*'
                        allow_credentials: false
                      access:
                        max_login_attempts: 50
                        block_time: 300
                        max_request_per_minute: 300
                      upload_configuration:
                        remote_commands:
                          localfile:
                            enabled: true
                            exceptions: []
                          wodle_commands:
                            enabled: true
                            exceptions: []
                        limits:
                          eps:
                            allow: true
                        agents:
                          allow_higher_versions: true
                  - node_name: worker1
                    node_api_config:
                      host: 0.0.0.0
                      port: 55000
                      drop_privileges: true
                      experimental_features: false
                      max_upload_size: 10485760
                      authentication_pool_size: 2
                      intervals:
                        request_timeout: 10
                      https:
                        enabled: true
                        key: /var/ossec/api/configuration/ssl/server.key
                        cert: /var/ossec/api/configuration/ssl/server.crt
                        use_ca: false
                        ca: /var/ossec/api/configuration/ssl/ca.crt
                        ssl_protocol: auto
                        ssl_ciphers: ""
                      logs:
                        level: info
                        format: plain
                        max_size:
                          enabled: false
                          size: 1M
                      cors:
                        enabled: false
                        source_route: '*'
                        allow_headers: '*'
                        allow_credentials: false
                      access:
                        max_login_attempts: 50
                        block_time: 300
                        max_request_per_minute: 300
                      upload_configuration:
                        remote_commands:
                          localfile:
                            enabled: true
                            exceptions: []
                          wodle_commands:
                            enabled: true
                            exceptions: []
                        limits:
                          eps:
                            allow: true
                        agents:
                          allow_higher_versions: true
                        exceptions: []
                  - node_name: worker2
                    node_api_config:
                      host: 0.0.0.0
                      port: 55000
                      drop_privileges: true
                      experimental_features: false
                      max_upload_size: 10485760
                      authentication_pool_size: 2
                      intervals:
                        request_timeout: 10
                      https:
                        enabled: true
                        key: /var/ossec/api/configuration/ssl/server.key
                        cert: /var/ossec/api/configuration/ssl/server.crt
                        use_ca: false
                        ca: /var/ossec/api/configuration/ssl/ca.crt
                        ssl_protocol: auto
                        ssl_ciphers: ""
                      logs:
                        level: info
                        format: plain
                        max_size:
                          enabled: false
                          size: 1M
                      cors:
                        enabled: false
                        source_route: '*'
                        allow_headers: '*'
                        allow_credentials: false
                      access:
                        max_login_attempts: 50
                        block_time: 300
                        max_request_per_minute: 300
                      upload_configuration:
                        remote_commands:
                          localfile:
                            enabled: true
                            exceptions: []
                          wodle_commands:
                            enabled: true
                            exceptions: []
                        limits:
                          eps:
                            allow: true
                        agents:
                          allow_higher_versions: true
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: API configuration was successfully read in all specified
                  nodes
                error: 0
              schema:
                additionalProperties: true
                type: object
          description: Current API configuration
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get nodes API config
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read_api_config'
  /cluster/{node_id}/status:
    get:
      description: Return the status of all Wazuh daemons in node node_id
      operationId: api.controllers.cluster_controller.get_status_node
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Cluster node name
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          format: names
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - wazuh-agentlessd: stopped
                    wazuh-analysisd: running
                    wazuh-authd: stopped
                    wazuh-csyslogd: stopped
                    wazuh-dbd: stopped
                    wazuh-monitord: running
                    wazuh-execd: running
                    wazuh-integratord: stopped
                    wazuh-logcollector: running
                    wazuh-maild: stopped
                    wazuh-remoted: running
                    wazuh-reportd: stopped
                    wazuh-syscheckd: running
                    wazuh-apid: running
                    wazuh-clusterd: running
                    wazuh-db: running
                    wazuh-modulesd: running
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Processes status was successfully read in specified node
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_status_node_200_response'
          description: Node wazuh daemons statuses
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get node status
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /cluster/{node_id}/info:
    get:
      description: "Return basic information about a specified node such as version,\
        \ compilation date, installation path"
      operationId: api.controllers.cluster_controller.get_info_node
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Cluster node name
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          format: names
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - path: /var/ossec
                    version: v4.3.0
                    type: server
                    max_agents: unlimited
                    openssl_support: true
                    tz_offset: 0
                    tz_name: UTC
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Basic information was successfully read in specified node
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_info_node_200_response'
          description: Node information
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get node info
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /cluster/{node_id}/configuration:
    get:
      description: "Return wazuh configuration used in node {node_id}. The 'section'\
        \ and 'field' parameters will be ignored if 'raw' parameter is provided."
      operationId: api.controllers.cluster_controller.get_configuration_node
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Cluster node name
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          format: names
          type: string
        style: simple
      - description: Format response in plain text
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      - description: Indicates the wazuh configuration section
        explode: true
        in: query
        name: section
        required: false
        schema:
          enum:
          - active-response
          - agentless
          - alerts
          - auth
          - client
          - client_buffer
          - cluster
          - command
          - database_output
          - email_alerts
          - global
          - integration
          - labels
          - localfile
          - logging
          - remote
          - reports
          - rootcheck
          - ruleset
          - sca
          - socket
          - syscheck
          - syslog_output
          - vulnerability-detection
          - indexer
          - aws-s3
          - azure-logs
          - cis-cat
          - docker-listener
          - open-scap
          - osquery
          - syscollector
          type: string
        style: form
      - description: "Indicate a section child. E.g, fields for *ruleset* section\
          \ are: decoder_dir, rule_dir, etc"
        explode: true
        in: query
        name: field
        required: false
        schema:
          format: names
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - global:
                      jsonout_output: true
                      alerts_log: true
                      logall: false
                      logall_json: false
                      email_notification: false
                      smtp_server: smtp.example.wazuh.com
                      email_from: wazuh@example.wazuh.com
                      email_to: recipient@example.wazuh.com
                      email_maxperhour: 12
                      email_log_source: alerts.log
                      agents_disconnection_time: 10m
                      agents_disconnection_alert_time: 0
                      update_check: true
                      white_list:
                      - 127.0.0.1
                      - ^localhost.localdomain$
                      - 80.58.61.250
                      - 80.58.61.254
                    alerts:
                      log_alert_level: "3"
                      email_alert_level: "12"
                    remote:
                      connection: secure
                      port: 1514
                      protocol:
                      - tcp
                      queue_size: 131072
                    rootcheck:
                      disabled: false
                      check_files: true
                      check_trojans: true
                      check_dev: true
                      check_sys: true
                      check_pids: true
                      check_ports: true
                      check_if: true
                      frequency: 43200
                      rootkit_files:
                      - etc/rootcheck/rootkit_files.txt
                      rootkit_trojans:
                      - etc/rootcheck/rootkit_trojans.txt
                      skip_nfs: true
                    cis-cat:
                      disabled: true
                      timeout: 1800
                      interval: 1d
                      scan-on-start: true
                      java_path: wodles/java
                      ciscat_path: wodles/ciscat
                    osquery:
                      disabled: true
                      run_daemon: true
                      log_path: /var/log/osquery/osqueryd.results.log
                      config_path: /etc/osquery/osquery.conf
                      add_labels: true
                    syscollector:
                      disabled: false
                      interval: 1h
                      scan_on_start: true
                      hardware: true
                      os: true
                      network: true
                      packages: true
                      ports:
                        all: false
                        item: true
                      processes: true
                      synchronization:
                        max_eps: 10
                    sca:
                      enabled: true
                      scan_on_start: true
                      interval: 12h
                      skip_nfs: true
                    vulnerability-detection:
                      enabled: true
                      index-status: true
                      feed-update-interval: 60m
                    indexer:
                      enabled: true
                      hosts:
                      - http://127.0.0.1:9200
                      ssl:
                        certificate_authorities:
                          ca:
                          - /etc/filebeat/certs/root-ca.pem
                        certificate:
                        - /etc/filebeat/certs/filebeat.pem
                        key:
                        - /etc/filebeat/certs/filebeat-key.pem
                    syscheck:
                      disabled: false
                      frequency: 43200
                      scan_on_start: true
                      alert_new_files: true
                      auto_ignore:
                        frequency: 10
                        timeframe: 3600
                        item: false
                      directories:
                      - path: /etc
                      - path: /usr/bin
                      - path: /usr/sbin
                      - path: /bin
                      - path: /sbin
                      - path: /boot
                      ignore:
                      - /etc/mtab
                      - /etc/hosts.deny
                      - /etc/mail/statistics
                      - /etc/random-seed
                      - /etc/random.seed
                      - /etc/adjtime
                      - /etc/httpd/logs
                      - /etc/utmpx
                      - /etc/wtmpx
                      - /etc/cups/certs
                      - /etc/dumpdates
                      - /etc/svc/volatile
                      - type: sregex
                        item: .log$|.swp$
                      nodiff:
                      - /etc/ssl/private.key
                      skip_nfs: true
                      skip_dev: true
                      skip_proc: true
                      skip_sys: true
                      process_priority: 10
                      max_eps: 50
                      synchronization:
                        enabled: true
                        interval: 5m
                        max_eps: 10
                    command:
                    - name: disable-account
                      executable: disable-account
                      timeout_allowed: true
                    - name: restart-wazuh
                      executable: restart-wazuh
                    - name: firewall-drop
                      executable: firewall-drop
                      timeout_allowed: true
                    - name: host-deny
                      executable: host-deny
                      timeout_allowed: true
                    - name: route-null
                      executable: route-null
                      timeout_allowed: true
                    - name: win_route-null
                      executable: route-null.exe
                      timeout_allowed: true
                    - name: netsh
                      executable: netsh.exe
                      timeout_allowed: true
                    localfile:
                    - log_format: syslog
                      location: /var/ossec/logs/active-responses.log
                    - log_format: syslog
                      location: /var/log/dpkg.log
                    - log_format: command
                      command: df -P
                      frequency: 360
                    - log_format: full_command
                      command: "netstat -tulpn | sed 's/\\([[:alnum:]]\\+\\)\\ \\\
                        +[[:digit:]]\\+\\ \\+[[:digit:] ]\\+\\ \\+\\(.*\\):\\([[:digit:]]*\\\
                        )\\ \\+\\([0-9\\.\\:\\*]\\+\\).\\+\\ \\([[:digit:]]*\\/[ [:alnum:]\\\
                        -]*\\).*/\\1 \\2 == \\3 == \\4 \\5/' | sort -k 4 -g | sed\
                        \ 's/ == \\(.*\\) ==/:\\1/' | sed 1,2d"
                      alias: netstat listening ports
                      frequency: 360
                    - log_format: full_command
                      command: last -n 20
                      frequency: 360
                    ruleset:
                      decoder_dir:
                      - ruleset/decoders
                      - etc/decoders
                      rule_dir:
                      - ruleset/rules
                      - etc/rules
                      rule_exclude:
                      - 0215-policy_rules.xml
                      list:
                      - etc/lists/audit-keys
                      - etc/lists/amazon/aws-eventnames
                      - etc/lists/security-eventchannel
                    auth:
                      disabled: false
                      port: "1515"
                      use_source_ip: "no"
                      purge: "yes"
                      use_password: "no"
                      ciphers: HIGH:!ADH:!EXP:!MD5:!RC4:!3DES:!CAMELLIA:@STRENGTH
                      ssl_verify_host: "no"
                      ssl_manager_cert: etc/sslmanager.cert
                      ssl_manager_key: etc/sslmanager.key
                      ssl_auto_negotiate: "no"
                    cluster:
                      name: wazuh
                      node_name: master-node
                      node_type: master
                      key: 9d273b53510fef702b54a92e9cffc82e
                      port: "1516"
                      bind_addr: 0.0.0.0
                      nodes:
                      - wazuh-master
                      hidden: "no"
                      disabled: "no"
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Configuration was successfully read in specified node
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_configuration_node_200_response'
          description: Node configuration
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get node config
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
    put:
      description: Replace wazuh configuration for the given node with the data contained
        in the API request
      operationId: api.controllers.cluster_controller.update_configuration
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Cluster node name
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          format: names
          type: string
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        description: Content of the ossec.conf to be uploaded
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                message: Configuration was successfully updated
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_update_configuration_200_response'
          description: Confirmation message
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Update node configuration
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:update_config'
  /cluster/{node_id}/daemons/stats:
    get:
      description: Return Wazuh statistical information from specified daemons in
        a specified cluster node
      operationId: api.controllers.cluster_controller.get_daemon_stats_node
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Cluster node name
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          format: names
          type: string
        style: simple
      - description: "List of daemon names (separated by comma), all daemons selected\
          \ by default if not specified"
        explode: true
        in: query
        name: daemons_list
        required: false
        schema:
          items:
            enum:
            - wazuh-analysisd
            - wazuh-remoted
            - wazuh-db
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - uptime: 2022-07-21T10:09:20+00:00
                    timestamp: 2022-07-21T10:48:32+00:00
                    name: wazuh-remoted
                    metrics:
                      bytes:
                        received: 0
                        sent: 0
                      keys_reload_count: 0
                      messages:
                        received_breakdown:
                          control: 0
                          control_breakdown:
                            keepalive: 0
                            request: 0
                            shutdown: 0
                            startup: 0
                          dequeued_after: 0
                          discarded: 0
                          event: 0
                          ping: 0
                          unknown: 0
                        sent_breakdown:
                          ack: 0
                          ar: 0
                          discarded: 0
                          request: 0
                          sca: 0
                          shared: 0
                      queues:
                        received:
                          size: 131072
                          usage: 0
                      tcp_sessions: 0
                  total_affected_items: 1
                  failed_items: []
                  total_failed_items: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_daemon_stats_node_200_response'
          description: Wazuh daemon stats
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get Wazuh daemon stats from a cluster node
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /cluster/{node_id}/stats:
    get:
      description: "Return Wazuh statistical information in node {node_id} for the\
        \ current or specified date"
      operationId: api.controllers.cluster_controller.get_stats_node
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Cluster node name
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          format: names
          type: string
        style: simple
      - description: Date to obtain statistical information from. Format YYYY-MM-DD
        explode: true
        in: query
        name: date
        required: false
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - hour: 10
                    alerts:
                    - sigid: 530
                      level: 0
                      times: 121
                    - sigid: 501
                      level: 3
                      times: 5
                    - sigid: 502
                      level: 3
                      times: 1
                    - sigid: 503
                      level: 3
                      times: 1
                    - sigid: 506
                      level: 3
                      times: 2
                    - sigid: 515
                      level: 0
                      times: 12
                    - sigid: 19000
                      level: 0
                      times: 980
                    - sigid: 19007
                      level: 7
                      times: 470
                    - sigid: 19008
                      level: 3
                      times: 305
                    - sigid: 19009
                      level: 3
                      times: 185
                    - sigid: "19004,"
                      level: "7,"
                      times: 10
                    totalAlerts: 2092
                    events: 2104
                    syscheck: 12
                    firewall: 0
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Statistical information for each node was successfully read
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_stats_node_200_response'
          description: Wazuh node stats
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get node stats
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /cluster/{node_id}/stats/hourly:
    get:
      description: "Return Wazuh statistical information in node {node_id} per hour.\
        \ Each number in the averages field represents the average of alerts per hour"
      operationId: api.controllers.cluster_controller.get_stats_hourly_node
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Cluster node name
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          format: names
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Statistical information per hour for each node was successfully
                  read
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_stats_node_200_response'
          description: Wazuh node hourly stats
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get node stats hour
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /cluster/{node_id}/stats/weekly:
    get:
      description: "Return Wazuh statistical information in node {node_id} per week.\
        \ Each number in the averages field represents the average of alerts per hour\
        \ for that specific day"
      operationId: api.controllers.cluster_controller.get_stats_weekly_node
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Cluster node name
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          format: names
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - Sun:
                      averages:
                      - 40
                      - 24
                      - 67
                      - 234
                      - 66
                      - 24
                      - 634
                      - 66
                      - 123
                      - 56
                      - 65
                      - 23
                      - 666
                      - 233
                      - 646
                      - 44
                      - 64
                      - 99
                      - 34
                      - 235
                      - 653
                      - 25
                      - 65
                      - 23
                      interactions: 0
                  - Mon:
                      averages:
                      - 40
                      - 24
                      - 67
                      - 234
                      - 66
                      - 24
                      - 634
                      - 66
                      - 123
                      - 56
                      - 65
                      - 23
                      - 666
                      - 233
                      - 646
                      - 44
                      - 64
                      - 99
                      - 34
                      - 235
                      - 653
                      - 25
                      - 65
                      - 23
                      interactions: 0
                  - Tue:
                      averages:
                      - 40
                      - 24
                      - 67
                      - 234
                      - 66
                      - 24
                      - 634
                      - 66
                      - 123
                      - 56
                      - 65
                      - 23
                      - 666
                      - 233
                      - 646
                      - 44
                      - 64
                      - 99
                      - 34
                      - 235
                      - 653
                      - 25
                      - 65
                      - 23
                      interactions: 0
                  - Wed:
                      averages:
                      - 40
                      - 24
                      - 67
                      - 234
                      - 66
                      - 24
                      - 634
                      - 66
                      - 123
                      - 56
                      - 65
                      - 23
                      - 666
                      - 233
                      - 646
                      - 44
                      - 64
                      - 99
                      - 34
                      - 235
                      - 653
                      - 25
                      - 65
                      - 23
                      interactions: 0
                  - Thu:
                      averages:
                      - 40
                      - 24
                      - 67
                      - 234
                      - 66
                      - 24
                      - 634
                      - 66
                      - 123
                      - 56
                      - 65
                      - 23
                      - 666
                      - 233
                      - 646
                      - 44
                      - 64
                      - 99
                      - 34
                      - 235
                      - 653
                      - 25
                      - 65
                      - 23
                      interactions: 0
                  - Fri:
                      averages:
                      - 40
                      - 24
                      - 67
                      - 234
                      - 66
                      - 24
                      - 634
                      - 66
                      - 123
                      - 56
                      - 65
                      - 23
                      - 666
                      - 233
                      - 646
                      - 44
                      - 64
                      - 99
                      - 34
                      - 235
                      - 653
                      - 25
                      - 65
                      - 23
                      interactions: 0
                  - Sat:
                      averages:
                      - 40
                      - 24
                      - 67
                      - 234
                      - 66
                      - 24
                      - 634
                      - 66
                      - 123
                      - 56
                      - 65
                      - 23
                      - 666
                      - 233
                      - 646
                      - 44
                      - 64
                      - 99
                      - 34
                      - 235
                      - 653
                      - 25
                      - 65
                      - 23
                      interactions: 0
                  total_affected_items: 7
                  total_failed_items: 0
                  failed_items: []
                message: Statistical information per week for each node was successfully
                  read
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_stats_node_200_response'
          description: Wazuh node weekly stats
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get node stats week
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /cluster/{node_id}/stats/analysisd:
    get:
      deprecated: true
      description: "Return Wazuh analysisd statistical information in node {node_id}"
      operationId: api.controllers.cluster_controller.get_stats_analysisd_node
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Cluster node name
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          format: names
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - total_events_decoded: 113.0
                    syscheck_events_decoded: 2.0
                    syscollector_events_decoded: 0.0
                    rootcheck_events_decoded: 4.0
                    sca_events_decoded: 2.0
                    winevt_events_decoded: 0.0
                    dbsync_messages_dispatched: 55.0
                    other_events_decoded: 50.0
                    events_processed: 57.0
                    events_received: 114.0
                    events_dropped: 0.0
                    alerts_written: 3.0
                    firewall_written: 0.0
                    fts_written: 0.0
                    syscheck_queue_usage: 0.0
                    syscheck_queue_size: 16384.0
                    syscollector_queue_usage: 0.0
                    syscollector_queue_size: 16384.0
                    rootcheck_queue_usage: 0.0
                    rootcheck_queue_size: 16384.0
                    sca_queue_usage: 0.0
                    sca_queue_size: 16384.0
                    hostinfo_queue_usage: 0.0
                    hostinfo_queue_size: 16384.0
                    winevt_queue_usage: 0.0
                    winevt_queue_size: 16384.0
                    dbsync_queue_usage: 0.0
                    dbsync_queue_size: 16384.0
                    upgrade_queue_usage: 0.0
                    upgrade_queue_size: 16384.0
                    event_queue_usage: 0.0
                    event_queue_size: 16384.0
                    rule_matching_queue_usage: 0.0
                    rule_matching_queue_size: 16384.0
                    alerts_queue_usage: 0.0
                    alerts_queue_size: 16384.0
                    firewall_queue_usage: 0.0
                    firewall_queue_size: 16384.0
                    statistical_queue_usage: 0.0
                    statistical_queue_size: 16384.0
                    archives_queue_usage: 0.0
                    archives_queue_size: 16384.0
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Statistical information for each node was successfully read
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_stats_node_200_response'
          description: Wazuh node analysisd stats
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get node stats analysisd
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /cluster/{node_id}/stats/remoted:
    get:
      deprecated: true
      description: "Return Wazuh remoted statistical information in node {node_id}"
      operationId: api.controllers.cluster_controller.get_stats_remoted_node
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Cluster node name
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          format: names
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - queue_size: 0.0
                    total_queue_size: 131072.0
                    tcp_sessions: 4.0
                    evt_count: 9089.0
                    ctrl_msg_count: 2099.0
                    discarded_count: 0.0
                    sent_bytes: 784598.0
                    recv_bytes: 4541779.0
                    dequeued_after_close: 0.0
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Statistical information for each node was successfully read
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_stats_node_200_response'
          description: Wazuh node remoted stats
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get node stats remoted
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /cluster/{node_id}/logs:
    get:
      description: Return the last 2000 wazuh log entries in the specified node
      operationId: api.controllers.cluster_controller.get_log_node
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Cluster node name
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          format: names
          type: string
        style: simple
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Maximum number of lines to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: Wazuh component that logged the event
        explode: true
        in: query
        name: tag
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by log level
        explode: true
        in: query
        name: level
        required: false
        schema:
          enum:
          - critical
          - debug
          - debug2
          - error
          - info
          - warning
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - timestamp: 2021-05-27T12:18:08Z
                    tag: wazuh-remoted
                    level: debug
                    description: ' TCP socket 20 already in keystore. Updating...'
                  - timestamp: 2021-05-27T12:18:08Z
                    tag: wazuh-remoted
                    level: debug
                    description: ' Agent ''003'' group is ''default'''
                  - timestamp: 2021-05-27T12:18:08Z
                    tag: wazuh-remoted
                    level: debug
                    description: ' Agent ''003'' with group ''default'' file ''merged.mg''
                      MD5 ''9a016508cea1e997ab8569f5cfab30f5'''
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: Logs were successfully read in specified node
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_log_node_200_response'
          description: Wazuh node logs
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get node logs
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /cluster/{node_id}/logs/summary:
    get:
      description: Return a summary of the last 2000 wazuh log entries in the specified
        node
      operationId: api.controllers.cluster_controller.get_log_summary_node
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Cluster node name
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          format: names
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - indexer-connector:
                      all: 24
                      info: 0
                      error: 0
                      critical: 0
                      warning: 24
                      debug: 0
                  - wazuh-db:
                      info: 1
                      all: 4
                      critical: 0
                      debug: 0
                      error: 3
                      warning: 0
                  - wazuh-modulesd:content_manager:
                      info: 1
                      all: 1
                      critical: 0
                      debug: 0
                      error: 0
                      warning: 0
                  - wazuh-modulesd:router:
                      info: 1
                      all: 1
                      critical: 0
                      debug: 0
                      error: 0
                      warning: 0
                  - wazuh-remoted:
                      info: 744
                      all: 0
                      critical: 0
                      debug: 744
                      error: 0
                      warning: 0
                  total_affected_items: 5
                  failed_items: []
                  total_failed_items: 0
                message: Log was successfully summarized in specified node
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_log_summary_node_200_response'
          description: Wazuh node logs summary
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get node logs summary
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /cluster/restart:
    put:
      description: Restart all nodes in the cluster or a list of them
      operationId: api.controllers.cluster_controller.put_restart
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of node IDs (separated by comma), all nodes selected by\
          \ default if not specified"
        explode: true
        in: query
        name: nodes_list
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_put_restart_200_response'
          description: List of affected nodes
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Restart nodes
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
      - $ref: '#/x-rbac-catalog/actions/cluster:restart'
  /cluster/configuration/validation:
    get:
      description: Return whether the Wazuh configuration is correct or not in all
        cluster nodes or a list of them
      operationId: api.controllers.cluster_controller.get_conf_validation
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of node IDs (separated by comma), all nodes selected by\
          \ default if not specified"
        explode: true
        in: query
        name: nodes_list
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_conf_validation_200_response'
          description: Configuration status
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Check nodes config
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /cluster/{node_id}/configuration/{component}/{configuration}:
    get:
      description: Return the requested configuration in JSON format for the specified
        node
      operationId: api.controllers.cluster_controller.get_node_config
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Cluster node name
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          format: names
          type: string
        style: simple
      - description: Selected agent's component
        explode: false
        in: path
        name: component
        required: true
        schema:
          enum:
          - agent
          - agentless
          - analysis
          - auth
          - com
          - csyslog
          - integrator
          - logcollector
          - mail
          - monitor
          - request
          - syscheck
          - wazuh-db
          - wmodules
          type: string
        style: simple
      - description: |
          <p>Selected agent's configuration to read. The configuration to read depends on the selected component.
          The following table shows all available combinations of component and configuration values:</p>
          <table class="table table-striped table-bordered">
          <thead>
          <tr>
          <th>Component</th>
          <th>Configuration</th>
          <th>Tag</th>
          </tr>
          </thead>
          <tbody>
          <tr>
          <td>agent</td>
          <td>client</td>
          <td><code>&lt;client&gt;</code></td>
          </tr>
          <tr>
          <td>agent</td>
          <td>buffer</td>
          <td><code>&lt;client_buffer&gt;</code></td>
          </tr>
          <tr>
          <td>agent</td>
          <td>labels</td>
          <td><code>&lt;labels&gt;</code></td>
          </tr>
          <tr>
          <td>agent</td>
          <td>internal</td>
          <td><code>&lt;agent&gt;</code>, <code>&lt;monitord&gt;</code>, <code>&lt;remoted&gt;</code></td>
          </tr>
          <tr>
          <td>agent</td>
          <td>anti_tampering</td>
          <td><code>&lt;anti_tampering&gt;</code></td>
          </tr>
          <tr>
          <td>agentless</td>
          <td>agentless</td>
          <td><code>&lt;agentless&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>global</td>
          <td><code>&lt;global&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>active_response</td>
          <td><code>&lt;active-response&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>alerts</td>
          <td><code>&lt;alerts&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>command</td>
          <td><code>&lt;command&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>rules</td>
          <td><code>&lt;rule&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>decoders</td>
          <td><code>&lt;decoder&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>internal</td>
          <td><code>&lt;analysisd&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>rule_test</td>
          <td><code>&lt;rule_test&gt;</code></td>
          </tr>
          <tr>
          <td>auth</td>
          <td>auth</td>
          <td><code>&lt;auth&gt;</code></td>
          </tr>
          <tr>
          <td>com</td>
          <td>active-response</td>
          <td><code>&lt;active-response&gt;</code></td>
          </tr>
          <tr>
          <td>com</td>
          <td>logging</td>
          <td><code>&lt;logging&gt;</code></td>
          </tr>
          <tr>
          <td>com</td>
          <td>internal</td>
          <td><code>&lt;execd&gt;</code></td>
          </tr>
          <tr>
          <td>com</td>
          <td>cluster</td>
          <td><code>&lt;cluster&gt;</code></td>
          </tr>
          <tr>
          <td>csyslog</td>
          <td>csyslog</td>
          <td><code>&lt;csyslog_output&gt;</code></td>
          </tr>
          <tr>
          <td>integrator</td>
          <td>integration</td>
          <td><code>&lt;integration&gt;</code></td>
          </tr>
          <tr>
          <td>logcollector</td>
          <td>localfile</td>
          <td><code>&lt;localfile&gt;</code></td>
          </tr>
          <tr>
          <td>logcollector</td>
          <td>socket</td>
          <td><code>&lt;socket&gt;</code></td>
          </tr>
          <tr>
          <td>logcollector</td>
          <td>internal</td>
          <td><code>&lt;logcollector&gt;</code></td>
          </tr>
          <tr>
          <td>mail</td>
          <td>global</td>
          <td><code>&lt;global&gt;&lt;email...&gt;</code></td>
          </tr>
          <tr>
          <td>mail</td>
          <td>alerts</td>
          <td><code>&lt;email_alerts&gt;</code></td>
          </tr>
          <tr>
          <td>mail</td>
          <td>internal</td>
          <td><code>&lt;maild&gt;</code></td>
          </tr>
          <tr>
          <td>monitor</td>
          <td>global</td>
          <td><code>&lt;global&gt;</code></td>
          </tr>
          <tr>
          <td>monitor</td>
          <td>internal</td>
          <td><code>&lt;monitord&gt;</code></td>
          </tr>
          <tr>
          <td>monitor</td>
          <td>reports</td>
          <td><code>&lt;reports&gt;</code></td>
          </tr>
          <tr>
          <td>request</td>
          <td>global</td>
          <td><code>&lt;global&gt;</code></td>
          </tr>
          <tr>
          <td>request</td>
          <td>remote</td>
          <td><code>&lt;remote&gt;</code></td>
          </tr>
          <tr>
          <td>request</td>
          <td>internal</td>
          <td><code>&lt;remoted&gt;</code></td>
          </tr>
          <tr>
          <td>syscheck</td>
          <td>syscheck</td>
          <td><code>&lt;syscheck&gt;</code></td>
          </tr>
          <tr>
          <td>syscheck</td>
          <td>rootcheck</td>
          <td><code>&lt;rootcheck&gt;</code></td>
          </tr>
          <tr>
          <td>syscheck</td>
          <td>internal</td>
          <td><code>&lt;syscheck&gt;</code>, <code>&lt;rootcheck&gt;</code></td>
          </tr>
          <tr>
          <td>wazuh-db</td>
          <td>internal</td>
          <td><code>&lt;wazuh_db&gt;</code></td>
          </tr>
          <tr>
          <td>wazuh-db</td>
          <td>wdb</td>
          <td><code>&lt;wdb&gt;</code></td>
          </tr>
          <tr>
          <td>wmodules</td>
          <td>wmodules</td>
          <td><code>&lt;wodle&gt;</code></td>
          </tr>
          </tbody>
          </table>
        explode: false
        in: path
        name: configuration
        required: true
        schema:
          enum:
          - client
          - buffer
          - labels
          - internal
          - anti_tampering
          - agentless
          - global
          - active_response
          - alerts
          - command
          - rules
          - decoders
          - auth
          - logging
          - reports
          - active-response
          - cluster
          - csyslog
          - integration
          - localfile
          - socket
          - remote
          - syscheck
          - rootcheck
          - wdb
          - wmodules
          - rule_test
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - wdb:
                      backup:
                        database: global
                        enabled: true
                        interval: 86400
                        max_files: 3
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Active configuration was successfully read in specified node
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_node_config_200_response'
          description: Cluster configuration on-demand
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get node active configuration
      tags:
      - Cluster
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
  /lists:
    get:
      description: "Return the contents of all CDB lists. Optionally, the result can\
        \ be filtered by several criteria. See available parameters for more details"
      operationId: api.controllers.cdb_list_controller.get_lists
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: Filter by relative directory name
        explode: true
        in: query
        name: relative_dirname
        required: false
        schema:
          format: get_dirnames_path
          type: string
        style: form
      - description: Filter by filename
        explode: true
        in: query
        name: filename
        required: false
        schema:
          items:
            format: alphanumeric
            type: string
          type: array
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - items:
                    - key: audit-wazuh-w
                      value: write
                    - key: audit-wazuh-r
                      value: read
                    - key: audit-wazuh-a
                      value: attribute
                    - key: audit-wazuh-x
                      value: execute
                    - key: audit-wazuh-c
                      value: command
                    relative_dirname: etc/lists
                    filename: audit-keys
                  total_affected_items: 4
                  total_failed_items: 0
                  failed_items: []
                message: All specified lists were returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cdb_list_controller_get_lists_200_response'
          description: Successfully got all CDB lists and the files where they are
            defined
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get CDB lists info
      tags:
      - Lists
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/lists:read'
  /lists/files/{filename}:
    delete:
      description: Delete a specified CDB list file. Only the filename can be specified.
        It will be searched recursively if not found
      operationId: api.controllers.cdb_list_controller.delete_file
      parameters:
      - description: Filename (CDB list) to get/edit/delete.
        explode: false
        in: path
        name: filename
        required: true
        schema:
          format: cdb_filename_path
          type: string
        style: simple
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - etc/lists/test
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: CDB list file was successfully deleted
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_update_configuration_200_response'
          description: Confirmation message
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Delete CDB list file
      tags:
      - Lists
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/lists:delete'
    get:
      description: Return the content of a CDB list file. Only the filename can be
        specified. It will be searched recursively if not found
      operationId: api.controllers.cdb_list_controller.get_file
      parameters:
      - description: Filename (CDB list) to get/edit/delete.
        explode: false
        in: path
        name: filename
        required: true
        schema:
          format: cdb_filename_path
          type: string
        style: simple
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Format response in plain text
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - audit-wazuh-w: write
                    audit-wazuh-r: read
                    audit-wazuh-a: attribute
                    audit-wazuh-x: execute
                    audit-wazuh-c: command
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: CDB list was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cdb_list_controller_get_file_200_response'
            text/plain:
              example: |
                audit-wazuh-w:write
                audit-wazuh-r:read
                audit-wazuh-a:attribute
                audit-wazuh-x:execute
                audit-wazuh-c:command
              schema:
                type: string
          description: Successfully got CDB list
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get CDB list file content
      tags:
      - Lists
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/lists:read'
    put:
      description: Replace or upload a CDB list file with the data contained in the
        API request
      operationId: api.controllers.cdb_list_controller.put_file
      parameters:
      - description: Filename (CDB list) to get/edit/delete.
        explode: false
        in: path
        name: filename
        required: true
        schema:
          format: cdb_filename_path
          type: string
        style: simple
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "If set to false, an exception will be raised when updating contents\
          \ of an already existing filename"
        explode: true
        in: query
        name: overwrite
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        description: Content of the file to be uploaded
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - etc/lists/audit-keys
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: CDB list file uploaded successfully
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_update_configuration_200_response'
          description: Confirmation message
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Update CDB list file
      tags:
      - Lists
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/lists:update'
      - $ref: '#/x-rbac-catalog/actions/lists:delete'
  /lists/files:
    get:
      description: Return the path from all CDB lists. Use this method to know all
        the CDB lists and their location in the filesystem relative to Wazuh installation
        folder
      operationId: api.controllers.cdb_list_controller.get_lists_files
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: Filter by relative directory name
        explode: true
        in: query
        name: relative_dirname
        required: false
        schema:
          format: get_dirnames_path
          type: string
        style: form
      - description: Filter by filename
        explode: true
        in: query
        name: filename
        required: false
        schema:
          items:
            format: alphanumeric
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - relative_dirname: etc/lists/amazon
                    filename: aws-eventnames
                  - relative_dirname: etc/lists/amazon
                    filename: aws-sources
                  - relative_dirname: etc/lists
                    filename: audit-keys
                  - relative_dirname: etc/lists
                    filename: security-eventchannel
                  total_affected_items: 4
                  total_failed_items: 0
                  failed_items: []
                message: All specified paths were returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cdb_list_controller_get_file_200_response'
          description: Successfully got CDB lists
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get CDB lists files
      tags:
      - Lists
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/lists:read'
  /logtest:
    put:
      description: Run logtest tool to check if a specified log raises any alert among
        other information
      operationId: api.controllers.logtest_controller.run_logtest_tool
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogtestRequest'
        description: Run logtest with the parameters below
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                error: 0
                data:
                  messages:
                  - "INFO: (7202): Session initialized with token '8cd2d6d1'"
                  token: 8cd2d6d1
                  output:
                    timestamp: 2021-05-27T12:46:03.391000Z
                    rule:
                      level: 2
                      description: Unknown problem somewhere in the system.
                      id: 1002
                      firedtimes: 1
                      mail: false
                      groups:
                      - syslog
                      - errors
                      gpg13:
                      - 4.3
                    agent:
                      id: "000"
                      name: wazuh-master
                    manager:
                      name: wazuh-master
                    id: "1622119563.2682664"
                    cluster:
                      name: wazuh
                      node: master-node
                    full_log: ERROR
                    decoder: None
                    location: /var/log/syslog
                  alert: false
                  codemsg: 1
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Successfully run the logtest tool
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Run logtest
      tags:
      - Logtest
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/logtest:run'
  /logtest/sessions/{token}:
    delete:
      description: "Delete the saved logtest session corresponding to {token}"
      operationId: api.controllers.logtest_controller.end_logtest_session
      parameters:
      - description: Token of the logtest saved session
        explode: false
        in: path
        name: token
        required: true
        schema:
          format: alphanumeric
          type: string
        style: simple
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                error: 0
                data:
                  messages:
                  - "INFO: (7206): The session '573ed2ca' was closed successfully"
                  codemsg: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Successfully deleted the saved session or no session found
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: End session
      tags:
      - Logtest
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/logtest:run'
  /manager/status:
    get:
      description: Return the status of all Wazuh daemons
      operationId: api.controllers.manager_controller.get_status
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - wazuh-agentlessd: stopped
                    wazuh-analysisd: running
                    wazuh-authd: running
                    wazuh-csyslogd: stopped
                    wazuh-dbd: stopped
                    wazuh-monitor": running
                    wazuh-execd: running
                    wazuh-integratord: stopped
                    wazuh-logcollector: running
                    wazuh-maild: stopped
                    wazuh-remoted: running
                    wazuh-reportd: stopped
                    wazuh-syscheckd: running
                    wazuh-clusterd: running
                    wazuh-modulesd: running
                    wazuh-db: running
                    wazuh-apid: running
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Processes status was successfully read in specified node
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_status_node_200_response'
          description: Wazuh manager daemons statuses
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get status
      tags:
      - Manager
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/manager:read'
  /manager/info:
    get:
      description: "Return basic information such as version, compilation date, installation\
        \ path"
      operationId: api.controllers.manager_controller.get_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - path: /var/ossec
                    version: v4.3.0
                    type: server
                    max_agents: unlimited
                    openssl_support: true
                    tz_offset: 0
                    tz_name: UTC
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Basic information was successfully read in specified node
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_info_node_200_response'
          description: Manager information
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get information
      tags:
      - Manager
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/manager:read'
  /manager/configuration:
    get:
      description: Return wazuh configuration used. The 'section' and 'field' parameters
        will be ignored if 'raw' parameter is provided.
      operationId: api.controllers.manager_controller.get_configuration
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Format response in plain text
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      - description: Indicates the wazuh configuration section
        explode: true
        in: query
        name: section
        required: false
        schema:
          enum:
          - active-response
          - agentless
          - alerts
          - auth
          - client
          - client_buffer
          - cluster
          - command
          - database_output
          - email_alerts
          - global
          - integration
          - labels
          - localfile
          - logging
          - remote
          - reports
          - rootcheck
          - ruleset
          - sca
          - socket
          - syscheck
          - syslog_output
          - vulnerability-detection
          - indexer
          - aws-s3
          - azure-logs
          - cis-cat
          - docker-listener
          - open-scap
          - osquery
          - syscollector
          type: string
        style: form
      - description: "Indicate a section child. E.g, fields for *ruleset* section\
          \ are: decoder_dir, rule_dir, etc"
        explode: true
        in: query
        name: field
        required: false
        schema:
          format: names
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_configuration_node_200_response'
            application/xml:
              example:
                data:
                  affected_items:
                  - global:
                      jsonout_output: true
                      alerts_log: true
                      logall: false
                      logall_json: false
                      email_notification: false
                      smtp_server: smtp.example.wazuh.com
                      email_from: wazuh@example.wazuh.com
                      email_to: recipient@example.wazuh.com
                      email_maxperhour: 12
                      email_log_source: alerts.log
                      queue_size: 131072
                      update_check: true
                      white_list:
                      - 127.0.0.1
                      - ^localhost.localdomain$
                      - 127.0.0.53
                    alerts:
                      log_alert_level: "3"
                      email_alert_level: "12"
                    cis-cat:
                      disabled: true
                      timeout: 1800
                      interval: 1d
                      scan-on-start: true
                      java_path: wodles/java
                      ciscat_path: wodles/ciscat
                    command:
                    - name: disable-account
                      executable: disable-account.sh
                      expect: user
                      timeout_allowed: true
                    - name: restart-ossec
                      executable: restart-ossec.sh
                  total_affected_items: 1
                  failed_items: []
                  total_failed_items: 0
                message: Configuration was successfully read
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_configuration_node_200_response'
          description: Wazuh configuration
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get configuration
      tags:
      - Manager
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/manager:read'
    put:
      description: Replace Wazuh configuration with the data contained in the API
        request
      operationId: api.controllers.manager_controller.update_configuration
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        description: Content of the ossec.conf to be uploaded
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                message: Configuration was successfully updated
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_update_configuration_200_response'
          description: Confirmation message
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "415":
          content:
            application/json:
              example:
                title: Unsupported media type
                detail: "Invalid Content-type (application/json), expected ['application/octet-stream']"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported media type
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Update Wazuh configuration
      tags:
      - Manager
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/manager:update_config'
  /manager/daemons/stats:
    get:
      description: Return Wazuh statistical information from specified daemons
      operationId: api.controllers.manager_controller.get_daemon_stats
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of daemon names (separated by comma), all daemons selected\
          \ by default if not specified"
        explode: true
        in: query
        name: daemons_list
        required: false
        schema:
          items:
            enum:
            - wazuh-analysisd
            - wazuh-remoted
            - wazuh-db
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - uptime: 2022-07-21T10:09:20+00:00
                    timestamp: 2022-07-21T10:48:32+00:00
                    name: wazuh-remoted
                    metrics:
                      bytes:
                        received: 0
                        sent: 0
                      keys_reload_count: 0
                      messages:
                        received_breakdown:
                          control: 0
                          control_breakdown:
                            keepalive: 0
                            request: 0
                            shutdown: 0
                            startup: 0
                          dequeued_after: 0
                          discarded: 0
                          event: 0
                          ping: 0
                          unknown: 0
                        sent_breakdown:
                          ack: 0
                          ar: 0
                          discarded: 0
                          request: 0
                          sca: 0
                          shared: 0
                      queues:
                        received:
                          size: 131072
                          usage: 0
                      tcp_sessions: 0
                  total_affected_items: 1
                  failed_items: []
                  total_failed_items: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_daemon_stats_node_200_response'
          description: Wazuh daemon stats
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get Wazuh daemon stats
      tags:
      - Manager
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/manager:read'
  /manager/stats:
    get:
      description: Return Wazuh statistical information for the current or specified
        date
      operationId: api.controllers.manager_controller.get_stats
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Date to obtain statistical information from. Format YYYY-MM-DD
        explode: true
        in: query
        name: date
        required: false
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - hour: 15
                    alerts:
                    - sigid: 5303
                      level: 3
                      times: 1
                    - sigid: 5501
                      level: 3
                      times: 4
                    - sigid: 221
                      level: 0
                      times: 653
                    totalAlerts: 658
                    events: 4387
                    firewall: 0
                  - hour: 16
                    alerts:
                    - sigid: 5521
                      level: 0
                      times: 1
                    - sigid: 530
                      level: 0
                      times: 120
                    totalAlerts: 121
                    events: 4379
                    syscheck: 0
                    firewall: 0
                  total_affected_items: 2
                  failed_items: []
                  total_failed_items: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_stats_node_200_response'
          description: Wazuh stats
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get stats
      tags:
      - Manager
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/manager:read'
  /manager/stats/hourly:
    get:
      description: Return Wazuh statistical information per hour. Each number in the
        averages field represents the average of alerts per hour
      operationId: api.controllers.manager_controller.get_stats_hourly
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  total_affected_items: 1
                  failed_items: []
                  total_failed_items: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_stats_node_200_response'
          description: Wazuh hourly stats
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get stats hour
      tags:
      - Manager
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/manager:read'
  /manager/stats/weekly:
    get:
      description: Return Wazuh statistical information per week. Each number in the
        averages field represents the average of alerts per hour for that specific
        day
      operationId: api.controllers.manager_controller.get_stats_weekly
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - Sun:
                      averages:
                      - 40
                      - 24
                      - 67
                      - 234
                      - 66
                      - 24
                      - 634
                      - 66
                      - 123
                      - 56
                      - 65
                      - 23
                      - 666
                      - 233
                      - 646
                      - 44
                      - 64
                      - 99
                      - 34
                      - 235
                      - 653
                      - 25
                      - 65
                      - 23
                      interactions: 0
                  - Mon:
                      averages:
                      - 40
                      - 24
                      - 67
                      - 234
                      - 66
                      - 24
                      - 634
                      - 66
                      - 123
                      - 56
                      - 65
                      - 23
                      - 666
                      - 233
                      - 646
                      - 44
                      - 64
                      - 99
                      - 34
                      - 235
                      - 653
                      - 25
                      - 65
                      - 23
                      interactions: 0
                  - Tue:
                      averages:
                      - 40
                      - 24
                      - 67
                      - 234
                      - 66
                      - 24
                      - 634
                      - 66
                      - 123
                      - 56
                      - 65
                      - 23
                      - 666
                      - 233
                      - 646
                      - 44
                      - 64
                      - 99
                      - 34
                      - 235
                      - 653
                      - 25
                      - 65
                      - 23
                      interactions: 0
                  - Wed:
                      averages:
                      - 40
                      - 24
                      - 67
                      - 234
                      - 66
                      - 24
                      - 634
                      - 66
                      - 123
                      - 56
                      - 65
                      - 23
                      - 666
                      - 233
                      - 646
                      - 44
                      - 64
                      - 99
                      - 34
                      - 235
                      - 653
                      - 25
                      - 65
                      - 23
                      interactions: 0
                  - Thu:
                      averages:
                      - 40
                      - 24
                      - 67
                      - 234
                      - 66
                      - 24
                      - 634
                      - 66
                      - 123
                      - 56
                      - 65
                      - 23
                      - 666
                      - 233
                      - 646
                      - 44
                      - 64
                      - 99
                      - 34
                      - 235
                      - 653
                      - 25
                      - 65
                      - 23
                      interactions: 0
                  - Fri:
                      averages:
                      - 40
                      - 24
                      - 67
                      - 234
                      - 66
                      - 24
                      - 634
                      - 66
                      - 123
                      - 56
                      - 65
                      - 23
                      - 666
                      - 233
                      - 646
                      - 44
                      - 64
                      - 99
                      - 34
                      - 235
                      - 653
                      - 25
                      - 65
                      - 23
                      interactions: 0
                  - Sat:
                      averages:
                      - 40
                      - 24
                      - 67
                      - 234
                      - 66
                      - 24
                      - 634
                      - 66
                      - 123
                      - 56
                      - 65
                      - 23
                      - 666
                      - 233
                      - 646
                      - 44
                      - 64
                      - 99
                      - 34
                      - 235
                      - 653
                      - 25
                      - 65
                      - 23
                      interactions: 0
                  total_affected_items: 7
                  failed_items: []
                  total_failed_items: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_stats_node_200_response'
          description: Wazuh weekly stats
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get stats week
      tags:
      - Manager
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/manager:read'
  /manager/stats/analysisd:
    get:
      deprecated: true
      description: Return Wazuh analysisd statistical information
      operationId: api.controllers.manager_controller.get_stats_analysisd
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - total_events_decoded: 113.0
                    syscheck_events_decoded: 2.0
                    syscollector_events_decoded: 0.0
                    rootcheck_events_decoded: 4.0
                    sca_events_decoded: 2.0
                    winevt_events_decoded: 0.0
                    dbsync_messages_dispatched: 55.0
                    other_events_decoded: 50.0
                    events_processed: 57.0
                    events_received: 114.0
                    events_dropped: 0.0
                    alerts_written: 3.0
                    firewall_written: 0.0
                    fts_written: 0.0
                    syscheck_queue_usage: 0.0
                    syscheck_queue_size: 16384.0
                    syscollector_queue_usage: 0.0
                    syscollector_queue_size: 16384.0
                    rootcheck_queue_usage: 0.0
                    rootcheck_queue_size: 16384.0
                    sca_queue_usage: 0.0
                    sca_queue_size: 16384.0
                    hostinfo_queue_usage: 0.0
                    hostinfo_queue_size: 16384.0
                    winevt_queue_usage: 0.0
                    winevt_queue_size: 16384.0
                    dbsync_queue_usage: 0.0
                    dbsync_queue_size: 16384.0
                    upgrade_queue_usage: 0.0
                    upgrade_queue_size: 16384.0
                    event_queue_usage: 0.0
                    event_queue_size: 16384.0
                    rule_matching_queue_usage: 0.0
                    rule_matching_queue_size: 16384.0
                    alerts_queue_usage: 0.0
                    alerts_queue_size: 16384.0
                    firewall_queue_usage: 0.0
                    firewall_queue_size: 16384.0
                    statistical_queue_usage: 0.0
                    statistical_queue_size: 16384.0
                    archives_queue_usage: 0.0
                    archives_queue_size: 16384.0
                  total_affected_items: 1
                  failed_items: []
                  total_failed_items: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_stats_node_200_response'
          description: Wazuh analysisd stats
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get stats analysisd
      tags:
      - Manager
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/manager:read'
  /manager/stats/remoted:
    get:
      deprecated: true
      description: Return Wazuh remoted statistical information
      operationId: api.controllers.manager_controller.get_stats_remoted
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - queue_size: 0.0
                    total_queue_size: 131072.0
                    tcp_sessions: 4.0
                    evt_count: 9089.0
                    ctrl_msg_count: 2099.0
                    discarded_count: 0.0
                    sent_bytes: 784598.0
                    recv_bytes: 4541779.0
                    dequeued_after_close: 0.0
                  total_affected_items: 0
                  failed_items: []
                  total_failed_items: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_stats_node_200_response'
          description: Wazuh remoted stats
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get stats remoted
      tags:
      - Manager
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/manager:read'
  /manager/logs:
    get:
      description: Return the last 2000 wazuh log entries
      operationId: api.controllers.manager_controller.get_log
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Maximum number of lines to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: Wazuh component that logged the event
        explode: true
        in: query
        name: tag
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by log level
        explode: true
        in: query
        name: level
        required: false
        schema:
          enum:
          - critical
          - debug
          - debug2
          - error
          - info
          - warning
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - timestamp: 2020-04-15T14:47:54Z
                    tag: wazuh-modulesd:syscollector
                    level: info
                    description: Start syscheck scan
                  - timestamp: 2020-04-15T14:47:51Z
                    tag: wazuh-modulesd:syscollector
                    level: info
                    description: Starting evaluation
                  - timestamp: 2020-04-15T13:50:24Z
                    tag: wazuh-maild
                    level: error
                    description: " (1263): Error Sending email to 69.172.200.109 (smtp\
                      \ server)"
                  total_affected_items: 3
                  failed_items: []
                  total_failed_items: 0
                message: Logs read successfully in specified node
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_log_node_200_response'
          description: Wazuh logs
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get logs
      tags:
      - Manager
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/manager:read'
  /manager/logs/summary:
    get:
      description: Return a summary of the last 2000 wazuh log entries
      operationId: api.controllers.manager_controller.get_log_summary
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - indexer-connector:
                      all: 24
                      info: 0
                      error: 0
                      critical: 0
                      warning: 24
                      debug: 0
                  - wazuh-db:
                      info: 1
                      all: 4
                      critical: 0
                      debug: 0
                      error: 3
                      warning: 0
                  - wazuh-modulesd:content_manager:
                      info: 1
                      all: 1
                      critical: 0
                      debug: 0
                      error: 0
                      warning: 0
                  - wazuh-modulesd:router:
                      info: 1
                      all: 1
                      critical: 0
                      debug: 0
                      error: 0
                      warning: 0
                  - wazuh-remoted:
                      info: 744
                      all: 0
                      critical: 0
                      debug: 744
                      error: 0
                      warning: 0
                  total_affected_items: 5
                  failed_items: []
                  total_failed_items: 0
                message: Log was successfully summarized in specified node
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_cluster_controller_get_log_summary_node_200_response'
          description: Wazuh logs summary
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get logs summary
      tags:
      - Manager
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/manager:read'
  /manager/api/config:
    get:
      description: Return the local API configuration in JSON format
      operationId: api.controllers.manager_controller.get_api_config
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - node_name: manager
                    node_api_config:
                      host: 0.0.0.0
                      port: 55000
                      drop_privileges: true
                      experimental_features: false
                      max_upload_size: 10485760
                      authentication_pool_size: 2
                      intervals:
                        request_timeout: 10
                      https:
                        enabled: true
                        key: /var/ossec/api/configuration/ssl/server.key
                        cert: /var/ossec/api/configuration/ssl/server.crt
                        use_ca: false
                        ca: /var/ossec/api/configuration/ssl/ca.crt
                        ssl_protocol: auto
                        ssl_ciphers: ""
                      logs:
                        level: info
                        format: plain
                        max_size:
                          enabled: false
                          size: 1M
                      cors:
                        enabled: false
                        source_route: '*'
                        expose_headers: '*'
                        allow_headers: '*'
                        allow_credentials: false
                      cache:
                        enabled: true
                        time: 0.75
                      access:
                        max_login_attempts: 50
                        block_time: 300
                        max_request_per_minute: 300
                      upload_configuration:
                        remote_commands:
                          localfile:
                            enabled: true
                            exceptions: []
                          wodle_commands:
                            enabled: true
                            exceptions: []
                        limits:
                          eps:
                            allow: true
                        agents:
                          allow_higher_versions: true
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: API configuration was successfully read
                error: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Current API configuration
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get API config
      tags:
      - Manager
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/manager:read_api_config'
  /manager/restart:
    put:
      description: Restart the wazuh manager
      operationId: api.controllers.manager_controller.put_restart
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - master-node
                  total_affected_items: 1
                  failed_items: []
                  total_failed_items: 0
                message: Restart request sent to all specified nodes
                error: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Confirmation message
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Restart manager
      tags:
      - Manager
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/manager:read'
      - $ref: '#/x-rbac-catalog/actions/manager:restart'
  /manager/configuration/validation:
    get:
      description: Return whether the Wazuh configuration is correct
      operationId: api.controllers.manager_controller.get_conf_validation
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - name: master-node
                    status: OK
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Validation was successfully checked in all nodes
                error: 0
              schema:
                $ref: '#/components/schemas/ConfigurationValidation'
          description: OK message if configuration is right
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Check config
      tags:
      - Manager
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/manager:read'
  /manager/configuration/{component}/{configuration}:
    get:
      description: Return the requested active configuration in JSON format
      operationId: api.controllers.manager_controller.get_manager_config_ondemand
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Selected agent's component
        explode: false
        in: path
        name: component
        required: true
        schema:
          enum:
          - agent
          - agentless
          - analysis
          - auth
          - com
          - csyslog
          - integrator
          - logcollector
          - mail
          - monitor
          - request
          - syscheck
          - wazuh-db
          - wmodules
          type: string
        style: simple
      - description: |
          <p>Selected agent's configuration to read. The configuration to read depends on the selected component.
          The following table shows all available combinations of component and configuration values:</p>
          <table class="table table-striped table-bordered">
          <thead>
          <tr>
          <th>Component</th>
          <th>Configuration</th>
          <th>Tag</th>
          </tr>
          </thead>
          <tbody>
          <tr>
          <td>agent</td>
          <td>client</td>
          <td><code>&lt;client&gt;</code></td>
          </tr>
          <tr>
          <td>agent</td>
          <td>buffer</td>
          <td><code>&lt;client_buffer&gt;</code></td>
          </tr>
          <tr>
          <td>agent</td>
          <td>labels</td>
          <td><code>&lt;labels&gt;</code></td>
          </tr>
          <tr>
          <td>agent</td>
          <td>internal</td>
          <td><code>&lt;agent&gt;</code>, <code>&lt;monitord&gt;</code>, <code>&lt;remoted&gt;</code></td>
          </tr>
          <tr>
          <td>agent</td>
          <td>anti_tampering</td>
          <td><code>&lt;anti_tampering&gt;</code></td>
          </tr>
          <tr>
          <td>agentless</td>
          <td>agentless</td>
          <td><code>&lt;agentless&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>global</td>
          <td><code>&lt;global&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>active_response</td>
          <td><code>&lt;active-response&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>alerts</td>
          <td><code>&lt;alerts&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>command</td>
          <td><code>&lt;command&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>rules</td>
          <td><code>&lt;rule&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>decoders</td>
          <td><code>&lt;decoder&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>internal</td>
          <td><code>&lt;analysisd&gt;</code></td>
          </tr>
          <tr>
          <td>analysis</td>
          <td>rule_test</td>
          <td><code>&lt;rule_test&gt;</code></td>
          </tr>
          <tr>
          <td>auth</td>
          <td>auth</td>
          <td><code>&lt;auth&gt;</code></td>
          </tr>
          <tr>
          <td>com</td>
          <td>active-response</td>
          <td><code>&lt;active-response&gt;</code></td>
          </tr>
          <tr>
          <td>com</td>
          <td>logging</td>
          <td><code>&lt;logging&gt;</code></td>
          </tr>
          <tr>
          <td>com</td>
          <td>internal</td>
          <td><code>&lt;execd&gt;</code></td>
          </tr>
          <tr>
          <td>com</td>
          <td>cluster</td>
          <td><code>&lt;cluster&gt;</code></td>
          </tr>
          <tr>
          <td>csyslog</td>
          <td>csyslog</td>
          <td><code>&lt;csyslog_output&gt;</code></td>
          </tr>
          <tr>
          <td>integrator</td>
          <td>integration</td>
          <td><code>&lt;integration&gt;</code></td>
          </tr>
          <tr>
          <td>logcollector</td>
          <td>localfile</td>
          <td><code>&lt;localfile&gt;</code></td>
          </tr>
          <tr>
          <td>logcollector</td>
          <td>socket</td>
          <td><code>&lt;socket&gt;</code></td>
          </tr>
          <tr>
          <td>logcollector</td>
          <td>internal</td>
          <td><code>&lt;logcollector&gt;</code></td>
          </tr>
          <tr>
          <td>mail</td>
          <td>global</td>
          <td><code>&lt;global&gt;&lt;email...&gt;</code></td>
          </tr>
          <tr>
          <td>mail</td>
          <td>alerts</td>
          <td><code>&lt;email_alerts&gt;</code></td>
          </tr>
          <tr>
          <td>mail</td>
          <td>internal</td>
          <td><code>&lt;maild&gt;</code></td>
          </tr>
          <tr>
          <td>monitor</td>
          <td>global</td>
          <td><code>&lt;global&gt;</code></td>
          </tr>
          <tr>
          <td>monitor</td>
          <td>internal</td>
          <td><code>&lt;monitord&gt;</code></td>
          </tr>
          <tr>
          <td>monitor</td>
          <td>reports</td>
          <td><code>&lt;reports&gt;</code></td>
          </tr>
          <tr>
          <td>request</td>
          <td>global</td>
          <td><code>&lt;global&gt;</code></td>
          </tr>
          <tr>
          <td>request</td>
          <td>remote</td>
          <td><code>&lt;remote&gt;</code></td>
          </tr>
          <tr>
          <td>request</td>
          <td>internal</td>
          <td><code>&lt;remoted&gt;</code></td>
          </tr>
          <tr>
          <td>syscheck</td>
          <td>syscheck</td>
          <td><code>&lt;syscheck&gt;</code></td>
          </tr>
          <tr>
          <td>syscheck</td>
          <td>rootcheck</td>
          <td><code>&lt;rootcheck&gt;</code></td>
          </tr>
          <tr>
          <td>syscheck</td>
          <td>internal</td>
          <td><code>&lt;syscheck&gt;</code>, <code>&lt;rootcheck&gt;</code></td>
          </tr>
          <tr>
          <td>wazuh-db</td>
          <td>internal</td>
          <td><code>&lt;wazuh_db&gt;</code></td>
          </tr>
          <tr>
          <td>wazuh-db</td>
          <td>wdb</td>
          <td><code>&lt;wdb&gt;</code></td>
          </tr>
          <tr>
          <td>wmodules</td>
          <td>wmodules</td>
          <td><code>&lt;wodle&gt;</code></td>
          </tr>
          </tbody>
          </table>
        explode: false
        in: path
        name: configuration
        required: true
        schema:
          enum:
          - client
          - buffer
          - labels
          - internal
          - anti_tampering
          - agentless
          - global
          - active_response
          - alerts
          - command
          - rules
          - decoders
          - auth
          - logging
          - reports
          - active-response
          - cluster
          - csyslog
          - integration
          - localfile
          - socket
          - remote
          - syscheck
          - rootcheck
          - wdb
          - wmodules
          - rule_test
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - name: wazuh
                    node_name: master-node
                    node_type: master
                    key: 9d273b53510fef702b54a92e9cffc82e
                    port: 1516
                    bind_addr: 0.0.0.0
                    nodes:
                    - wazuh-master
                    hidden: false
                    disabled: false
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Active configuration was successfully read in specified node
                error: 0
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
          description: Manager configuration on-demand
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get active configuration
      tags:
      - Manager
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/manager:read'
  /manager/version/check:
    get:
      description: Return if there is any available update
      operationId: api.controllers.manager_controller.check_available_version
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Force query to CTI service
        explode: true
        in: query
        name: force_query
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  last_check_date: 2023-10-09T15:39:57.616301+00:00
                  current_version: v4.8.0
                  update_check: true
                  last_available_major:
                    tag: v5.0.0
                    description: ""
                    title: Wazuh 5.0.0
                    published_date: 2023-10-05T12:48:00Z
                    semver:
                      major: 5
                      minor: 0
                      patch: 0
                  last_available_minor:
                    tag: v4.9.1
                    description: ""
                    title: Wazuh 4.9.1
                    published_date: 2023-10-05T12:47:00Z
                    semver:
                      major: 4
                      minor: 9
                      patch: 1
                  last_available_patch:
                    tag: v4.8.2
                    description: ""
                    title: Wazuh 4.8.2
                    published_date: 2023-10-05T12:46:00Z
                    semver:
                      major: 4
                      minor: 8
                      patch: 2
                  uuid": edc90f7f-fca4-446c-8985-e69520948e42
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_manager_controller_check_available_version_200_response'
          description: Information about available new versions
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "404":
          content:
            application/json:
              example:
                title: Resource Not Found
                detail: The group does not exist
                remediation: "Please, use `GET /groups` to find all available groups:\
                  \ https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                code: 1710
                dapi_errors:
                  unknown-node:
                    error: The group does not exist
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Resource not found
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Check available updates
      tags:
      - Manager
  /mitre/groups:
    get:
      description: Return the groups from MITRE database
      operationId: api.controllers.mitre_controller.get_groups
      parameters:
      - description: List of MITRE's group IDs (separated by comma)
        explode: true
        in: query
        name: group_ids
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Mitre_group_id'
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - mitre_version: "1.2"
                    deprecated: 0
                    description: |-
                      [APT38](https://attack.mitre.org/groups/G0082) is a financially-motivated threat group that is backed by the North Korean regime. The group mainly targets banks and financial institutions and has targeted more than 16 organizations in at least 13 countries since at least 2014.(Citation: FireEye APT38 Oct 2018)

                      North Korean group definitions are known to have significant overlap, and the name [Lazarus Group](https://attack.mitre.org/groups/G0032) is known to encompass a broad range of activity. Some organizations use the name Lazarus Group to refer to any activity attributed to North Korea.(Citation: US-CERT HIDDEN COBRA June 2017) Some organizations track North Korean clusters or groups such as Bluenoroff,(Citation: Kaspersky Lazarus Under The Hood Blog 2017) [APT37](https://attack.mitre.org/groups/G0067), and [APT38](https://attack.mitre.org/groups/G0082) separately, while other organizations may track some activity associated with those group names by the name Lazarus Group
                    name: APT38
                    id: intrusion-set--00f67a77-86a4-4adf-be26-1a54fc713340
                    modified_time: 2020-03-30T18:50:43.737000Z
                    created_time: 2019-01-29T21:27:24.793000Z
                    software:
                    - tool--03342581-f790-4f03-ba41-e82e67392e23
                    - tool--afc079f3-c0ea-4096-b75d-3f05338b7f60
                    - malware--53ab35c2-d00e-491a-8753-41d35ae7e547
                    techniques:
                    - attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161
                    - attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4
                    - attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580
                    - attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4
                    - attack-pattern--d742a578-d70e-4d0e-96a6-02a9c30204e6
                    - attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f
                    - attack-pattern--deb98323-e13f-4b0c-8d94-175379069062
                    - attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62
                    - attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add
                    - attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c
                    - attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2
                    - attack-pattern--32ad5c86-2bcf-47d8-8fdc-d7f3d79a7490
                    - attack-pattern--d0613359-5781-4fd2-b5be-c269270be1f6
                    - attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292
                    - attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9
                    - attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0
                    - attack-pattern--d45a3d09-b3cf-48f4-9f0f-f521ee5cb05c
                    - attack-pattern--7e150503-88e7-4861-866b-ff1ac82c4475
                    - attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc
                    references:
                    - url: https://content.fireeye.com/apt/rpt-apt38
                      description: "FireEye. (2018, October 03). APT38: Un-usual Suspects.\
                        \ Retrieved November 6, 2018."
                      source: FireEye APT38 Oct 2018
                    - url: https://securelist.com/lazarus-under-the-hood/77908/
                      description: "GReAT. (2017, April 3). Lazarus Under the Hood.\
                        \ Retrieved April 17, 2019."
                      source: Kaspersky Lazarus Under The Hood Blog 2017
                    - url: https://www.us-cert.gov/ncas/alerts/TA17-164A
                      description: "US-CERT. (2017, June 13). Alert (TA17-164A) HIDDEN\
                        \ COBRA â€“ North Koreaâ€™s DDoS Botnet Infrastructure. Retrieved\
                        \ July 13, 2017."
                      source: US-CERT HIDDEN COBRA June 2017
                    url: https://attack.mitre.org/groups/G0082
                    external_id: G0082
                    source: mitre-attack
                  total_affected_items: 111
                  total_failed_items: 0
                  failed_items: []
                message: MITRE groups information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Get MITRE groups information
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get MITRE groups
      tags:
      - MITRE
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/mitre:read'
  /mitre/metadata:
    get:
      description: Return the metadata from MITRE database
      operationId: api.controllers.mitre_controller.get_metadata
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - key: db_version
                    value: "1"
                  - key: mitre_version
                    value: "2.0"
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: MITRE metadata information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Get MITRE metadata information
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get MITRE metadata
      tags:
      - MITRE
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/mitre:read'
  /mitre/mitigations:
    get:
      description: Return the mitigations from MITRE database
      operationId: api.controllers.mitre_controller.get_mitigations
      parameters:
      - description: List of MITRE's mitigations IDs (separated by comma)
        explode: true
        in: query
        name: mitigation_ids
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Mitre_mitigation_id'
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - mitre_version: "1.0"
                    deprecated: 0
                    description: Use intrusion detection signatures to block traffic
                      at network boundaries.
                    name: Network Intrusion Prevention
                    id: course-of-action--12241367-a8b7-49b4-b86e-2236901ba50c
                    modified_time: 2019-06-10T20:46:02.263000Z
                    created_time: 2019-06-10T20:46:02.263000Z
                    techniques:
                    - attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada
                    references: []
                    url: https://attack.mitre.org/mitigations/M1031
                    source: mitre-attack
                    external_id: M1031
                  total_affected_items: 266
                  total_failed_items: 0
                  failed_items: []
                message: MITRE mitigations information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Get MITRE mitigations information
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get MITRE mitigations
      tags:
      - MITRE
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/mitre:read'
  /mitre/references:
    get:
      description: Return the references from MITRE database
      operationId: api.controllers.mitre_controller.get_references
      parameters:
      - description: List of MITRE's references IDs (separated by comma)
        explode: true
        in: query
        name: reference_ids
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Mitre_reference_id'
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - url: https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process
                    description: "Hosseini, A. (2017, July 18). Ten Process Injection\
                      \ Techniques: A Technical Survey Of Common And Trending Process\
                      \ Injection Techniques. Retrieved December 7, 2017."
                    source: Endgame Process Injection July 2017
                    id: attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298
                    type: technique
                  total_affected_items: 5212
                  total_failed_items: 0
                  failed_items: []
                message: MITRE references information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Get MITRE references
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get MITRE references
      tags:
      - MITRE
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/mitre:read'
  /mitre/software:
    get:
      description: Return the software from MITRE database
      operationId: api.controllers.mitre_controller.get_software
      parameters:
      - description: List of MITRE's software IDs (separated by comma)
        explode: true
        in: query
        name: software_ids
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Mitre_software_id'
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - mitre_version: "1.0"
                    deprecated: 0
                    description: "[HDoor](https://attack.mitre.org/software/S0061)\
                      \ is malware that has been customized and used by the [Naikon](https://attack.mitre.org/groups/G0019)\
                      \ group. (Citation: Baumgartner Naikon 2015)"
                    name: HDoor
                    id: malware--007b44b6-e4c5-480b-b5b9-56f2081b1b7b
                    modified_time: 2019-04-25T02:33:53.419000Z
                    created_time: 2017-05-31T21:32:40.801000Z
                    groups:
                    - intrusion-set--2a158b0a-7ef8-43cb-9985-bf34d1e12050
                    techniques:
                    - attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579
                    - attack-pattern--e3a12395-188d-4051-9a16-ea8e14d07b88
                    references:
                    - url: https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07205555/TheNaikonAPT-MsnMM1.pdf
                      description: "Baumgartner, K., Golovkin, M.. (2015, May). The\
                        \ MsnMM Campaigns: The Earliest Naikon APT Campaigns. Retrieved\
                        \ April 10, 2019."
                      source: Baumgartner Naikon 2015
                    url: https://attack.mitre.org/software/S0061
                    source: mitre-attack
                    external_id: S0061
                  total_affected_items: 444
                  total_failed_items: 0
                  failed_items: []
                message: MITRE software information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Get MITRE software information
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get MITRE software
      tags:
      - MITRE
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/mitre:read'
  /mitre/tactics:
    get:
      description: Return the tactics from MITRE database
      operationId: api.controllers.mitre_controller.get_tactics
      parameters:
      - description: List of MITRE's tactics IDs (separated by comma)
        explode: true
        in: query
        name: tactic_ids
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Mitre_tactic_id'
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - description: "The adversary is trying to move through your environment.\n\
                      \nLateral Movement consists of techniques that adversaries use\
                      \ to enter and control remote systems on a network. Following\
                      \ through on their primary objective often requires exploring\
                      \ the network to find their target and subsequently gaining\
                      \ access to it. Reaching their objective often involves pivoting\
                      \ through multiple systems and accounts to gain. Adversaries\
                      \ might install their own remote access tools to accomplish\
                      \ Lateral Movement or use legitimate credentials with native\
                      \ network and operating system tools, which may be stealthier. "
                    name: Lateral Movement
                    id: x-mitre-tactic--7141578b-e50b-4dcc-bfa4-08a8dd689e9e
                    modified_time: 2019-07-19T17:44:36.953000Z
                    created_time: 2018-10-17T00:14:20.652000Z
                    short_name: lateral-movement
                    techniques:
                    - attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b
                    - attack-pattern--246fd3c7-f5e3-466d-8787-4c13d9e3b61c
                    - attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6
                    - attack-pattern--3b744087-9945-4a6f-91e8-9dbceda417a4
                    - attack-pattern--4d2a5b3e-340d-4600-9123-309dd63c9bf8
                    - attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541
                    - attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814
                    - attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba
                    - attack-pattern--5b0ad6f8-6a16-4966-a4ef-d09ea6e2a9f5
                    - attack-pattern--60d0c01d-e2bf-49dd-a453-f8a9c9fa6f65
                    - attack-pattern--68a0c5ed-bee2-4513-830d-5b0d650139bd
                    - attack-pattern--772bc7a8-a157-42cc-8728-d648e25c7fe7
                    - attack-pattern--7b211ac6-c815-4189-93a9-ab415deca926
                    - attack-pattern--804c042c-cfe6-449e-bc1a-ba0a998a70db
                    - attack-pattern--92a78814-b191-47ca-909c-1ccfe3777414
                    - attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82
                    - attack-pattern--9e7452df-5144-4b6e-b04a-b66dd4016747
                    - attack-pattern--bf90d72c-c00b-45e3-b3aa-68560560d4c5
                    - attack-pattern--c3c8c916-2f3c-4e71-94b2-240bdfc996f0
                    - attack-pattern--e0033c16-a07e-48aa-8204-7c3ca669998c
                    - attack-pattern--e624264c-033a-424d-9fd7-fc9c3bbdb03e
                    - attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf
                    - attack-pattern--f005e783-57d4-4837-88ad-dbe7faee1c51
                    references: []
                    url: https://attack.mitre.org/tactics/TA0008
                    source: mitre-attack
                    external_id: TA0008
                  total_affected_items: 14
                  total_failed_items: 0
                  failed_items: []
                message: All tactics information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Get MITRE tactics information
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get MITRE tactics
      tags:
      - MITRE
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/mitre:read'
  /mitre/techniques:
    get:
      description: Return the techniques from MITRE database
      operationId: api.controllers.mitre_controller.get_techniques
      parameters:
      - description: List of MITRE's techniques IDs (separated by comma)
        explode: true
        in: query
        name: technique_ids
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Mitre_technique_id'
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - mitre_version: "1.0"
                    network_requirements: 0
                    remote_support: 0
                    mitre_detection: |-
                      Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

                      Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.
                    id: attack-pattern--9d48cab2-7929-4812-ad22-f536665f0109
                    modified_time: 2020-10-25T22:58:23.086000Z
                    deprecated: 0
                    created_time: 2020-10-02T15:45:17.628000Z
                    name: Gather Victim Network Information
                    description: |-
                      Before compromising a victim, adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.

                      Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).
                    tactics:
                    - x-mitre-tactic--daa4cbb1-b4f4-4723-a824-7f1efd6e0592
                    mitigations:
                    - course-of-action--78bb71be-92b4-46de-acd6-5f998fedf1cc
                    software: []
                    groups: []
                    references:
                    - source: Circl Passive DNS
                      description: "CIRCL Computer Incident Response Center. (n.d.).\
                        \ Passive DNS. Retrieved October 20, 2020."
                      url: https://www.circl.lu/services/passive-dns/
                    - source: DNS Dumpster
                      description: "Hacker Target. (n.d.). DNS Dumpster. Retrieved\
                        \ October 20, 2020."
                      url: https://dnsdumpster.com/
                    - source: WHOIS
                      description: "NTT America. (n.d.). Whois Lookup. Retrieved October\
                        \ 20, 2020."
                      url: https://www.whois.net/
                    source: mitre-attack
                    external_id: T1590
                    url: https://attack.mitre.org/techniques/T1590
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: MITRE techniques information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Get MITRE techniques information
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get MITRE techniques
      tags:
      - MITRE
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/mitre:read'
  /rootcheck:
    put:
      description: Run rootcheck scan in all agents or a list of them
      operationId: api.controllers.rootcheck_controller.put_rootcheck
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - "000"
                  - "001"
                  - "002"
                  - "003"
                  total_affected_items: 4
                  total_failed_items: 0
                  failed_items: []
                message: Rootcheck scan was restarted on returned agents
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Run rootcheck scan in all agents or a list of them
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Run scan
      tags:
      - Rootcheck
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/rootcheck:run'
  /rootcheck/{agent_id}:
    delete:
      description: Clear an agent's rootcheck database
      operationId: api.controllers.rootcheck_controller.delete_rootcheck
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - "001"
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Rootcheck database was cleared on returned agents
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Clear an agent's rootcheck database
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Clear results
      tags:
      - Rootcheck
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/rootcheck:clear'
    get:
      description: Return the rootcheck database of an agent
      operationId: api.controllers.rootcheck_controller.get_rootcheck_agent
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filter by status
        explode: true
        in: query
        name: status
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by PCI_DSS requirement name
        explode: true
        in: query
        name: pci_dss
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by CIS requirement
        explode: true
        in: query
        name: cis
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - date_first: 2020-10-23T10:34:09Z
                    log: "Ending CIS-CAT scan. File: /var/ossec/wodles/ciscat/benchmarks/CIS_Ubuntu_Linux_16.04_LTS_Benchmark_v1.0.0-xccdf.xml."
                    date_last: 2020-10-23T10:34:09Z
                    status: outstanding
                  - date_first: 2020-10-23T10:33:43Z
                    log: "Starting CIS-CAT scan. File: /var/ossec/wodles/ciscat/benchmarks/CIS_Ubuntu_Linux_16.04_LTS_Benchmark_v1.0.0-xccdf.xml."
                    date_last: 2020-10-23T10:33:49Z
                    status: outstanding
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: All selected rootcheck information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Return the rootcheck database of an agent
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get results
      tags:
      - Rootcheck
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/rootcheck:read'
  /rootcheck/{agent_id}/last_scan:
    get:
      description: Return the timestamp of the last rootcheck scan of an agent
      operationId: api.controllers.rootcheck_controller.get_last_scan_agent
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - start: 2021-05-28T11:49:50Z
                    end: 2021-05-28T11:49:59Z
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Last rootcheck scan of the agent was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Return the timestamp of the last rootcheck scan of an agent
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get last scan datetime
      tags:
      - Rootcheck
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/rootcheck:read'
  /rules:
    get:
      description: "Return a list containing information about each rule such as file\
        \ where it's defined, description, rule group, status, etc"
      operationId: api.controllers.rule_controller.get_rules
      parameters:
      - description: List of rule IDs
        explode: true
        in: query
        name: rule_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 1
            type: integer
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Filter by list status. Use commas to enter multiple statuses
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - enabled
          - disabled
          - all
          minItems: 1
          type: string
        style: form
      - description: Filter by rule group
        explode: true
        in: query
        name: group
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by rule level. Can be a single level (4) or an interval
          (2-4)
        explode: true
        in: query
        name: level
        required: false
        schema:
          format: range
          type: string
        style: form
      - description: Filter by filename
        explode: true
        in: query
        name: filename
        required: false
        schema:
          items:
            format: alphanumeric
            type: string
          type: array
        style: form
      - description: Filter by relative directory name
        explode: true
        in: query
        name: relative_dirname
        required: false
        schema:
          format: get_dirnames_path
          type: string
        style: form
      - description: Filter by PCI_DSS requirement name
        explode: true
        in: query
        name: pci_dss
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by GDPR requirement
        explode: true
        in: query
        name: gdpr
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by GPG13 requirement
        explode: true
        in: query
        name: gpg13
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by HIPAA requirement
        explode: true
        in: query
        name: hipaa
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by NIST-800-53 requirement
        explode: true
        in: query
        name: nist-800-53
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filters by TSC requirement
        explode: true
        in: query
        name: tsc
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filters by MITRE technique ID
        explode: true
        in: query
        name: mitre
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - filename: 0020-syslog_rules.xml
                    relative_dirname: ruleset/rules
                    id: 1001
                    level: 2
                    status: enabled
                    details:
                      match:
                        pattern: ^Couldn't open /etc/securetty
                    pci_dss:
                    - 0.2.4
                    gpg13:
                    - "4.1"
                    gdpr:
                    - IV_35.7.d
                    hipaa:
                    - 164.312.b
                    nist_800_53:
                    - AU.14
                    - AC.7
                    tsc:
                    - CC6.1
                    - CC6.8
                    - CC7.2
                    - CC7.3
                    mitre: []
                    groups:
                    - syslog
                    - errors
                    description: File missing. Root access unrestricted.
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All selected rules were returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_rule_controller_get_rules_200_response'
          description: Rule
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: List rules
      tags:
      - Rules
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/rules:read'
  /rules/groups:
    get:
      description: Return a list containing all rule groups names
      operationId: api.controllers.rule_controller.get_rules_groups
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - active_response
                  - agentless
                  - attacks
                  - firewall
                  - gdpr_II_5.1.f
                  - gdpr_IV_30.1.g
                  total_affected_items: 6
                  total_failed_items: 0
                  failed_items: []
                message: All groups in rules were returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Rule groups names
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get groups
      tags:
      - Rules
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/rules:read'
  /rules/requirement/{requirement}:
    get:
      description: Return all specified requirement names defined in the Wazuh ruleset
      operationId: api.controllers.rule_controller.get_rules_requirement
      parameters:
      - explode: false
        in: path
        name: requirement
        required: true
        schema:
          enum:
          - pci_dss
          - gdpr
          - hipaa
          - nist-800-53
          - gpg13
          - tsc
          - mitre
          type: string
        style: simple
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - A1.2
                  - CC6.1
                  - CC6.2
                  - CC6.3
                  total_affected_items: 4
                  total_failed_items: 0
                  failed_items: []
                message: All selected rules were returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Requirements names
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get requirements
      tags:
      - Rules
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/rules:read'
  /rules/files:
    get:
      description: Return a list containing all files used to define rules and their
        status
      operationId: api.controllers.rule_controller.get_rules_files
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: Filter by relative directory name
        explode: true
        in: query
        name: relative_dirname
        required: false
        schema:
          format: get_dirnames_path
          type: string
        style: form
      - description: Filter by filename of one or more rule or decoder files.
        explode: true
        in: query
        name: filename
        required: false
        schema:
          items:
            format: xml_filename
            type: string
          type: array
        style: form
      - description: Filter by list status. Use commas to enter multiple statuses
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - enabled
          - disabled
          - all
          minItems: 1
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - file: 0010-rules_config.xml
                    relative_dirname: ruleset/rules
                    status: enabled
                  - file: 0015-ossec_rules.xml
                    relative_dirname: ruleset/rules
                    status: enabled
                  - file: 0016-wazuh_rules.xml
                    relative_dirname: ruleset/rules
                    status: enabled
                  - file: 0020-syslog_rules.xml
                    relative_dirname: ruleset/rules
                    status: enabled
                  total_affected_items: 4
                  total_failed_items: 0
                  failed_items: []
                message: All rules files were returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_rule_controller_get_rules_files_200_response'
          description: Rule
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get files
      tags:
      - Rules
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/rules:read'
  /rules/files/{filename}:
    delete:
      description: Delete a specified rule file
      operationId: api.controllers.rule_controller.delete_file
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filename (rule or decoder) to download/upload/edit file.
        explode: false
        in: path
        name: filename
        required: true
        schema:
          format: xml_filename_path
          type: string
        style: simple
      - description: Filter by relative directory name
        explode: true
        in: query
        name: relative_dirname
        required: false
        schema:
          format: get_dirnames_path
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - etc/rules/new_rule.xml
                  failed_items: []
                  total_affected_items: 1
                  total_failed_items: 0
                message: Rule was successfully deleted
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Confirmation message
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Delete rules file
      tags:
      - Rules
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/rules:delete'
    get:
      description: Get the content of a specified rule in the ruleset
      operationId: api.controllers.rule_controller.get_file
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filename (rule or decoder) to download/upload/edit file.
        explode: false
        in: path
        name: filename
        required: true
        schema:
          format: xml_filename_path
          type: string
        style: simple
      - description: Format response in plain text
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter by relative directory name
        explode: true
        in: query
        name: relative_dirname
        required: false
        schema:
          format: get_dirnames_path
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - group:
                    - '@name': "syslog,"
                      rule:
                        '@id': "1"
                        '@level': "0"
                        '@noalert': "1"
                        category: syslog
                        description: Generic template for all syslog rules.
                    - '@name': "firewall,"
                      rule:
                        '@id': "2"
                        '@level': "0"
                        '@noalert': "1"
                        category: firewall
                        description: Generic template for all firewall rules.
                    - '@name': "ids,"
                      rule:
                        '@id': "3"
                        '@level': "0"
                        '@noalert': "1"
                        category: ids
                        description: Generic template for all ids rules.
                    - '@name': "web-log,"
                      rule:
                        '@id': "4"
                        '@level': "0"
                        '@noalert': "1"
                        category: web-log
                        description: Generic template for all web rules.
                    - '@name': "squid,"
                      rule:
                        '@id': "5"
                        '@level': "0"
                        '@noalert': "1"
                        category: squid
                        description: Generic template for all web proxy rules.
                    - '@name': "windows,"
                      rule:
                        '@id': "6"
                        '@level': "0"
                        '@noalert': "1"
                        category: windows
                        description: Generic template for all windows rules.
                    - '@name': "ossec,"
                      rule:
                        '@id': "7"
                        '@level': "0"
                        '@noalert': "1"
                        category: ossec
                        description: Generic template for all wazuh rules.
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Selected rule was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
            application/xml:
              example: |
                <!--
                  -  Rules config
                  -  Author: Daniel Cid.
                  -  Updated by Wazuh, Inc.
                  -  Copyright (C) 2015, Wazuh Inc.
                  -  Copyright (C) 2009 Trend Micro Inc.
                  -  This program is a free software; you can redistribute it and/or modify it under the terms of GPLv2.
                -->
                <group name="syslog,">
                  <rule id="1" level="0" noalert="1">
                    <category>syslog</category>
                    <description>Generic template for all syslog rules.</description>
                  </rule>
                </group>
                <group name="firewall,">
                  <rule id="2" level="0" noalert="1">
                    <category>firewall</category>
                    <description>Generic template for all firewall rules.</description>
                  </rule>
                </group>
                <group name="ids,">
                  <rule id="3" level="0" noalert="1">
                    <category>ids</category>
                    <description>Generic template for all ids rules.</description>
                  </rule>
                </group>
                <group name="web-log,">
                  <rule id="4" level="0" noalert="1">
                    <category>web-log</category>
                    <description>Generic template for all web rules.</description>
                  </rule>
                </group>
                <group name="squid,">
                  <rule id="5" level="0" noalert="1">
                    <category>squid</category>
                    <description>Generic template for all web proxy rules.</description>
                  </rule>
                </group>
                <group name="windows,">
                  <rule id="6" level="0" noalert="1">
                    <category>windows</category>
                    <description>Generic template for all windows rules.</description>
                  </rule>
                </group>
                <group name="ossec,">
                  <rule id="7" level="0" noalert="1">
                    <category>ossec</category>
                    <description>Generic template for all ossec rules.</description>
                  </rule>
                </group>
              schema:
                type: string
          description: Rule content
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get rules file content
      tags:
      - Rules
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/rules:read'
    put:
      description: Upload or replace a user ruleset file content
      operationId: api.controllers.rule_controller.put_file
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filename (rule or decoder) to download/upload/edit file.
        explode: false
        in: path
        name: filename
        required: true
        schema:
          format: xml_filename_path
          type: string
        style: simple
      - description: "If set to false, an exception will be raised when updating contents\
          \ of an already existing filename"
        explode: true
        in: query
        name: overwrite
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filter by relative directory name
        explode: true
        in: query
        name: relative_dirname
        required: false
        schema:
          format: get_dirnames_path
          type: string
        style: form
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        description: Content of the rule to be uploaded
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - etc/rules/new_rule.xml
                  failed_items: []
                  total_affected_items: 1
                  total_failed_items: 0
                message: Rule was successfully uploaded
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Confirmation message
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Update rules file
      tags:
      - Rules
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/rules:update'
      - $ref: '#/x-rbac-catalog/actions/rules:delete'
  /sca/{agent_id}:
    get:
      description: Return the security SCA database of an agent
      operationId: api.controllers.sca_controller.get_sca_agent
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: Filter by policy name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by policy description
        explode: true
        in: query
        name: description
        required: false
        schema:
          format: alphanumeric_symbols
          type: string
        style: form
      - description: Filter by references
        explode: true
        in: query
        name: references
        required: false
        schema:
          type: string
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - description: This document provides prescriptive guidance for
                      establishing a secure configuration posture for Ubuntu Linux
                      20.04 LTS.
                    fail: 87
                    start_scan: 2022-09-27T08:07:02+00:00
                    references: https://www.cisecurity.org/cis-benchmarks/
                    name: CIS benchmark for Ubuntu Linux 20.04 LTS
                    pass: 56
                    score: 39
                    end_scan: 2022-09-27T08:07:02+00:00
                    policy_id: cis_ubuntu20-04
                    total_checks: 191
                    hash_file: fb41fe9660f4320aaed0c3c292c8602953df7f8c42b37b724855f9005c43fafc
                    invalid: 48
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All selected SCA information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_sca_controller_get_sca_agent_200_response'
          description: SCA database elements
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get results
      tags:
      - SCA
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/sca:read'
  /sca/{agent_id}/checks/{policy_id}:
    get:
      description: Return the policy monitoring alerts for a given policy
      operationId: api.controllers.sca_controller.get_sca_checks
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: Filter by policy id
        explode: false
        in: path
        name: policy_id
        required: true
        schema:
          format: alphanumeric
          type: string
        style: simple
      - description: Filter by title
        explode: true
        in: query
        name: title
        required: false
        schema:
          format: alphanumeric_symbols
          type: string
        style: form
      - description: Filter by policy description
        explode: true
        in: query
        name: description
        required: false
        schema:
          format: alphanumeric_symbols
          type: string
        style: form
      - description: Filter by rationale
        explode: true
        in: query
        name: rationale
        required: false
        schema:
          format: alphanumeric_symbols
          type: string
        style: form
      - description: Filter by remediation
        explode: true
        in: query
        name: remediation
        required: false
        schema:
          format: alphanumeric_symbols
          type: string
        style: form
      - description: Filter by command
        explode: true
        in: query
        name: command
        required: false
        schema:
          format: symbols_alphanumeric_param
          type: string
        style: form
      - description: Filter by reason
        explode: true
        in: query
        name: reason
        required: false
        schema:
          format: alphanumeric_symbols
          type: string
        style: form
      - description: Filter by full path
        explode: true
        in: query
        name: file
        required: false
        schema:
          format: paths
          type: string
        style: form
      - description: Filter by process name
        explode: true
        in: query
        name: process
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by directory
        explode: true
        in: query
        name: directory
        required: false
        schema:
          type: string
        style: form
      - description: Filter by registry
        explode: true
        in: query
        name: registry
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by references
        explode: true
        in: query
        name: references
        required: false
        schema:
          type: string
        style: form
      - description: Filter by result
        explode: true
        in: query
        name: result
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by condition
        explode: true
        in: query
        name: condition
        required: false
        schema:
          type: string
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - description: The cramfs filesystem type is a compressed read-only
                      Linux filesystem embedded in small footprint systems. A cramfs
                      image can be used without having to first decompress the image.
                    id: 19000
                    reason: Invalid path or wrong permissions to run command 'modprobe
                      -n -v cramfs'
                    command: "modprobe -n -v cramfs,lsmod"
                    rationale: "Removing support for unneeded filesystem types reduces\
                      \ the local attack surface of the server. If this filesystem\
                      \ type is not needed, disable it."
                    condition: all
                    title: Ensure mounting of cramfs filesystems is disabled.
                    result: not applicable
                    policy_id: cis_ubuntu20-04
                    remediation: "1) Edit or create a file in the /etc/modprobe.d/\
                      \ directory ending in .conf and add the following line: install\
                      \ cramfs /bin/true. 2) Run the following command to unload the\
                      \ cramfs module: # rmmod cramfs"
                    compliance:
                    - value: 1.1.1.1
                      key: cis
                    - value: "5.1"
                      key: cis_csc
                    - value: 2.2.5
                      key: pci_dss
                    - value: CC6.3
                      key: tsc
                    rules:
                    - type: command
                      rule: c:modprobe -n -v cramfs -> r:^install /bin/true
                    - type: numeric
                      rule: not c:lsmod -> r:cramfs
                  total_affected_items: 191
                  total_failed_items: 0
                  failed_items: []
                message: All selected SCA/policy information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_sca_controller_get_sca_checks_200_response'
          description: List of SCA Checks for a given policy ID
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get policy checks
      tags:
      - SCA
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/sca:read'
  /syscheck:
    put:
      description: Run FIM scan in all agents
      operationId: api.controllers.syscheck_controller.put_syscheck
      parameters:
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - "000"
                  - "001"
                  - "002"
                  - "003"
                  total_affected_items: 4
                  total_failed_items: 0
                  failed_items: []
                message: Syscheck scan was restarted on returned agents
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_restart_agents_by_node_200_response'
          description: Confirmation message
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Run scan
      tags:
      - Syscheck
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscheck:run'
  /syscheck/{agent_id}:
    delete:
      description: "Clear file integrity monitoring scan results for a specified agent.\
        \ Only available for agents < 3.12.0, it doesn't apply for more recent ones"
      operationId: api.controllers.syscheck_controller.delete_syscheck_agent
      parameters:
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - "000"
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Syscheck database was cleared on returned agents
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Confirmation message
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Clear results
      tags:
      - Syscheck
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscheck:clear'
    get:
      description: Return FIM findings in the specified agent
      operationId: api.controllers.syscheck_controller.get_syscheck_agent
      parameters:
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by full path
        explode: true
        in: query
        name: file
        required: false
        schema:
          format: paths
          type: string
        style: form
      - description: Filter by architecture
        explode: true
        in: query
        name: arch
        required: false
        schema:
          enum:
          - "[x32]"
          - "[x64]"
          type: string
        style: form
      - description: Filter by value name
        explode: true
        in: query
        name: value.name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by value type
        explode: true
        in: query
        name: value.type
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by file type. Registry_key and registry_value types are
          only available in Windows agents
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - file
          - registry_key
          - registry_value
          type: string
        style: form
      - description: Return a summary grouping by filename
        explode: true
        in: query
        name: summary
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filter files with the specified MD5 checksum
        explode: true
        in: query
        name: md5
        required: false
        schema:
          format: hash
          type: string
        style: form
      - description: Filter files with the specified SHA1 checksum
        explode: true
        in: query
        name: sha1
        required: false
        schema:
          format: hash
          type: string
        style: form
      - description: Filter files with the specified SHA256 checksum
        explode: true
        in: query
        name: sha256
        required: false
        schema:
          format: hash
          type: string
        style: form
      - description: "Filter files with the specified hash (md5, sha256 or sha1)"
        explode: true
        in: query
        name: hash
        required: false
        schema:
          format: hash
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - changes: 1
                    date: 2019-11-22T10:24:52Z
                    file: /etc/dpkg/origins/debian
                    gid: "0"
                    gname: root
                    inode: 1459742
                    md5: 731423fa8ba067262f8ef37882d1e742
                    mtime: 2009-02-02T23:06:58Z
                    perm: "100644"
                    sha1: b65f7f2af66c53b51765877bbe91a22bc6fca1e2
                    sha256: 50f35af8ac4a5df3690991a4b428fa49d56580b0020fcc6e38283b3b1b2e6c74
                    size: 82
                    type: file
                    uid: "0"
                    uname: root
                    attributes: ""
                  - changes: 1
                    date: 2019-11-22T10:24:56Z
                    file: /etc/sgml/xml-core.cat
                    gid: "0"
                    gname: root
                    inode: 2896763
                    md5: 055ba0bd3154c0a58b9bf8a0c9ecf2fa
                    mtime: 2012-11-07T21:44:21Z
                    perm: "100644"
                    sha1: 3dec5570307472381671ff18bbe4d4be09951690
                    sha256: 3c46704b553c4b55ce928ffe89badfcfd08a02f0e6558211dfd57d9ae1e72aa4
                    size: 45
                    type: file
                    uid: "0"
                    uname: root
                    attributes: ""
                  total_affected_items: 1433
                  total_failed_items: 0
                  failed_items: []
                message: FIM findings of the agent were returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_syscheck_controller_get_syscheck_agent_200_response'
          description: Latest syscheck scan result
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get results
      tags:
      - Syscheck
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscheck:read'
  /syscheck/{agent_id}/last_scan:
    get:
      description: Return when the last syscheck scan started and ended. If the scan
        is still in progress the end date will be unknown
      operationId: api.controllers.syscheck_controller.get_last_scan_agent
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - start: 2021-05-28T12:11:33Z
                    end: 2021-05-28T12:11:33Z
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Last syscheck scan of the agent was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_syscheck_controller_get_last_scan_agent_200_response'
          description: Scan dates
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get last scan datetime
      tags:
      - Syscheck
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscheck:read'
  /decoders:
    get:
      description: "Return information about all decoders included in ossec.conf.\
        \ This information include decoder's route, decoder's name, decoder's file\
        \ among others"
      operationId: api.controllers.decoder_controller.get_decoders
      parameters:
      - description: Decoder name
        explode: true
        in: query
        name: decoder_names
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Filter by filename
        explode: true
        in: query
        name: filename
        required: false
        schema:
          items:
            format: alphanumeric
            type: string
          type: array
        style: form
      - description: Filter by relative directory name
        explode: true
        in: query
        name: relative_dirname
        required: false
        schema:
          format: get_dirnames_path
          type: string
        style: form
      - description: Filter by list status. Use commas to enter multiple statuses
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - enabled
          - disabled
          - all
          minItems: 1
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - filename: 0005-wazuh_decoders.xml
                    relative_dirname: ruleset/decoders
                    status: enabled
                    name: wazuh
                    position: 0
                    details:
                      prematch:
                        pattern: "^wazuh: "
                  - filename: 0005-wazuh_decoders.xml
                    relative_dirname: ruleset/decoders
                    status: enabled
                    name: agent-buffer
                    position: 1
                    details:
                      parent: wazuh
                      prematch:
                        pattern: "^wazuh: "
                        offset: after_parent
                      regex:
                        pattern: ^ '(\S+)'.
                        offset: after_prematch
                      order: level
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: All selected decoders were returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_decoder_controller_get_decoders_200_response'
          description: List of decoders included in ossec.conf
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: List decoders
      tags:
      - Decoders
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/decoders:read'
  /decoders/files:
    get:
      description: "Return information about all decoders files used in Wazuh. This\
        \ information include decoder's file, decoder's route and decoder's status\
        \ among others"
      operationId: api.controllers.decoder_controller.get_decoders_files
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: Filter by filename of one or more rule or decoder files.
        explode: true
        in: query
        name: filename
        required: false
        schema:
          items:
            format: xml_filename
            type: string
          type: array
        style: form
      - description: Filter by relative directory name
        explode: true
        in: query
        name: relative_dirname
        required: false
        schema:
          format: get_dirnames_path
          type: string
        style: form
      - description: Filter by list status. Use commas to enter multiple statuses
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - enabled
          - disabled
          - all
          minItems: 1
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - filename: 0005-wazuh_decoders.xml
                    relative_dirname: ruleset/decoders
                    status: enabled
                  - filename: 0006-json_decoders.xml
                    relative_dirname: ruleset/decoders
                    status: enabled
                  - filename: 0010-active-response_decoders.xml
                    relative_dirname: ruleset/decoders
                    status: enabled
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All decoder files were returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_decoder_controller_get_decoders_files_200_response'
          description: List of decoders files
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get files
      tags:
      - Decoders
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/decoders:read'
  /decoders/files/{filename}:
    delete:
      description: Delete a specified decoder file
      operationId: api.controllers.decoder_controller.delete_file
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filename (rule or decoder) to download/upload/edit file.
        explode: false
        in: path
        name: filename
        required: true
        schema:
          format: xml_filename_path
          type: string
        style: simple
      - description: Filter by relative directory name
        explode: true
        in: query
        name: relative_dirname
        required: false
        schema:
          format: get_dirnames_path
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - etc/decoders/new_decoder.xml
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Decoder file was successfully deleted
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Confirmation message
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Delete decoders file
      tags:
      - Decoders
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/decoders:delete'
    get:
      description: Get the content of a specified decoder file
      operationId: api.controllers.decoder_controller.get_file
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filename (rule or decoder) to download/upload/edit file.
        explode: false
        in: path
        name: filename
        required: true
        schema:
          format: xml_filename_path
          type: string
        style: simple
      - description: Format response in plain text
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter by relative directory name
        explode: true
        in: query
        name: relative_dirname
        required: false
        schema:
          format: get_dirnames_path
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - decoder:
                    - '@name': wazuh
                      prematch: '^wazuh:'
                    - '@name': agent-buffer
                      parent: wazuh
                      prematch:
                        '@offset': after_parent
                        '#text': '^Agent buffer:'
                      regex:
                        '@offset': after_prematch
                        '#text': ^ '(\S+)'.
                      order: level
                    - '@name': agent-upgrade
                      parent: wazuh
                      prematch:
                        '@offset': after_parent
                        '#text': ^Upgrade procedure |^Custom installation
                      regex:
                        '@offset': after_prematch
                        '#text': on agent (\d\d\d)\s\((\S+)\):\s(\w+)
                      order: "agent.id, agent.name, status"
                    - '@name': agent-upgrade
                      parent: wazuh
                      regex: aborted:\s(\.+)$|failed:\s(\.+)$|lost:\s(\.+)$
                      order: error
                    - '@name': agent-upgrade
                      parent: wazuh
                      regex: started.\sCurrent\sversion:\sWazuh\s(\.+)$
                      order: agent.cur_version
                    - '@name': agent-upgrade
                      parent: wazuh
                      regex: succeeded.\sNew\sversion:\sWazuh\s(\.+)$
                      order: agent.new_version
                    - '@name': agent-restart
                      parent: wazuh
                      prematch:
                        '@offset': after_parent
                        '#text': '^Invalid remote configuration:'
                      regex:
                        '@offset': after_prematch
                        '#text': ^ '(\S+)'.
                      order: module
                    - '@name': fim-state
                      parent: wazuh
                      prematch:
                        '@offset': after_parent
                        '#text': '^FIM DB:'
                      plugin_decoder:
                        '@offset': after_prematch
                        '#text': JSON_Decoder
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Selected decoder was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
            application/xml:
              example: |
                <!--
                  -  Wazuh decoders
                  -  Created by Wazuh, Inc.
                  -  Copyright (C) 2015, Wazuh Inc.
                  -  This program is a free software; you can redistribute it and/or modify it under the terms of GPLv2.
                -->
                <decoder name="wazuh">
                  <prematch>^wazuh: </prematch>
                </decoder>
                <decoder name="agent-buffer">
                  <parent>wazuh</parent>
                  <prematch offset="after_parent">^Agent buffer:</prematch>
                  <regex offset="after_prematch">^ '(\S+)'.</regex>
                  <order>level</order>
                </decoder>
                <decoder name="agent-upgrade">
                  <parent>wazuh</parent>
                  <prematch offset="after_parent">^Upgrade procedure |^Custom installation </prematch>
                  <regex offset="after_prematch">on agent (\d\d\d)\s\((\S+)\):\s(\w+)</regex>
                  <order>agent.id, agent.name, status</order>
                </decoder>
                <decoder name="agent-upgrade">
                  <parent>wazuh</parent>
                  <regex>aborted:\s(\.+)$|failed:\s(\.+)$|lost:\s(\.+)$</regex>
                  <order>error</order>
                </decoder>
                <decoder name="agent-upgrade">
                  <parent>wazuh</parent>
                  <regex>started.\sCurrent\sversion:\sWazuh\s(\.+)$</regex>
                  <order>agent.cur_version</order>
                </decoder>
                <decoder name="agent-upgrade">
                  <parent>wazuh</parent>
                  <regex>succeeded.\sNew\sversion:\sWazuh\s(\.+)$</regex>
                  <order>agent.new_version</order>
                </decoder>
                <decoder name="agent-restart">
                  <parent>wazuh</parent>
                  <prematch offset="after_parent">^Invalid remote configuration:</prematch>
                  <regex offset="after_prematch">^ '(\S+)'.</regex>
                  <order>module</order>
                </decoder>
                <decoder name="fim-state">
                  <parent>wazuh</parent>
                  <prematch offset="after_parent">^FIM DB: </prematch>
                  <plugin_decoder offset="after_prematch">JSON_Decoder</plugin_decoder>
                </decoder>
              schema:
                type: string
          description: Decoder content
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get decoders file content
      tags:
      - Decoders
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/decoders:read'
    put:
      description: Upload or replace a user decoder file content
      operationId: api.controllers.decoder_controller.put_file
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filename (rule or decoder) to download/upload/edit file.
        explode: false
        in: path
        name: filename
        required: true
        schema:
          format: xml_filename_path
          type: string
        style: simple
      - description: "If set to false, an exception will be raised when updating contents\
          \ of an already existing filename"
        explode: true
        in: query
        name: overwrite
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filter by relative directory name
        explode: true
        in: query
        name: relative_dirname
        required: false
        schema:
          format: get_dirnames_path
          type: string
        style: form
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        description: Content of the decoder to be uploaded
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - etc/decoders/new_decoder.xml
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Decoder was successfully uploaded
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Confirmation message
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Update decoders file
      tags:
      - Decoders
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/decoders:update'
      - $ref: '#/x-rbac-catalog/actions/decoders:delete'
  /decoders/parents:
    get:
      description: Return information about all parent decoders. A parent decoder
        is a decoder used as base of other decoders
      operationId: api.controllers.decoder_controller.get_decoders_parents
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - filename: 0005-wazuh_decoders.xml
                    relative_dirname: ruleset/decoders
                    status: enabled
                    name: wazuh
                    position: 0
                    details:
                      prematch:
                        pattern: "^wazuh: "
                  - filename: 0006-json_decoders.xml
                    relative_dirname: ruleset/decoders
                    status: enabled
                    name: json
                    position: 0
                    details:
                      prematch:
                        pattern: "^{\\\\s*\\\""
                      plugin_decoder: JSON_Decoder
                  total_affected_items: 182
                  total_failed_items: 0
                  failed_items: []
                message: All selected decoders were returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: List of parent decoders
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get parent decoders
      tags:
      - Decoders
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/decoders:read'
  /events:
    post:
      description: |-
        Send security events to analysisd.

        The endpoint is limited to receiving a max of 30 requests per minute and a max bulk size of 100 events per request.
      operationId: api.controllers.event_controller.forward_event
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              events:
              - Event value 1
              - "{\"someKey\": \"Event value 2\"}"
            schema:
              $ref: '#/components/schemas/api_controllers_event_controller_forward_event_request'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - Event value 1
                  - "{\"someKey\": \"Event value 2\"}"
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: All events were forwarded to analisysd
                error: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Events accepted
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Ingest events
      tags:
      - Events
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/event:ingest'
  /experimental/rootcheck:
    delete:
      description: Clear rootcheck database for all agents or a list of them
      operationId: api.controllers.experimental_controller.clear_rootcheck_database
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), use the keyword `all`\
          \ to select all agents"
        explode: true
        in: query
        name: agents_list
        required: true
        schema:
          items:
            $ref: '#/components/schemas/AgentIDListAll'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - "002"
                  - "003"
                  total_affected_items: 2
                  failed_items: []
                  total_failed_items: 0
                message: Rootcheck database was cleared on returned agents
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_mitre_controller_get_groups_200_response'
          description: Clear rootcheck database for all agents or a list of them
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Clear rootcheck results
      tags:
      - Experimental
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/rootcheck:clear'
  /experimental/syscheck:
    delete:
      description: Clear the syscheck database for all agents or a list of them
      operationId: api.controllers.experimental_controller.clear_syscheck_database
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), use the keyword `all`\
          \ to select all agents"
        explode: true
        in: query
        name: agents_list
        required: true
        schema:
          items:
            $ref: '#/components/schemas/AgentIDListAll'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - "000"
                  - "001"
                  - "002"
                  - "003"
                  - "004"
                  - "005"
                  - "006"
                  - "007"
                  - "008"
                  - "009"
                  - "010"
                  - "011"
                  - "012"
                  total_affected_items: 13
                  total_failed_items: 0
                  failed_items: []
                message: Syscheck database was cleared on returned agents
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_agent_controller_restart_agents_by_node_200_response'
          description: Delete syscheck database
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Clear agents FIM results
      tags:
      - Experimental
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscheck:clear'
  /experimental/ciscat/results:
    get:
      description: Return CIS-CAT results for all agents or a list of them
      operationId: api.controllers.experimental_controller.get_cis_cat_results
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by benchmark type
        explode: true
        in: query
        name: benchmark
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by evaluated profile
        explode: true
        in: query
        name: profile
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by passed checks
        explode: true
        in: query
        name: pass
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by failed checks
        explode: true
        in: query
        name: fail
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by encountered errors
        explode: true
        in: query
        name: error
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by not checked
        explode: true
        in: query
        name: notchecked
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by unknown results
        explode: true
        in: query
        name: unknown
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter by final score
        explode: true
        in: query
        name: score
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - agent_id: "001"
                    benchmark: CIS Ubuntu Linux 16.04 LTS Benchmark
                    error: 0
                    fail: 82
                    notchecked: 36
                    pass: 102
                    profile: xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Server
                    scan:
                      id: 1422619291
                      time: 2019-12-03T08:38:35.230Z
                    score: 55
                    unknown: 0
                  - agent_id: "002"
                    benchmark: CIS Ubuntu Linux 16.04 LTS Benchmark
                    error: 0
                    fail: 82
                    notchecked: 36
                    pass: 102
                    profile: xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Server
                    scan:
                      id: 1794774880
                      time: 2019-12-03T08:38:27.743Z
                    score: 55
                    unknown: 0
                  - agent_id: "003"
                    benchmark: CIS Ubuntu Linux 16.04 LTS Benchmark
                    error: 0
                    fail: 82
                    notchecked: 36
                    pass: 102
                    profile: xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Server
                    scan:
                      id: 622382213
                      time: 2019-12-03T08:39:02.569Z
                    score: 55
                    unknown: 0
                  failed_items: []
                  total_affected_items: 3
                  total_failed_items: 0
                message: All CISCAT results were returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_ciscat_controller_get_agents_ciscat_results_200_response'
          description: Return a list of CIS-CAT results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agents CIS-CAT results
      tags:
      - Experimental
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/ciscat:read'
  /experimental/syscollector/hardware:
    get:
      description: "Return all agents (or a list of them) hardware info. This information\
        \ include cpu, ram, scan info among others of all agents"
      operationId: api.controllers.experimental_controller.get_hardware_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by ram.free
        explode: true
        in: query
        name: ram.free
        required: false
        schema:
          format: int64
          minimum: 0
          type: integer
        style: form
      - description: Filter by ram.total
        explode: true
        in: query
        name: ram.total
        required: false
        schema:
          format: int64
          minimum: 0
          type: integer
        style: form
      - description: Filter by cpu.cores
        explode: true
        in: query
        name: cpu.cores
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Filter by cpu.mhz
        explode: true
        in: query
        name: cpu.mhz
        required: false
        schema:
          format: float
          minimum: 1
          type: number
        style: form
      - description: Filter by cpu.name
        explode: true
        in: query
        name: cpu.name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by board_serial
        explode: true
        in: query
        name: board_serial
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - agent_id: "000"
                    board_serial: BSS-0123456789
                    cpu:
                      cores: 12
                      mhz: 3094.875
                      name: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
                    ram:
                      free: 6958480
                      total: 16263580
                      usage: 58
                    scan:
                      id: 1452382474
                      time: 2019-12-03T08:37:42Z
                  - agent_id: "001"
                    board_serial: BSS-0123456789
                    cpu:
                      cores: 12
                      mhz: 2688.144
                      name: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
                    ram:
                      free: 5793604
                      total: 16263580
                      usage: 65
                    scan:
                      id: 1317471702
                      time: 2019-12-03T08:38:29Z
                  - agent_id: "002"
                    board_serial: BSS-0123456789
                    cpu:
                      cores: 12
                      mhz: 2896.127
                      name: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
                    ram:
                      free: 5844192
                      total: 16263580
                      usage: 65
                    scan:
                      id: 2069790203
                      time: 2019-12-03T08:38:21Z
                  failed_items: []
                  total_affected_items: 3
                  total_failed_items: 0
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_hardware_info_200_response'
          description: Return a list of agent's hardware results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agents hardware
      tags:
      - Experimental
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /experimental/syscollector/netaddr:
    get:
      description: "Return all agents (or a list of them) IPv4 and IPv6 addresses\
        \ associated to their network interfaces. This information include used IP\
        \ protocol, interface, and IP address among others"
      operationId: api.controllers.experimental_controller.get_network_address_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by IP protocol
        explode: true
        in: query
        name: proto
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by IP address
        explode: true
        in: query
        name: address
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by broadcast direction
        explode: true
        in: query
        name: broadcast
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by netmask
        explode: true
        in: query
        name: netmask
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - address: 172.23.0.3
                    agent_id: "000"
                    broadcast: 172.23.255.255
                    iface: eth0
                    netmask: 255.255.0.0
                    proto: ipv4
                    scan:
                      id: 1921972007
                  - address: 172.23.0.6
                    agent_id: "001"
                    broadcast: 172.23.255.255
                    iface: eth0
                    netmask: 255.255.0.0
                    proto: ipv4
                    scan:
                      id: 1704225423
                  - address: 172.23.0.7
                    agent_id: "002"
                    broadcast: 172.23.255.255
                    iface: eth0
                    netmask: 255.255.0.0
                    proto: ipv4
                    scan:
                      id: 1393900138
                  failed_items: []
                  total_affected_items: 3
                  total_failed_items: 0
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_network_address_info_200_response'
          description: Return a list of agent's network results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agents netaddr
      tags:
      - Experimental
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /experimental/syscollector/netiface:
    get:
      description: "Return all agents (or a list of them) network interfaces. This\
        \ information includes rx, scan, tx info and some network information among\
        \ other"
      operationId: api.controllers.experimental_controller.get_network_interface_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by adapter
        explode: true
        in: query
        name: adapter
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Type of network
        explode: true
        in: query
        name: type
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by state
        explode: true
        in: query
        name: state
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by mtu
        explode: true
        in: query
        name: mtu
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by tx.packets
        explode: true
        in: query
        name: tx.packets
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by rx.packets
        explode: true
        in: query
        name: rx.packets
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by tx.bytes
        explode: true
        in: query
        name: tx.bytes
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by rx.bytes
        explode: true
        in: query
        name: rx.bytes
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by tx.errors
        explode: true
        in: query
        name: tx.errors
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by rx.errors
        explode: true
        in: query
        name: rx.errors
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by tx.dropped
        explode: true
        in: query
        name: tx.dropped
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by rx.dropped
        explode: true
        in: query
        name: rx.dropped
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - agent_id: "000"
                    mac: 02:42:ac:17:00:03
                    mtu: 1500
                    name: eth0
                    rx:
                      bytes: 7161
                      dropped: 0
                      errors: 0
                      packets: 58
                    scan:
                      id: 1921972007
                      time: 2019-12-03T09:57:04Z
                    state: up
                    tx:
                      bytes: 115
                      dropped: 0
                      errors: 0
                      packets: 2
                    type: ethernet
                  - agent_id: "001"
                    mac: 02:42:ac:17:00:06
                    mtu: 1500
                    name: eth0
                    rx:
                      bytes: 868555
                      dropped: 0
                      errors: 0
                      packets: 1037
                    scan:
                      id: 1704225423
                      time: 2019-12-03T09:57:42Z
                    state: up
                    tx:
                      bytes: 231924
                      dropped: 0
                      errors: 0
                      packets: 910
                    type: ethernet
                  - agent_id: "002"
                    mac: 02:42:ac:17:00:07
                    mtu: 1500
                    name: eth0
                    rx:
                      bytes: 876071
                      dropped: 0
                      errors: 0
                      packets: 1152
                    scan:
                      id: 1393900138
                      time: 2019-12-03T09:57:43Z
                    state: up
                    tx:
                      bytes: 232396
                      dropped: 0
                      errors: 0
                      packets: 906
                    type: ethernet
                  failed_items: []
                  total_affected_items: 3
                  total_failed_items: 0
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_network_interface_info_200_response'
          description: Return a list of agent's network interfaces results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agents netiface
      tags:
      - Experimental
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /experimental/syscollector/netproto:
    get:
      description: "Return all agents (or a list of them) routing configuration for\
        \ each network interface. This information includes interface, type protocol\
        \ information among other"
      operationId: api.controllers.experimental_controller.get_network_protocol_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by network interface
        explode: true
        in: query
        name: iface
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Type of network
        explode: true
        in: query
        name: type
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by network gateway
        explode: true
        in: query
        name: gateway
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by network dhcp (enabled or disabled)
        explode: true
        in: query
        name: dhcp
        required: false
        schema:
          $ref: '#/components/schemas/DHCPStatus'
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - scan:
                      id: 1248412797
                    iface: eth0
                    type: ipv4
                    gateway: 172.24.0.1
                    dhcp: enabled
                    agent_id: "000"
                  - scan:
                      id: 1213296763
                    iface: eth0
                    type: ipv4
                    gateway: 172.24.0.1
                    dhcp: enabled
                    agent_id: "001"
                  - scan:
                      id: 341262067
                    type: ipv4
                    iface: eth0
                    dhcp: enabled
                    gateway: 172.24.0.1
                    agent_id: "002"
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_network_protocol_info_200_response'
          description: Return a list of agent's network protocol results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agents netproto
      tags:
      - Experimental
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /experimental/syscollector/os:
    get:
      description: "Return all agents (or a list of them) OS info. This information\
        \ includes os information, architecture information among other"
      operationId: api.controllers.experimental_controller.get_os_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by OS name
        explode: true
        in: query
        name: os.name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by architecture
        explode: true
        in: query
        name: architecture
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by OS version
        explode: true
        in: query
        name: os.version
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: "Filter by agents version using one of the following formats:\
          \ 'X.Y.Z', 'vX.Y.Z', 'wazuh X.Y.Z' or 'wazuh vX.Y.Z'. For example: '4.4.0'"
        explode: true
        in: query
        name: version
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by release
        explode: true
        in: query
        name: release
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - os:
                      codename: Bionic Beaver
                      major: "18"
                      minor: "04"
                      name: Ubuntu
                      platform: ubuntu
                      version: 18.04.4 LTS (Bionic Beaver)
                    scan:
                      id: 496386874
                      time: 2020-04-15T11:02:03Z
                    sysname: Linux
                    hostname: wazuh-master
                    version: '#34~1584408018~19.10~21df4b1-Ubuntu SMP Tue Mar 17 13:38:51
                      UTC '
                    release: 5.3.0-7642-generic
                    architecture: x86_64
                    agent_id: "000"
                  - os:
                      codename: Xenial Xerus
                      major: "16"
                      minor: "04"
                      name: Ubuntu
                      platform: ubuntu
                      version: 16.04.6 LTS (Xenial Xerus)
                    scan:
                      id: 196194860
                      time: 2020-04-15T11:02:23Z
                    sysname: Linux
                    hostname: wazuh-agent1
                    version: '#34~1584408018~19.10~21df4b1-Ubuntu SMP Tue Mar 17 13:38:51
                      UTC '
                    release: 5.3.0-7642-generic
                    architecture: x86_64
                    agent_id: "001"
                  - os:
                      codename: Xenial Xerus
                      major: "16"
                      minor: "04"
                      name: Ubuntu
                      platform: ubuntu
                      version: 16.04.6 LTS (Xenial Xerus)
                    scan:
                      id: 763390318
                      time: 2020-04-15T11:02:52Z
                    hostname: wazuh-agent2
                    release: 5.3.0-7642-generic
                    version: '#34~1584408018~19.10~21df4b1-Ubuntu SMP Tue Mar 17 13:38:51
                      UTC '
                    architecture: x86_64
                    sysname: Linux
                    agent_id: "002"
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_os_info_200_response'
          description: Return a list of agent's OS results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agents OS
      tags:
      - Experimental
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /experimental/syscollector/packages:
    get:
      description: "Return all agents (or a list of them) packages info. This information\
        \ includes name, section, size, and priority information of all packages among\
        \ other"
      operationId: api.controllers.experimental_controller.get_packages_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by vendor
        explode: true
        in: query
        name: vendor
        required: false
        schema:
          type: string
        style: form
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by architecture
        explode: true
        in: query
        name: architecture
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by file format. For example 'deb' will output deb files
        explode: true
        in: query
        name: format
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by package version
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - scan:
                      id: 1137251326
                      time: 2020-04-15T11:02:03Z
                    name: libquadmath0
                    size: 269
                    version: 8.4.0-1ubuntu1~18.04
                    source: gcc-8
                    format: deb
                    section: libs
                    architecture: amd64
                    multiarch: same
                    description: GCC Quad-Precision Math Library
                    priority: optional
                    vendor: Ubuntu Core developers <ubuntu-devel-discuss@lists.ubuntu.com>
                    agent_id: "000"
                  - scan:
                      id: 1137251326
                      time: 2020-04-15T11:02:03Z
                    name: libnpth0
                    size: 32
                    version: 1.5-3
                    source: npth
                    format: deb
                    section: libs
                    architecture: amd64
                    multiarch: same
                    description: replacement for GNU Pth using system threads
                    priority: optional
                    vendor: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
                    agent_id: "000"
                  - scan:
                      id: 1137251326
                      time: 2020-04-15T11:02:03Z
                    name: fdisk
                    size: 427
                    version: 2.31.1-0.4ubuntu3.5
                    source: util-linux
                    format: deb
                    section: utils
                    architecture: amd64
                    multiarch: foreign
                    description: collection of partitioning utilities
                    priority: important
                    vendor: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
                    agent_id: "000"
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_packages_info_200_response'
          description: Return a list of agent's packages results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agents packages
      tags:
      - Experimental
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /experimental/syscollector/ports:
    get:
      description: "Return all agents (or a list of them) ports info. This information\
        \ includes local IP, Remote IP, protocol information among other"
      operationId: api.controllers.experimental_controller.get_ports_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by pid
        explode: true
        in: query
        name: pid
        required: false
        schema:
          format: numbers
          type: string
        style: form
      - description: Filter by protocol
        explode: true
        in: query
        name: protocol
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by Local IP
        explode: true
        in: query
        name: local.ip
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by Local Port
        explode: true
        in: query
        name: local.port
        required: false
        schema:
          format: numbers
          type: string
        style: form
      - description: Filter by Remote IP
        explode: true
        in: query
        name: remote.ip
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by tx_queue
        explode: true
        in: query
        name: tx_queue
        required: false
        schema:
          format: numbers
          type: string
        style: form
      - description: Filter by state
        explode: true
        in: query
        name: state
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process name
        explode: true
        in: query
        name: process
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - local:
                      ip: 127.0.0.11
                      port: 46841
                    remote:
                      ip: 0.0.0.0
                      port: 0
                    scan:
                      id: 315935312
                      time: 2020-04-15T11:02:07Z
                    rx_queue: 0
                    state: listening
                    protocol: tcp
                    inode: 12387152
                    tx_queue: 0
                    agent_id: "000"
                  - local:
                      ip: 0.0.0.0
                      port: 1514
                    remote:
                      ip: 0.0.0.0
                      port: 0
                    scan:
                      id: 315935312
                      time: 2020-04-15T11:02:07Z
                    rx_queue: 0
                    state: listening
                    protocol: tcp
                    inode: 12397927
                    tx_queue: 0
                    agent_id: "000"
                  - local:
                      ip: 0.0.0.0
                      port: 1515
                    remote:
                      ip: 0.0.0.0
                      port: 0
                    scan:
                      id: 315935312
                      time: 2020-04-15T11:02:07Z
                    rx_queue: 0
                    state: listening
                    protocol: tcp
                    inode: 12397153
                    tx_queue: 0
                    agent_id: "000"
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_ports_info_200_response'
          description: Return a list of agent's packages results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agents ports
      tags:
      - Experimental
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /experimental/syscollector/processes:
    get:
      description: Return all agents (or a list of them) processes info
      operationId: api.controllers.experimental_controller.get_processes_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by process pid
        explode: true
        in: query
        name: pid
        required: false
        schema:
          format: numbers
          type: string
        style: form
      - description: Filter by process state
        explode: true
        in: query
        name: state
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process parent pid
        explode: true
        in: query
        name: ppid
        required: false
        schema:
          format: numbers
          type: string
        style: form
      - description: Filter by process egroup
        explode: true
        in: query
        name: egroup
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process euser
        explode: true
        in: query
        name: euser
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process fgroup
        explode: true
        in: query
        name: fgroup
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process name
        explode: true
        in: query
        name: name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process nlwp
        explode: true
        in: query
        name: nlwp
        required: false
        schema:
          format: numbers
          type: string
        style: form
      - description: Filter by process pgrp
        explode: true
        in: query
        name: pgrp
        required: false
        schema:
          format: numbers
          type: string
        style: form
      - description: Filter by process priority
        explode: true
        in: query
        name: priority
        required: false
        schema:
          format: numbers
          type: string
        style: form
      - description: Filter by process rgroup
        explode: true
        in: query
        name: rgroup
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process ruser
        explode: true
        in: query
        name: ruser
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process sgroup
        explode: true
        in: query
        name: sgroup
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process suser
        explode: true
        in: query
        name: suser
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - scan:
                      id: 28643647
                      time: 2020-04-15T11:02:07Z
                    name: bash
                    suser: root
                    nlwp: 1
                    pgrp: 1
                    state: S
                    session: 1
                    utime: 23
                    egroup: root
                    ruser: root
                    argvs: "/scripts/entrypoint.sh,wazuh-master,master-node,master"
                    size: 4593
                    euser: root
                    processor: 3
                    resident: 793
                    tty: 0
                    nice: 0
                    pid: "1"
                    vm_size: 18372
                    sgroup: root
                    rgroup: root
                    fgroup: root
                    start_time: 1093372
                    tgid: 1
                    stime: 1
                    ppid: 0
                    share: 726
                    priority: 20
                    cmd: bash
                    agent_id: "000"
                  - scan:
                      id: 28643647
                      time: 2020-04-15T11:02:07Z
                    name: wazuh-control
                    suser: root
                    nlwp: 1
                    pgrp: 1
                    state: S
                    session: 1
                    utime: 0
                    egroup: root
                    ruser: root
                    argvs: "/var/ossec/bin/wazuh-control,restart"
                    size: 1156
                    euser: root
                    processor: 6
                    resident: 457
                    tty: 0
                    nice: 0
                    pid: "15"
                    vm_size: 4624
                    sgroup: root
                    rgroup: root
                    fgroup: root
                    start_time: 1093547
                    tgid: 15
                    stime: 3
                    ppid: 1
                    share: 417
                    priority: 20
                    cmd: /bin/sh
                    agent_id: "000"
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_processes_info_200_response'
          description: Return a list of agent's processes results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agents processes
      tags:
      - Experimental
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /experimental/syscollector/hotfixes:
    get:
      description: Return all agents (or a list of them) hotfixes info
      operationId: api.controllers.experimental_controller.get_hotfixes_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by hotfix
        explode: true
        in: query
        name: hotfix
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - hotfix: KB2978691
                    scan:
                      id: 1708048540
                      time: 2019-10-30T16:09:35Z
                  - hotfix: KC2978693
                    scan:
                      id: 1708048541
                      time: 2019-10-30T16:19:39Z
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_hotfixes_info_200_response'
          description: Return a list of agent's hotfix results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agents hotfixes
      tags:
      - Experimental
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /syscollector/{agent_id}/hardware:
    get:
      description: "Return the agent's hardware info. This information include cpu,\
        \ ram, scan info among others"
      operationId: api.controllers.syscollector_controller.get_hardware_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - cpu:
                      cores: 4
                      mhz: 1101
                      name: Intel(R) Core(TM) i5-7600K CPU @ 3.80GHz
                    ram:
                      free: 12401548
                      total: 32852420
                      usage: 63
                    scan:
                      id: 0
                      time: 2021-05-28T12:16:14Z
                    board_serial: HA16934652
                    agent_id: "001"
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_hardware_info_200_response'
          description: Return a list of agent's hardware results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agent hardware
      tags:
      - Syscollector
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /syscollector/{agent_id}/hotfixes:
    get:
      description: Return all hotfixes installed by Microsoft(R) in Windows(R) systems
        (KB... fixes)
      operationId: api.controllers.syscollector_controller.get_hotfix_info
      parameters:
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by hotfix
        explode: true
        in: query
        name: hotfix
        required: false
        schema:
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - hotfix: KB2978691
                    scan:
                      id: 1708048540
                      time: 2019-10-30T16:09:35Z
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_hotfixes_info_200_response'
          description: Return an agent's hotfix results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agent hotfixes
      tags:
      - Syscollector
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /syscollector/{agent_id}/netaddr:
    get:
      description: "Return the agent's network address info. This information include\
        \ used IP protocol, interface, IP address  among others"
      operationId: api.controllers.syscollector_controller.get_network_address_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by network interface
        explode: true
        in: query
        name: iface
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by IP protocol
        explode: true
        in: query
        name: proto
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by IP address
        explode: true
        in: query
        name: address
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by broadcast direction
        explode: true
        in: query
        name: broadcast
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by netmask
        explode: true
        in: query
        name: netmask
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - scan:
                      id: 0
                    address: 172.26.0.7
                    iface: eth0
                    netmask: 255.255.0.0
                    broadcast: 172.26.255.255
                    proto: ipv4
                    agent_id: 1
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_network_address_info_200_response'
          description: Return a list of agent's network results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agent netaddr
      tags:
      - Syscollector
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /syscollector/{agent_id}/netiface:
    get:
      description: "Return the agent's network interface info. This information include\
        \ rx, scan, tx info and some network information among others"
      operationId: api.controllers.syscollector_controller.get_network_interface_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by adapter
        explode: true
        in: query
        name: adapter
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Type of interface
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Filter by state
        explode: true
        in: query
        name: state
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by mtu
        explode: true
        in: query
        name: mtu
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by tx.packets
        explode: true
        in: query
        name: tx.packets
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by rx.packets
        explode: true
        in: query
        name: rx.packets
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by tx.bytes
        explode: true
        in: query
        name: tx.bytes
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by rx.bytes
        explode: true
        in: query
        name: rx.bytes
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by tx.errors
        explode: true
        in: query
        name: tx.errors
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by rx.errors
        explode: true
        in: query
        name: rx.errors
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by tx.dropped
        explode: true
        in: query
        name: tx.dropped
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter by rx.dropped
        explode: true
        in: query
        name: rx.dropped
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - rx:
                      bytes: 679529
                      dropped: 0
                      errors: 0
                      packets: 3638
                    scan:
                      id: 0
                      time: 2021-05-28T12:16:14Z
                    tx:
                      bytes: 1326491
                      dropped: 0
                      errors: 0
                      packets: 3828
                    type: ethernet
                    name: eth0
                    mtu: 1500
                    state: up
                    mac: 02:42:ac:18:00:02
                    agent_id: "001"
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_network_interface_info_200_response'
          description: Return a list of agent's network interfaces results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agent netiface
      tags:
      - Syscollector
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /syscollector/{agent_id}/netproto:
    get:
      description: Return the agent's routing configuration for each network interface
      operationId: api.controllers.syscollector_controller.get_network_protocol_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by network interface
        explode: true
        in: query
        name: iface
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Type of network
        explode: true
        in: query
        name: type
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by network gateway
        explode: true
        in: query
        name: gateway
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by network dhcp (enabled or disabled)
        explode: true
        in: query
        name: dhcp
        required: false
        schema:
          $ref: '#/components/schemas/DHCPStatus'
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - scan:
                      id: 0
                    gateway: 172.24.0.1
                    dhcp: enabled
                    iface: eth0
                    type: ipv4
                    agent_id: "001"
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_network_protocol_info_200_response'
          description: Return a list of agent's network protocol results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agent netproto
      tags:
      - Syscollector
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /syscollector/{agent_id}/os:
    get:
      description: "Return the agent's OS info. This information include os information,\
        \ architecture information among others of all agents"
      operationId: api.controllers.syscollector_controller.get_os_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - os:
                      codename: focal
                      major: "20"
                      minor: "04"
                      name: Ubuntu
                      platform: ubuntu
                      version: 20.04.2 LTS (Focal Fossa)
                    scan:
                      id: 0
                      time: 22021-05-28T12:16:14Z
                    sysname: Linux
                    release: 5.8.0-45-generic
                    version: '#51~20.04.1-Ubuntu SMP Tue Feb 23 13:46:31 UTC 2021'
                    architecture: x86_64
                    hostname: wazuh-master
                    agent_id: "001"
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_os_info_200_response'
          description: Return a list of agent's OS results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agent OS
      tags:
      - Syscollector
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /syscollector/{agent_id}/packages:
    get:
      description: "Return the agent's packages info. This information include name,\
        \ section, size, priority information of all packages among others"
      operationId: api.controllers.syscollector_controller.get_packages_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by vendor
        explode: true
        in: query
        name: vendor
        required: false
        schema:
          type: string
        style: form
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by architecture
        explode: true
        in: query
        name: architecture
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by file format. For example 'deb' will output deb files
        explode: true
        in: query
        name: format
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by package version
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - scan:
                      id: 0
                      time: 2021-05-28T11:16:15Z
                    multiarch: same
                    description: GCC Quad-Precision Math Library
                    source: krb5
                    name: libquadmath0
                    architecture: amd64
                    vendor: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
                    size: 426
                    format: deb
                    version: 8.4.0-1ubuntu1~18.04
                    section: libs
                    priority: optional
                    agent_id: "002"
                    location: ""
                    install_time: ""
                  - scan:
                      id: 0
                      time: 2021-05-28T11:16:15Z
                    multiarch: foreign
                    description: "secure shell (SSH) client, for secure access to\
                      \ remote machines"
                    source: openssh
                    name: openssh-client
                    architecture: amd64
                    vendor: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
                    size: 4117
                    format: deb
                    version: 1:8.2p1-4ubuntu0.2
                    section: net
                    priority: standard
                    agent_id: "002"
                    location: ""
                    install_time: ""
                  - scan:
                      id: 0
                      time: 2021-05-28T11:16:16Z
                    description: Foreign Function Interface for Python calling C code
                      - backend
                    source: python-cffi
                    name: lpython-cffi-backend
                    architecture: amd64
                    vendor: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
                    size: 210
                    format: deb
                    version: 1.14.0-1build1
                    section: python
                    priority: optional
                    agent_id: "002"
                    location: ""
                    install_time: ""
                  total_affected_items: 307
                  total_failed_items: 0
                  failed_items: []
                  message: All specified syscollector information was returned
                  error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_packages_info_200_response'
          description: Return a list of agent's packages results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agent packages
      tags:
      - Syscollector
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /syscollector/{agent_id}/ports:
    get:
      description: "Return the agent's ports info. This information include local\
        \ IP, Remote IP, protocol information among others"
      operationId: api.controllers.syscollector_controller.get_ports_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by pid
        explode: true
        in: query
        name: pid
        required: false
        schema:
          format: numbers
          type: string
        style: form
      - description: Filter by protocol
        explode: true
        in: query
        name: protocol
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by Local IP
        explode: true
        in: query
        name: local.ip
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by Local Port
        explode: true
        in: query
        name: local.port
        required: false
        schema:
          format: numbers
          type: string
        style: form
      - description: Filter by Remote IP
        explode: true
        in: query
        name: remote.ip
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by tx_queue
        explode: true
        in: query
        name: tx_queue
        required: false
        schema:
          format: numbers
          type: string
        style: form
      - description: Filter by state
        explode: true
        in: query
        name: state
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process name
        explode: true
        in: query
        name: process
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - local:
                      ip: 127.0.0.11
                      port: 46841
                    remote:
                      ip: 0.0.0.0
                      port: 0
                    scan:
                      id: 0
                      time: 2021-05-28T11:16:14Z
                    inode: 12387152
                    rx_queue: 0
                    protocol: tcp
                    pid: 0
                    tx_queue: 0
                    process: ""
                    agent_id: "001"
                  - local:
                      ip: 0.0.0.0
                      port: 1514
                    remote:
                      ip: 0.0.0.0
                      port: 0
                    scan:
                      id: 0
                      time: 2021-05-28T11:16:14Z
                    state: listening
                    inode: 12397927
                    rx_queue: 0
                    protocol: tcp
                    pid: 0
                    tx_queue: 0
                    process: ""
                    agent_id: "001"
                  - local:
                      ip: 0.0.0.0
                      port: 1515
                    remote:
                      ip: 0.0.0.0
                      port: 0
                    scan:
                      id: 315935312
                      time: 2020-04-15T11:02:07Z
                    state: listening
                    inode: 12397153
                    rx_queue: 0
                    protocol: tcp
                    tx_queue: 0
                    process: ""
                    agent_id: "001"
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_ports_info_200_response'
          description: Return a list of agent's packages results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agent ports
      tags:
      - Syscollector
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /syscollector/{agent_id}/processes:
    get:
      description: Return the agent's processes info
      operationId: api.controllers.syscollector_controller.get_processes_info
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Agent ID. All possible values from 000 onwards
        explode: false
        in: path
        name: agent_id
        required: true
        schema:
          $ref: '#/components/schemas/AgentID'
        style: simple
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: Filter by process pid
        explode: true
        in: query
        name: pid
        required: false
        schema:
          format: numbers
          type: string
        style: form
      - description: Filter by process state
        explode: true
        in: query
        name: state
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process parent pid
        explode: true
        in: query
        name: ppid
        required: false
        schema:
          format: numbers
          type: string
        style: form
      - description: Filter by process egroup
        explode: true
        in: query
        name: egroup
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process euser
        explode: true
        in: query
        name: euser
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process fgroup
        explode: true
        in: query
        name: fgroup
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process name
        explode: true
        in: query
        name: name
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process nlwp
        explode: true
        in: query
        name: nlwp
        required: false
        schema:
          format: numbers
          type: string
        style: form
      - description: Filter by process pgrp
        explode: true
        in: query
        name: pgrp
        required: false
        schema:
          format: numbers
          type: string
        style: form
      - description: Filter by process priority
        explode: true
        in: query
        name: priority
        required: false
        schema:
          format: numbers
          type: string
        style: form
      - description: Filter by process rgroup
        explode: true
        in: query
        name: rgroup
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process ruser
        explode: true
        in: query
        name: ruser
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process sgroup
        explode: true
        in: query
        name: sgroup
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by process suser
        explode: true
        in: query
        name: suser
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - scan:
                      id: 0
                      time: 2021-05-28T12:16:15Z
                    nice: 0
                    name: bash
                    resident: 788
                    egroup: root
                    sgroup: root
                    euser: root
                    size: 996
                    tgid: 1
                    share: 729
                    rgroup: root
                    argvs: /scripts/entrypoint.sh nginx-lb 4.4
                    start_time: 1217866
                    stime: 0
                    vm_size: 3984
                    priority: 20
                    utime: 2
                    nlwp: 1
                    session: 1
                    processor: 2
                    pgrp: 1
                    suser: root
                    state: S
                    ppid: 0
                    cmd: bash
                    tty: 0
                    pid: "1"
                    fgroup: root
                    ruser: root
                    agent_id: "001"
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All specified syscollector information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_experimental_controller_get_processes_info_200_response'
          description: Return a list of agent's processes results
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agent processes
      tags:
      - Syscollector
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/syscollector:read'
  /security/user/authenticate:
    delete:
      description: This method should be called to invalidate all the current user's
        tokens
      operationId: api.controllers.security_controller.logout_user
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  message: User wazuh was successfully logged out
                  error: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Logout successful
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Logout current user
      tags:
      - Security
    get:
      deprecated: true
      description: "This method should be called to get an API token. This token will\
        \ expire after auth_token_exp_timeout seconds (default: 900). This value can\
        \ be changed using PUT /security/config"
      operationId: api.controllers.security_controller.deprecated_login_user
      parameters:
      - description: Format response in plain text
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  token: <generated_token>
                  error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_deprecated_login_user_200_response'
            text/plain:
              example: <generated_token>
              schema:
                type: string
          description: Login successful
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: Invalid credentials
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a problem with authentication
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      security:
      - basicAuth: []
      summary: Login
      tags:
      - Security
    post:
      description: "This method should be called to get an API token. This token will\
        \ expire after auth_token_exp_timeout seconds (default: 900). This value can\
        \ be changed using PUT /security/config"
      operationId: api.controllers.security_controller.login_user
      parameters:
      - description: Format response in plain text
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  token: <generated_token>
                  error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_deprecated_login_user_200_response'
            text/plain:
              example: <generated_token>
              schema:
                type: string
          description: Login successful
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: Invalid credentials
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a problem with authentication
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      security:
      - basicAuth: []
      summary: Login
      tags:
      - Security
  /security/user/authenticate/run_as:
    post:
      description: "This method should be called to get an API token using an authorization\
        \ context body. This token will expire after auth_token_exp_timeout seconds\
        \ (default: 900). This value can be changed using PUT /security/config"
      operationId: api.controllers.security_controller.run_as_login
      parameters:
      - description: Format response in plain text
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              name: Initial_auth
              auth:
                name: Wazuh
                office:
                - "20"
                - "21"
                - "30"
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  token: <generated_token>
                  error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_run_as_login_200_response'
          description: Login successful
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: Invalid credentials
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a problem with authentication
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      security:
      - basicAuth: []
      summary: Login auth_context
      tags:
      - Security
  /security/users/me:
    get:
      description: Get the information of the current user
      operationId: api.controllers.security_controller.get_user_me
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_get_user_me_200_response'
          description: Information about current user
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get current user info
      tags:
      - Security
  /security/users/me/policies:
    get:
      description: Get the processed policies information for the current user
      operationId: api.controllers.security_controller.get_user_me_policies
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  syscheck:run:
                    agent:id:*: allow
                  syscollector:read:
                    agent:id:*: allow
                  rbac_mode: black
                message: Current user processed policies information was returned
                error: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Information about current user processed policies
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get current user processed policies
      tags:
      - Security
  /security/user/revoke:
    put:
      description: This method should be called to revoke all active JWT tokens
      operationId: api.controllers.security_controller.revoke_all_tokens
      responses:
        "200":
          content:
            application/json:
              example:
                message: Tokens were successfully revoked
                error: 0
              schema:
                type: object
          description: Tokens were successfully revoked
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Revoke JWT tokens
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:revoke'
  /security/users/{user_id}/run_as:
    put:
      description: Modify a user's allow_run_as flag by specifying their ID
      operationId: api.controllers.security_controller.edit_run_as
      parameters:
      - description: User ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/User_id'
        style: simple
      - description: Value for the allow_run_as flag
        explode: true
        in: query
        name: allow_run_as
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_edit_run_as_200_response'
          description: User's flag changed successfully
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Enable/Disable run_as
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:edit_run_as'
  /security/actions:
    get:
      description: "Get all RBAC actions, including the potential related resources\
        \ and endpoints."
      operationId: api.controllers.security_controller.get_rbac_actions
      parameters:
      - description: Look for the RBAC actions which are related to the specified
          endpoint
        explode: true
        in: query
        name: endpoint
        required: false
        schema:
          type: string
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                active-response:command:
                  description: Allow to execute active response commands in the agents
                  resources:
                  - agent:id
                  example:
                    actions:
                    - active-response:command
                    resources:
                    - agent:id:001
                    effect: allow
                  related_endpoints:
                  - PUT /active-response
                agent:create:
                  description: Create new agents
                  resources:
                  - '*:*'
                  example:
                    actions:
                    - agent:create
                    resources:
                    - '*:*:*'
                    effect: allow
                  related_endpoints:
                  - POST /agents
                  - POST /agents/insert
                  - POST /agents/insert/quick
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_get_rbac_actions_200_response'
          description: Return a list of RBAC actions
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: List RBAC actions
      tags:
      - Security
  /security/resources:
    get:
      description: This method should be called to get all current defined RBAC resources.
      operationId: api.controllers.security_controller.get_rbac_resources
      parameters:
      - description: List of current RBAC's resources.
        explode: true
        in: query
        name: resource
        required: false
        schema:
          enum:
          - '*:*'
          - agent:group
          - agent:id
          - group:id
          - node:id
          - decoder:file
          - list:file
          - rule:file
          - policy:id
          - role:id
          - user:id
          type: string
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  '*:*':
                    description: "Resource applied in functions acting on resources\
                      \ that do not yet exist in the system. We call these functions,\
                      \ resourceless functions"
                  agent:group:
                    description: Reference agents via group name (i.e. agent:group:web)
                  agent:id:
                    description: Reference agents via agent ID (i.e. agent:id:001)
                  group:id:
                    description: Reference agent groups via group ID (i.e. group:id:default)
                  node:id:
                    description: Reference cluster nodes via node ID (i.e. node:id:worker1)
                  decoder:file:
                    description: Reference decoder files via its path (i.e. decoder:file:0005-wazuh_decoders.xml)
                  list:file:
                    description: Reference list files via its filename (i.e. list:file:audit-keys)
                  rule:file:
                    description: Reference rule files via its path (i.e. rule:file:0610-win-ms_logs_rules.xml)
                  policy:id:
                    description: Reference security policies via its id (i.e. policy:id:1)
                  role:id:
                    description: Reference security roles via its id (i.e. role:id:1)
                  rule:id:
                    description: Reference security rules via its id (i.e. rule:id:1)
                  user:id:
                    description: Reference security users via its id (i.e. user:id:1)
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_get_rbac_actions_200_response'
          description: Return all RBAC resources
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: List RBAC resources
      tags:
      - Security
  /security/users:
    delete:
      description: Delete a list of users by specifying their IDs
      operationId: api.controllers.security_controller.delete_users
      parameters:
      - description: "List of user IDs (separated by comma), use the keyword 'all'\
          \ to select all users"
        explode: true
        in: query
        name: user_ids
        required: true
        schema:
          items:
            $ref: '#/components/schemas/User_id_DELETE'
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_delete_users_200_response'
          description: User deleted successful
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Delete users
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:delete'
    get:
      description: Get the information of a specified user
      operationId: api.controllers.security_controller.get_users
      parameters:
      - description: List of user IDs (separated by comma)
        explode: true
        in: query
        name: user_ids
        required: false
        schema:
          items:
            $ref: '#/components/schemas/User_id'
          type: array
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_get_users_200_response'
          description: Information about user
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: List users
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:read'
    post:
      description: Add a new API user to the system
      operationId: api.controllers.security_controller.create_user
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_controllers_security_controller_create_user_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_create_user_200_response'
          description: User created successfully
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Add user
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:create_user'
  /security/users/{user_id}:
    put:
      description: Modify a user's password by specifying their ID
      operationId: api.controllers.security_controller.update_user
      parameters:
      - description: User ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/User_id'
        style: simple
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_controllers_security_controller_update_user_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_update_user_200_response'
          description: User updated successful
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Update users
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:update'
  /security/roles:
    delete:
      description: Policies linked to roles are not going to be removed
      operationId: api.controllers.security_controller.remove_roles
      parameters:
      - description: "List of role IDs (separated by comma), use the keyword 'all'\
          \ to select all roles"
        explode: true
        in: query
        name: role_ids
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Role_id_DELETE'
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 4
                    name: administrator
                    policies:
                    - 4
                    - 5
                    rules:
                    - 8
                    users:
                    - 101
                    - 104
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All specified roles were deleted
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_get_roles_200_response'
          description: Remove result
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Delete roles
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:delete'
    get:
      description: "For a specific list, indicate the ids separated by commas. Example:\
        \ ?role_ids=1,2,3"
      operationId: api.controllers.security_controller.get_roles
      parameters:
      - description: List of role IDs (separated by comma)
        explode: true
        in: query
        name: role_ids
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Role_id'
          type: array
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 1
                    name: administrator
                    policies:
                    - 1
                    - 2
                    - 3
                    - 6
                    - 7
                    - 8
                    - 29
                    - 30
                    - 12
                    - 14
                    - 15
                    - 18
                    - 19
                    - 21
                    - 23
                    - 24
                    - 16
                    - 25
                    - 27
                    - 28
                    - 33
                    - 34
                    - 35
                    users:
                    - 1
                    - 2
                    rules:
                    - 1
                    - 2
                  - id: 2
                    name: readonly
                    policies:
                    - 4
                    - 5
                    - 12
                    - 31
                    - 32
                    - 13
                    - 17
                    - 20
                    - 22
                    - 16
                    - 25
                    - 26
                    - 28
                    - 35
                    users: []
                    rules: []
                  total_affected_items: 7
                  total_failed_items: 0
                  failed_items: []
                message: All specified roles were returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_get_roles_200_response'
          description: Return a list of roles
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: List roles
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:read'
    post:
      description: "Add a new role, all fields need to be specified"
      operationId: api.controllers.security_controller.add_role
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              name: normal
            schema:
              $ref: '#/components/schemas/RolesRequest'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 100
                    name: TestWazuhRole
                    policies: []
                    users: []
                    rules: []
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Role was successfully created
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_get_roles_200_response'
          description: Return the information of the new role
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Add role
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:create'
  /security/roles/{role_id}:
    put:
      description: "Modify a role, cannot modify associated policies in this endpoint,\
        \ at least one property must be indicated"
      operationId: api.controllers.security_controller.update_role
      parameters:
      - description: Specify a role ID
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          $ref: '#/components/schemas/Role_id'
        style: simple
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              name: normal
            schema:
              $ref: '#/components/schemas/RolesRequest_no_required'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 5
                    name: normal8
                    policies: []
                    rules:
                    - 100
                    users: []
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Role was successfully updated
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_get_roles_200_response'
          description: Information of role modified
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Update role
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:update'
  /security/rules:
    delete:
      description: "Delete a list of security rules or all security rules in the system,\
        \ roles linked to rules are not going to be deleted"
      operationId: api.controllers.security_controller.remove_rules
      parameters:
      - description: "List of rule IDs (separated by comma), use the keyword 'all'\
          \ to select all rules"
        explode: true
        in: query
        name: rule_ids
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Security_rule_id_DELETE'
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 100
                    name: TestWazuhRule
                    rule:
                      MATCH:
                        definition: test_rule
                    roles: []
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All specified security rules were deleted
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_get_roles_200_response'
          description: Remove result
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Delete security rules
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:delete'
    get:
      description: "Get a list of security rules from the system or all of them. These\
        \ rules must be mapped with roles to obtain certain access privileges. For\
        \ a specific list, indicate the ids separated by commas. Example: ?rule_ids=1,2,3"
      operationId: api.controllers.security_controller.get_rules
      parameters:
      - description: List of rule IDs (separated by comma)
        explode: true
        in: query
        name: rule_ids
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Security_rule_id'
          type: array
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 1
                    name: wui_elastic_admin
                    rule:
                      FIND:
                        username: elastic
                    roles:
                    - 1
                  - id: 2
                    name: wui_opendistro_admin
                    rule:
                      FIND:
                        username: admin
                    roles:
                    - 1
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: All specified security rules were returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_get_roles_200_response'
          description: Return a list of security rules
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: List security rules
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:read'
    post:
      description: Add a new security rule
      operationId: api.controllers.security_controller.add_rule
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              name: New_Rule
              rule:
                MATCH:
                  definition: normalRule
            schema:
              $ref: '#/components/schemas/SecurityRulesRequest'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 100
                    name: TestWazuhRule
                    rule:
                      MATCH:
                        definition: test_rule
                    roles: []
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Security rule was successfully created
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_get_roles_200_response'
          description: Return the information of the new security rule
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Add security rule
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:create'
  /security/rules/{rule_id}:
    put:
      description: Modify a security rule by specifying its ID
      operationId: api.controllers.security_controller.update_rule
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Specify a rule ID
        explode: false
        in: path
        name: rule_id
        required: true
        schema:
          $ref: '#/components/schemas/Security_rule_id'
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: new_name
              rule:
                MATCH:
                  definition: normalRule
            schema:
              $ref: '#/components/schemas/SecurityRulesRequest_no_required'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_update_rule_200_response'
          description: Security rule updated successfully
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Update security rule
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:update'
  /security/policies:
    delete:
      description: "Delete a list of policies or all policies in the system, roles\
        \ linked to policies are not going to be removed"
      operationId: api.controllers.security_controller.remove_policies
      parameters:
      - description: "List of policy IDs (separated by comma), use the keyword 'all'\
          \ to select all policies"
        explode: true
        in: query
        name: policy_ids
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Policy_id_DELETE'
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 100
                    name: TestWazuhPolicy
                    policy:
                      actions:
                      - security:delete
                      resources:
                      - user:id:*
                      effect: deny
                    roles: []
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All specified policies were deleted
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_get_policies_200_response'
          description: Operation result
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Delete policies
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:delete'
    get:
      description: "Get all policies in the system, including the administrator policy"
      operationId: api.controllers.security_controller.get_policies
      parameters:
      - description: List of policy IDs
        explode: true
        in: query
        name: policy_ids
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Policy_id'
          type: array
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Look for distinct values.
        explode: true
        in: query
        name: distinct
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 1
                    name: agents_all_resourceless
                    policy:
                      actions:
                      - agent:create
                      - group:create
                      resources:
                      - '*:*:*'
                      effect: allow
                    roles:
                    - 1
                    - 5
                  - id: 2
                    name: agents_all_agents
                    policy:
                      actions:
                      - agent:read
                      - agent:delete
                      - agent:modify_group
                      - agent:reconnect
                      - agent:restart
                      - agent:upgrade
                      resources:
                      - agent:id:*
                      - agent:id:*
                      effect: allow
                    roles:
                    - 1
                    - 5
                  total_affected_items: 35
                  total_failed_items: 0
                  failed_items: []
                message: All specified policies were returned
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_get_policies_200_response'
          description: Return a list of policies
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: List policies
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:read'
    post:
      description: "Add a new policy, all fields need to be specified"
      operationId: api.controllers.security_controller.add_policy
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              name: normal_policy
              policy:
                actions:
                - agent:delete
                resources:
                - agent:id:001
                - agent:id:002
                - agent:id:003
                effect: allow
            schema:
              $ref: '#/components/schemas/PoliciesRequest'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 100
                    name: TestWazuhPolicy
                    policy:
                      actions:
                      - security:delete
                      resources:
                      - user:id:*
                      effect: deny
                    roles: []
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Policy was successfully created
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_get_policies_200_response'
          description: Add a policy
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Add policy
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:create'
  /security/policies/{policy_id}:
    put:
      description: "Modify a policy, at least one property must be indicated"
      operationId: api.controllers.security_controller.update_policy
      parameters:
      - description: Specify a policy id
        explode: false
        in: path
        name: policy_id
        required: true
        schema:
          $ref: '#/components/schemas/Policy_id'
        style: simple
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              name: wazuhPolicy
              policy:
                actions:
                - agent:delete
                resources:
                - agent:id:001
                - agent:id:002
                - agent:id:003
                effect: allow
            schema:
              $ref: '#/components/schemas/PoliciesRequest_no_required'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 100
                    name: TestWazuhPolicy
                    policy:
                      actions:
                      - security:delete
                      resources:
                      - user:id:*
                      effect: deny
                    roles: []
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Policy was successfully updated
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_get_policies_200_response'
          description: Information of policy modified
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Update policy
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:update'
  /security/users/{user_id}/roles:
    delete:
      description: Delete a specified relation user-roles
      operationId: api.controllers.security_controller.remove_user_role
      parameters:
      - description: User ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/User_id'
        style: simple
      - description: "List of role IDs (separated by comma), use the keyword 'all'\
          \ to select all roles"
        explode: true
        in: query
        name: role_ids
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Role_id_DELETE'
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 100
                    username: TestWazuhUsername
                    allow_run_as: false
                    roles: []
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All roles were unlinked from user TestWazuhUsername
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_set_user_role_200_response'
          description: Role information
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Remove roles from user
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:delete'
    post:
      description: "Create a specified relation role-policy, one user may have multiples\
        \ roles"
      operationId: api.controllers.security_controller.set_user_role
      parameters:
      - description: User ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/User_id'
        style: simple
      - description: List of role IDs (separated by comma)
        explode: true
        in: query
        name: role_ids
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Role_id_DELETE'
          type: array
        style: form
      - description: Security position for roles/policies
        explode: true
        in: query
        name: position
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 100
                    username: TestWazuhUsername
                    allow_run_as: false
                    roles:
                    - 1
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All roles were linked to TestWazuhUsername
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_security_controller_set_user_role_200_response'
          description: Role information
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Add roles to user
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:update'
  /security/roles/{role_id}/policies:
    delete:
      description: Delete a specified relation role-policy
      operationId: api.controllers.security_controller.remove_role_policy
      parameters:
      - description: Specify a role ID
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          $ref: '#/components/schemas/Role_id'
        style: simple
      - description: "List of policy IDs (separated by comma), use the keyword 'all'\
          \ to select all policies"
        explode: true
        in: query
        name: policy_ids
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Policy_id_DELETE'
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 100
                    name: TestWazuhRole
                    policies: []
                    users: []
                    rules: []
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: All policies were unlinked from role 100
                error: 0
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
          description: Role information
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Remove policies from role
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:delete'
    post:
      description: "Create a specified relation role-policy, one role may have multiples\
        \ policies"
      operationId: api.controllers.security_controller.set_role_policy
      parameters:
      - description: Specify a role ID
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          $ref: '#/components/schemas/Role_id'
        style: simple
      - description: List of policy IDs
        explode: true
        in: query
        name: policy_ids
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Policy_id'
          type: array
        style: form
      - description: Security position for roles/policies
        explode: true
        in: query
        name: position
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 100
                    name: TestWazuhRole
                    policies:
                    - 100
                    users: []
                    rules: []
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: All policies were linked to role 100
                error: 0
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
          description: Role information
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Add policies to role
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:update'
  /security/roles/{role_id}/rules:
    delete:
      description: Delete a specific role-rule relation
      operationId: api.controllers.security_controller.remove_role_rule
      parameters:
      - description: Specify a role ID
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          $ref: '#/components/schemas/Role_id'
        style: simple
      - description: "List of rule IDs (separated by comma), use the keyword 'all'\
          \ to select all rules"
        explode: true
        in: query
        name: rule_ids
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Security_rule_id_DELETE'
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 100
                    name: TestWazuhRole
                    policies: []
                    users: []
                    rules: []
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: All security rules were unlinked from role 100
                error: 0
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
          description: Role information
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Remove security rules from role
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:delete'
    post:
      description: Create a specific role-rule relation. One role may have multiple
        security rules
      operationId: api.controllers.security_controller.set_role_rule
      parameters:
      - description: Specify a role ID
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          $ref: '#/components/schemas/Role_id'
        style: simple
      - description: List of rule IDs (separated by comma)
        explode: true
        in: query
        name: rule_ids
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Security_rule_id'
          type: array
        style: form
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - id: 100
                    name: TestWazuhRole
                    policies: []
                    users: []
                    rules:
                    - 100
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All security rules were linked to role 100
                error: 0
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
          description: Role information
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Add security rules to role
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:update'
  /overview/agents:
    get:
      description: Return a dictionary with a full agents overview
      operationId: api.controllers.overview_controller.get_overview_agents
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  nodes:
                  - node_name: worker1
                    count: 1
                  - node_name: worker2
                    count: 1
                  - node_name: master-node
                    count: 1
                  groups:
                  - name: default
                    count: 6
                    mergedSum: 9a016508cea1e997ab8569f5cfab30f5
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                  agent_os:
                  - os:
                      name: Ubuntu
                      platform: ubuntu
                      version: 20.04.02 LTS
                    count: 6
                  agent_status:
                    active: 6
                    disconected: 0
                    never_connected: 0
                    pending: 0
                    total: 6
                  agent_version:
                  - version: Wazuh v4.3.0
                    count: 6
                  last_registered_agent:
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: "20"
                      minor: "04"
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |77000bae7bd0 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.02 LTS
                    node_name: worker1
                    lastKeepAlive: 2021-05-31T10:56:52Z
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    status: active
                    ip: 172.18.0.7
                    group:
                    - default
                    name: 77000bae7bd0
                    registerIP: any
                    dateAdd: 2021-05-31T09:49:28Z
                    manager: wazuh-worker1
                    id: "004"
                    mergedSum: 9a016508cea1e997ab8569f5cfab30f5
                    version: Wazuh v4.3.0
                    status_code: 0
                    group_config_status: active
                error: 0
              schema:
                $ref: '#/components/schemas/api_controllers_overview_controller_get_overview_agents_200_response'
          description: Overview of agents
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get agents overview
      tags:
      - Overview
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
      - $ref: '#/x-rbac-catalog/actions/group:read'
  /security/config:
    delete:
      description: Replaces the security configuration with the original one
      operationId: api.controllers.security_controller.delete_security_config
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                message: Configuration was successfully updated
                error: 0
              schema:
                type: object
          description: Configuration successfully updated
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Restore default security config
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:update_config'
    get:
      description: Return the security configuration in JSON format
      operationId: api.controllers.security_controller.get_security_config
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  auth_token_exp_timeout: 900
                  rbac_mode: white
                error: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Current security configuration
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "403":
          content:
            application/json:
              example:
                title: Permission Denied
                detail: "Permission denied: Resource type: *:*"
                remediation: "Please, make sure you have permissions to execute the\
                  \ current request. For more information on how to set up permissions,\
                  \ please visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
                error: 4000
                dapi_errors:
                  unknown-node:
                    error: "Permission denied: Resource type: *:*"
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Response to report a permission denied request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Get security config
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:read_config'
    put:
      description: Update the security configuration with the data contained in the
        API request
      operationId: api.controllers.security_controller.put_security_config
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityConfiguration'
      responses:
        "200":
          content:
            application/json:
              example:
                message: Configuration was successfully updated
                error: 0
              schema:
                type: object
          description: Configuration successfully updated
        "400":
          content:
            application/json:
              example:
                title: Bad Request
                detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
                  \ 'format' in schema['items']: {'description': '{parameter_name}',\
                  \ 'format': '{expected_format}', 'minLength': {expected_length},\
                  \ 'type': '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report a bad request
        "401":
          content:
            application/json:
              example:
                title: Unauthorized
                detail: No authorization token provided
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an unauthorized request
        "405":
          content:
            application/json:
              example:
                title: Method Not Allowed
                detail: Specified method is invalid for this resource
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid HTTP method
        "406":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: The body type is not the one specified in the content-type
                error: 6002
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Response to report an invalid content-type
        "413":
          content:
            application/json:
              example:
                title: Request Entity Too Large
                detail: "Maximum request body size 1048576 exceeded, actual body size\
                  \ 1225245"
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum request body size exceeded
        "429":
          content:
            application/json:
              example:
                title: Wazuh Error
                detail: Maximum number of requests per minute reached
                remediation: "This limit can be changed in api.yaml file. More information\
                  \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
                code: 6001
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maximum number of request per minute reached
      summary: Update security config
      tags:
      - Security
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/security:update_config'
  /tasks/status:
    get:
      description: Returns all available information about the specified tasks
      operationId: api.controllers.task_controller.get_tasks_status
      parameters:
      - description: Show results in human-readable format
        explode: true
        in: query
        name: pretty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Disable timeout response
        explode: true
        in: query
        name: wait_for_complete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: First element to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of elements to return. Although up to 100.000\
          \ can be specified, it is recommended not to exceed 500 elements. Responses\
          \ may be slower the more this number is exceeded. "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
        style: form
      - description: Query to filter results by. For example q=&quot;status=active&quot;
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: "Look for elements containing the specified string. To obtain\
          \ a complementary search, use '-' at the beginning"
        explode: true
        in: query
        name: search
        required: false
        schema:
          format: search
          type: string
        style: form
      - description: "Select which fields to return (separated by comma). Use '.'\
          \ for nested fields. For example, '{field1: field2}' may be selected with\
          \ 'field1.field2'"
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            format: names
            type: string
          type: array
        style: form
      - description: "Sort the collection by a field or fields (separated by comma).\
          \ Use +/- at the beggining to list in ascending or descending order. Use\
          \ '.' for nested fields. For example, '{field1: field2}' may be selected\
          \ with 'field1.field2'"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          format: sort
          type: string
        style: form
      - description: "List of agent IDs (separated by comma), all agents selected\
          \ by default if not specified"
        explode: true
        in: query
        name: agents_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AgentID'
          type: array
        style: form
      - description: List of task IDs (separated by comma)
        explode: true
        in: query
        name: tasks_list
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Task_id'
          type: array
        style: form
      - description: Filter by command
        explode: true
        in: query
        name: command
        required: false
        schema:
          format: symbols_alphanumeric_param
          type: string
        style: form
      - description: Show results filtered by node
        explode: true
        in: query
        name: node
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Show results filtered by module
        explode: true
        in: query
        name: module
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      - description: Filter by status
        explode: true
        in: query
        name: status
        required: false
        schema:
          format: alphanumeric
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_items:
                  - message: Success
                    agent: 2
                    task_id: 1
                    node: worker2
                    module: upgrade_module
                    command: upgrade
                    status: In progress
                    create_time: 2020-11-10T11:55:33Z
                    update_time: 2020-11-10T11:55:36Z
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All specified task's status were returned
                error: 0
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Tasks's status
      summary: List tasks
      tags:
      - Tasks
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/task:status'
components:
  parameters:
    agent_id:
      description: Agent ID. All possible values from 000 onwards
      explode: false
      in: path
      name: agent_id
      required: true
      schema:
        $ref: '#/components/schemas/AgentID'
      style: simple
    agent_name:
      description: "Agent name. The special characters allowed are: '-','_','.' "
      explode: true
      in: query
      name: agent_name
      required: true
      schema:
        format: names
        maxLength: 128
        type: string
      style: form
    benchmark:
      description: Filter by benchmark type
      explode: true
      in: query
      name: benchmark
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    command:
      description: Filter by command
      explode: true
      in: query
      name: command
      required: false
      schema:
        format: symbols_alphanumeric_param
        type: string
      style: form
    component:
      description: Selected agent's component
      explode: false
      in: path
      name: component
      required: true
      schema:
        enum:
        - agent
        - agentless
        - analysis
        - auth
        - com
        - csyslog
        - integrator
        - logcollector
        - mail
        - monitor
        - request
        - syscheck
        - wazuh-db
        - wmodules
        type: string
      style: simple
    configuration:
      description: |
        <p>Selected agent's configuration to read. The configuration to read depends on the selected component.
        The following table shows all available combinations of component and configuration values:</p>
        <table class="table table-striped table-bordered">
        <thead>
        <tr>
        <th>Component</th>
        <th>Configuration</th>
        <th>Tag</th>
        </tr>
        </thead>
        <tbody>
        <tr>
        <td>agent</td>
        <td>client</td>
        <td><code>&lt;client&gt;</code></td>
        </tr>
        <tr>
        <td>agent</td>
        <td>buffer</td>
        <td><code>&lt;client_buffer&gt;</code></td>
        </tr>
        <tr>
        <td>agent</td>
        <td>labels</td>
        <td><code>&lt;labels&gt;</code></td>
        </tr>
        <tr>
        <td>agent</td>
        <td>internal</td>
        <td><code>&lt;agent&gt;</code>, <code>&lt;monitord&gt;</code>, <code>&lt;remoted&gt;</code></td>
        </tr>
        <tr>
        <td>agent</td>
        <td>anti_tampering</td>
        <td><code>&lt;anti_tampering&gt;</code></td>
        </tr>
        <tr>
        <td>agentless</td>
        <td>agentless</td>
        <td><code>&lt;agentless&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>global</td>
        <td><code>&lt;global&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>active_response</td>
        <td><code>&lt;active-response&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>alerts</td>
        <td><code>&lt;alerts&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>command</td>
        <td><code>&lt;command&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>rules</td>
        <td><code>&lt;rule&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>decoders</td>
        <td><code>&lt;decoder&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>internal</td>
        <td><code>&lt;analysisd&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>rule_test</td>
        <td><code>&lt;rule_test&gt;</code></td>
        </tr>
        <tr>
        <td>auth</td>
        <td>auth</td>
        <td><code>&lt;auth&gt;</code></td>
        </tr>
        <tr>
        <td>com</td>
        <td>active-response</td>
        <td><code>&lt;active-response&gt;</code></td>
        </tr>
        <tr>
        <td>com</td>
        <td>logging</td>
        <td><code>&lt;logging&gt;</code></td>
        </tr>
        <tr>
        <td>com</td>
        <td>internal</td>
        <td><code>&lt;execd&gt;</code></td>
        </tr>
        <tr>
        <td>com</td>
        <td>cluster</td>
        <td><code>&lt;cluster&gt;</code></td>
        </tr>
        <tr>
        <td>csyslog</td>
        <td>csyslog</td>
        <td><code>&lt;csyslog_output&gt;</code></td>
        </tr>
        <tr>
        <td>integrator</td>
        <td>integration</td>
        <td><code>&lt;integration&gt;</code></td>
        </tr>
        <tr>
        <td>logcollector</td>
        <td>localfile</td>
        <td><code>&lt;localfile&gt;</code></td>
        </tr>
        <tr>
        <td>logcollector</td>
        <td>socket</td>
        <td><code>&lt;socket&gt;</code></td>
        </tr>
        <tr>
        <td>logcollector</td>
        <td>internal</td>
        <td><code>&lt;logcollector&gt;</code></td>
        </tr>
        <tr>
        <td>mail</td>
        <td>global</td>
        <td><code>&lt;global&gt;&lt;email...&gt;</code></td>
        </tr>
        <tr>
        <td>mail</td>
        <td>alerts</td>
        <td><code>&lt;email_alerts&gt;</code></td>
        </tr>
        <tr>
        <td>mail</td>
        <td>internal</td>
        <td><code>&lt;maild&gt;</code></td>
        </tr>
        <tr>
        <td>monitor</td>
        <td>global</td>
        <td><code>&lt;global&gt;</code></td>
        </tr>
        <tr>
        <td>monitor</td>
        <td>internal</td>
        <td><code>&lt;monitord&gt;</code></td>
        </tr>
        <tr>
        <td>monitor</td>
        <td>reports</td>
        <td><code>&lt;reports&gt;</code></td>
        </tr>
        <tr>
        <td>request</td>
        <td>global</td>
        <td><code>&lt;global&gt;</code></td>
        </tr>
        <tr>
        <td>request</td>
        <td>remote</td>
        <td><code>&lt;remote&gt;</code></td>
        </tr>
        <tr>
        <td>request</td>
        <td>internal</td>
        <td><code>&lt;remoted&gt;</code></td>
        </tr>
        <tr>
        <td>syscheck</td>
        <td>syscheck</td>
        <td><code>&lt;syscheck&gt;</code></td>
        </tr>
        <tr>
        <td>syscheck</td>
        <td>rootcheck</td>
        <td><code>&lt;rootcheck&gt;</code></td>
        </tr>
        <tr>
        <td>syscheck</td>
        <td>internal</td>
        <td><code>&lt;syscheck&gt;</code>, <code>&lt;rootcheck&gt;</code></td>
        </tr>
        <tr>
        <td>wazuh-db</td>
        <td>internal</td>
        <td><code>&lt;wazuh_db&gt;</code></td>
        </tr>
        <tr>
        <td>wazuh-db</td>
        <td>wdb</td>
        <td><code>&lt;wdb&gt;</code></td>
        </tr>
        <tr>
        <td>wmodules</td>
        <td>wmodules</td>
        <td><code>&lt;wodle&gt;</code></td>
        </tr>
        </tbody>
        </table>
      explode: false
      in: path
      name: configuration
      required: true
      schema:
        enum:
        - client
        - buffer
        - labels
        - internal
        - anti_tampering
        - agentless
        - global
        - active_response
        - alerts
        - command
        - rules
        - decoders
        - auth
        - logging
        - reports
        - active-response
        - cluster
        - csyslog
        - integration
        - localfile
        - socket
        - remote
        - syscheck
        - rootcheck
        - wdb
        - wmodules
        - rule_test
        type: string
      style: simple
    daemons_list:
      description: "List of daemon names (separated by comma), all daemons selected\
        \ by default if not specified"
      explode: true
      in: query
      name: daemons_list
      required: false
      schema:
        items:
          enum:
          - wazuh-analysisd
          - wazuh-remoted
          - wazuh-db
          type: string
        type: array
      style: form
    daemons_list_agents:
      description: "List of daemon names (separated by comma), all daemons selected\
        \ by default if not specified"
      explode: true
      in: query
      name: daemons_list
      required: false
      schema:
        items:
          enum:
          - wazuh-analysisd
          - wazuh-remoted
          type: string
        type: array
      style: form
    decoder_name:
      description: Decoder name
      explode: true
      in: query
      name: decoder_names
      required: false
      schema:
        items:
          format: names
          type: string
        type: array
      style: form
    description:
      description: Filter by policy description
      explode: true
      in: query
      name: description
      required: false
      schema:
        format: alphanumeric_symbols
        type: string
      style: form
    directory:
      description: Filter by directory
      explode: true
      in: query
      name: directory
      required: false
      schema:
        type: string
      style: form
    downloadFile:
      description: Filename to download
      explode: false
      in: path
      name: filename
      required: true
      schema:
        format: alphanumeric
        type: string
      style: simple
    error:
      description: Filter by encountered errors
      explode: true
      in: query
      name: error
      required: false
      schema:
        format: int32
        minimum: 0
        type: integer
      style: form
    fail:
      description: Filter by failed checks
      explode: true
      in: query
      name: fail
      required: false
      schema:
        format: int32
        minimum: 0
        type: integer
      style: form
    fields:
      description: List of fields affecting the operation
      explode: true
      in: query
      name: fields
      required: false
      schema:
        items:
          format: names
          type: string
        type: array
      style: form
    filename:
      description: Filter by filename
      explode: true
      in: query
      name: filename
      required: false
      schema:
        items:
          format: alphanumeric
          type: string
        type: array
      style: form
    full_path_filter:
      description: Filter by full path
      explode: true
      in: query
      name: file
      required: false
      schema:
        format: paths
        type: string
      style: form
    file_name:
      description: Filename
      explode: false
      in: path
      name: file_name
      required: true
      schema:
        format: alphanumeric
        type: string
      style: simple
    file_format:
      description: Filter by file format. For example 'deb' will output deb files
      explode: true
      in: query
      name: format
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    group_id:
      description: Group ID. (Name of the group)
      explode: false
      in: path
      name: group_id
      required: true
      schema:
        $ref: '#/components/schemas/GroupID'
      style: simple
    group_id_query:
      description: Group ID. (Name of the group)
      explode: true
      in: query
      name: group_id
      required: true
      schema:
        $ref: '#/components/schemas/GroupID'
      style: form
    agent_group:
      description: Filter by group of agents
      explode: true
      in: query
      name: group
      required: false
      schema:
        $ref: '#/components/schemas/GroupID'
      style: form
    hash:
      description: Select algorithm to generate the returned checksums
      explode: true
      in: query
      name: hash
      required: false
      schema:
        enum:
        - md5
        - sha1
        - sha224
        - sha256
        - sha384
        - sha512
        - blake2b
        - blake2s
        - sha3_224
        - sha3_256
        - sha3_384
        - sha3_512
        type: string
      style: form
    hotfix:
      description: Filter by hotfix
      explode: true
      in: query
      name: hotfix
      required: false
      schema:
        type: string
      style: form
    limit:
      description: "Maximum number of elements to return. Although up to 100.000 can\
        \ be specified, it is recommended not to exceed 500 elements. Responses may\
        \ be slower the more this number is exceeded. "
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 500
        format: int32
        maximum: 100000
        minimum: 1
        type: integer
      style: form
    log_lines:
      description: Maximum number of lines to return.
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 500
        format: int32
        maximum: 500
        minimum: 1
        type: integer
      style: form
    list_filename_path:
      description: Filename (CDB list) to get/edit/delete.
      explode: false
      in: path
      name: filename
      required: true
      schema:
        format: cdb_filename_path
        type: string
      style: simple
    agents_list:
      description: "List of agent IDs (separated by comma), all agents selected by\
        \ default if not specified"
      explode: true
      in: query
      name: agents_list
      required: false
      schema:
        items:
          $ref: '#/components/schemas/AgentID'
        type: array
      style: form
    agents_list_all:
      description: "List of agent IDs (separated by comma), use the keyword `all`\
        \ to select all agents"
      explode: true
      in: query
      name: agents_list
      required: true
      schema:
        items:
          $ref: '#/components/schemas/AgentIDListAll'
        type: array
      style: form
    groups_list:
      description: "List of group IDs (separated by comma), all groups selected by\
        \ default if not specified"
      explode: true
      in: query
      name: groups_list
      required: false
      schema:
        items:
          $ref: '#/components/schemas/GroupID'
        type: array
      style: form
    groups_list_all:
      description: "List of group IDs (separated by comma), use the keyword 'all'\
        \ to select all groups"
      explode: true
      in: query
      name: groups_list
      required: true
      schema:
        items:
          $ref: '#/components/schemas/GroupIDListAll'
        type: array
      style: form
    node:
      description: Show results filtered by node
      explode: true
      in: query
      name: node
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    nodes_list:
      description: "List of node IDs (separated by comma), all nodes selected by default\
        \ if not specified"
      explode: true
      in: query
      name: nodes_list
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    module:
      description: Show results filtered by module
      explode: true
      in: query
      name: module
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    manager_host:
      description: Filter by manager hostname where agents are connected to
      explode: true
      in: query
      name: manager
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    mitre_mitigation_ids:
      description: List of MITRE's mitigations IDs (separated by comma)
      explode: true
      in: query
      name: mitigation_ids
      required: false
      schema:
        items:
          $ref: '#/components/schemas/Mitre_mitigation_id'
        type: array
      style: form
    mitre_reference_ids:
      description: List of MITRE's references IDs (separated by comma)
      explode: true
      in: query
      name: reference_ids
      required: false
      schema:
        items:
          $ref: '#/components/schemas/Mitre_reference_id'
        type: array
      style: form
    mitre_tactic_ids:
      description: List of MITRE's tactics IDs (separated by comma)
      explode: true
      in: query
      name: tactic_ids
      required: false
      schema:
        items:
          $ref: '#/components/schemas/Mitre_tactic_id'
        type: array
      style: form
    mitre_group_ids:
      description: List of MITRE's group IDs (separated by comma)
      explode: true
      in: query
      name: group_ids
      required: false
      schema:
        items:
          $ref: '#/components/schemas/Mitre_group_id'
        type: array
      style: form
    mitre_software_ids:
      description: List of MITRE's software IDs (separated by comma)
      explode: true
      in: query
      name: software_ids
      required: false
      schema:
        items:
          $ref: '#/components/schemas/Mitre_software_id'
        type: array
      style: form
    mitre_technique_ids:
      description: List of MITRE's techniques IDs (separated by comma)
      explode: true
      in: query
      name: technique_ids
      required: false
      schema:
        items:
          $ref: '#/components/schemas/Mitre_technique_id'
        type: array
      style: form
    name:
      description: Filter by name
      explode: true
      in: query
      name: name
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    sca_name:
      description: Filter by policy name
      explode: true
      in: query
      name: name
      required: false
      schema:
        type: string
      style: form
    notchecked:
      description: Filter by not checked
      explode: true
      in: query
      name: notchecked
      required: false
      schema:
        format: int32
        minimum: 0
        type: integer
      style: form
    offset:
      description: First element to return in the collection
      explode: true
      in: query
      name: offset
      required: false
      schema:
        default: 0
        format: int32
        minimum: 0
        type: integer
      style: form
    olderThanParam:
      description: "Filter out agents whose time lapse from last keep alive signal\
        \ is longer than specified. Time in seconds, â€˜[n_days]dâ€™, â€˜[n_hours]hâ€™, â€˜\
        [n_minutes]mâ€™ or â€˜[n_seconds]sâ€™. For never_connected agents, uses the register\
        \ date. For example, `7d`, `10s` and `10` are valid values. If no time unit\
        \ is specified, seconds are used"
      explode: true
      in: query
      name: older_than
      required: false
      schema:
        format: timeframe
        type: string
      style: form
    pass:
      description: Filter by passed checks
      explode: true
      in: query
      name: pass
      required: false
      schema:
        format: int32
        minimum: 0
        type: integer
      style: form
    phase_name:
      description: Show results filtered by phase
      explode: true
      in: query
      name: phase_name
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    platform_name:
      description: Show results filtered by platform
      explode: true
      in: query
      name: platform_name
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    pretty:
      description: Show results in human-readable format
      explode: true
      in: query
      name: pretty
      required: false
      schema:
        default: false
        type: boolean
      style: form
    process:
      description: Filter by process name
      explode: true
      in: query
      name: process
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    profile:
      description: Filter by evaluated profile
      explode: true
      in: query
      name: profile
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    policy_id:
      description: Filter by policy id
      explode: false
      in: path
      name: policy_id
      required: true
      schema:
        format: alphanumeric
        type: string
      style: simple
    policy_id_rbac:
      description: Specify a policy id
      explode: false
      in: path
      name: policy_id
      required: true
      schema:
        $ref: '#/components/schemas/Policy_id'
      style: simple
    policy_ids_rbac:
      description: List of policy IDs
      explode: true
      in: query
      name: policy_ids
      required: false
      schema:
        items:
          $ref: '#/components/schemas/Policy_id'
        type: array
      style: form
    policy_ids_rbac_delete:
      description: "List of policy IDs (separated by comma), use the keyword 'all'\
        \ to select all policies"
      explode: true
      in: query
      name: policy_ids
      required: true
      schema:
        items:
          $ref: '#/components/schemas/Policy_id_DELETE'
        type: array
      style: form
    policy_ids_rbac_required:
      description: List of policy IDs
      explode: true
      in: query
      name: policy_ids
      required: true
      schema:
        items:
          $ref: '#/components/schemas/Policy_id'
        type: array
      style: form
    endpoint:
      description: Look for the RBAC actions which are related to the specified endpoint
      explode: true
      in: query
      name: endpoint
      required: false
      schema:
        type: string
      style: form
    purge:
      description: Permanently delete an agent from the key store
      explode: true
      in: query
      name: purge
      required: false
      schema:
        default: false
        type: boolean
      style: form
    query:
      description: Query to filter results by. For example q=&quot;status=active&quot;
      explode: true
      in: query
      name: q
      required: false
      schema:
        type: string
      style: form
    rationale:
      description: Filter by rationale
      explode: true
      in: query
      name: rationale
      required: false
      schema:
        format: alphanumeric_symbols
        type: string
      style: form
    raw:
      description: Format response in plain text
      explode: true
      in: query
      name: raw
      required: false
      schema:
        type: boolean
      style: form
    registry:
      description: Filter by registry
      explode: true
      in: query
      name: registry
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    references:
      description: Filter by references
      explode: true
      in: query
      name: references
      required: false
      schema:
        type: string
      style: form
    remediation:
      description: Filter by remediation
      explode: true
      in: query
      name: remediation
      required: false
      schema:
        format: alphanumeric_symbols
        type: string
      style: form
    rule_requirement:
      explode: false
      in: path
      name: requirement
      required: true
      schema:
        enum:
        - pci_dss
        - gdpr
        - hipaa
        - nist-800-53
        - gpg13
        - tsc
        - mitre
        type: string
      style: simple
    result:
      description: Filter by result
      explode: true
      in: query
      name: result
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    condition:
      description: Filter by condition
      explode: true
      in: query
      name: condition
      required: false
      schema:
        type: string
      style: form
    role_id:
      description: Specify a role ID
      explode: false
      in: path
      name: role_id
      required: true
      schema:
        $ref: '#/components/schemas/Role_id'
      style: simple
    role_ids:
      description: List of role IDs (separated by comma)
      explode: true
      in: query
      name: role_ids
      required: false
      schema:
        items:
          $ref: '#/components/schemas/Role_id'
        type: array
      style: form
    role_ids_delete:
      description: "List of role IDs (separated by comma), use the keyword 'all' to\
        \ select all roles"
      explode: true
      in: query
      name: role_ids
      required: true
      schema:
        items:
          $ref: '#/components/schemas/Role_id_DELETE'
        type: array
      style: form
    role_ids_required:
      description: List of role IDs (separated by comma)
      explode: true
      in: query
      name: role_ids
      required: true
      schema:
        items:
          $ref: '#/components/schemas/Role_id_DELETE'
        type: array
      style: form
    security_rule_id:
      description: Specify a rule ID
      explode: false
      in: path
      name: rule_id
      required: true
      schema:
        $ref: '#/components/schemas/Security_rule_id'
      style: simple
    security_rule_ids:
      description: List of rule IDs (separated by comma)
      explode: true
      in: query
      name: rule_ids
      required: false
      schema:
        items:
          $ref: '#/components/schemas/Security_rule_id'
        type: array
      style: form
    security_rule_ids_required:
      description: List of rule IDs (separated by comma)
      explode: true
      in: query
      name: rule_ids
      required: true
      schema:
        items:
          $ref: '#/components/schemas/Security_rule_id'
        type: array
      style: form
    security_rule_ids_delete:
      description: "List of rule IDs (separated by comma), use the keyword 'all' to\
        \ select all rules"
      explode: true
      in: query
      name: rule_ids
      required: true
      schema:
        items:
          $ref: '#/components/schemas/Security_rule_id_DELETE'
        type: array
      style: form
    security_position:
      description: Security position for roles/policies
      explode: true
      in: query
      name: position
      required: false
      schema:
        minimum: 0
        type: integer
      style: form
    tasks_list:
      description: List of task IDs (separated by comma)
      explode: true
      in: query
      name: tasks_list
      required: false
      schema:
        items:
          $ref: '#/components/schemas/Task_id'
        type: array
      style: form
    reason:
      description: Filter by reason
      explode: true
      in: query
      name: reason
      required: false
      schema:
        format: alphanumeric_symbols
        type: string
      style: form
    rule_ids:
      description: List of rule IDs
      explode: true
      in: query
      name: rule_ids
      required: false
      schema:
        items:
          format: int32
          minimum: 1
          type: integer
        type: array
      style: form
    score:
      description: Filter by final score
      explode: true
      in: query
      name: score
      required: false
      schema:
        format: int32
        minimum: 0
        type: integer
      style: form
    search:
      description: "Look for elements containing the specified string. To obtain a\
        \ complementary search, use '-' at the beginning"
      explode: true
      in: query
      name: search
      required: false
      schema:
        format: search
        type: string
      style: form
    select:
      description: "Select which fields to return (separated by comma). Use '.' for\
        \ nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'"
      explode: true
      in: query
      name: select
      required: false
      schema:
        items:
          format: names
          type: string
        type: array
      style: form
    sort:
      description: "Sort the collection by a field or fields (separated by comma).\
        \ Use +/- at the beggining to list in ascending or descending order. Use '.'\
        \ for nested fields. For example, '{field1: field2}' may be selected with\
        \ 'field1.field2'"
      explode: true
      in: query
      name: sort
      required: false
      schema:
        format: sort
        type: string
      style: form
    stats_component:
      description: Selected component stats
      explode: false
      in: path
      name: component
      required: true
      schema:
        enum:
        - logcollector
        - agent
        type: string
      style: simple
    status:
      description: Filter by status
      explode: true
      in: query
      name: status
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    statusAgentParam:
      description: Filter by agent status (use commas to enter multiple statuses)
      explode: true
      in: query
      name: status
      required: false
      schema:
        items:
          enum:
          - active
          - pending
          - never_connected
          - disconnected
          type: string
        minItems: 1
        type: array
      style: form
    statusDeleteAgentParam:
      description: Filter by agent status (use commas to enter multiple statuses)
      explode: true
      in: query
      name: status
      required: true
      schema:
        items:
          enum:
          - all
          - active
          - pending
          - never_connected
          - disconnected
          type: string
        minItems: 1
        type: array
      style: form
    statusRLDParam:
      description: Filter by list status. Use commas to enter multiple statuses
      explode: true
      in: query
      name: status
      required: false
      schema:
        enum:
        - enabled
        - disabled
        - all
        minItems: 1
        type: string
      style: form
    title:
      description: Filter by title
      explode: true
      in: query
      name: title
      required: false
      schema:
        format: alphanumeric_symbols
        type: string
      style: form
    logtest_token:
      description: Token of the logtest saved session
      explode: false
      in: path
      name: token
      required: true
      schema:
        format: alphanumeric
        type: string
      style: simple
    type_agents:
      description: Type of file
      explode: true
      in: query
      name: type
      required: false
      schema:
        items:
          enum:
          - conf
          - rootkit_files
          - rootkit_trojans
          - rcl
          type: string
        type: array
      style: form
    type_syscollector:
      description: Type of network
      explode: true
      in: query
      name: type
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    typesys:
      description: Type of interface
      explode: true
      in: query
      name: type
      required: false
      schema:
        type: string
      style: form
    allow_run_as:
      description: Value for the allow_run_as flag
      explode: true
      in: query
      name: allow_run_as
      required: false
      schema:
        default: false
        type: boolean
      style: form
    user_ids:
      description: List of user IDs (separated by comma)
      explode: true
      in: query
      name: user_ids
      required: false
      schema:
        items:
          $ref: '#/components/schemas/User_id'
        type: array
      style: form
    user_ids_delete:
      description: "List of user IDs (separated by comma), use the keyword 'all' to\
        \ select all users"
      explode: true
      in: query
      name: user_ids
      required: true
      schema:
        items:
          $ref: '#/components/schemas/User_id_DELETE'
        type: array
      style: form
    user_id_required:
      description: User ID
      explode: false
      in: path
      name: user_id
      required: true
      schema:
        $ref: '#/components/schemas/User_id'
      style: simple
    unknown:
      description: Filter by unknown results
      explode: true
      in: query
      name: unknown
      required: false
      schema:
        format: int32
        type: integer
      style: form
    version:
      description: "Filter by agents version using one of the following formats: 'X.Y.Z',\
        \ 'vX.Y.Z', 'wazuh X.Y.Z' or 'wazuh vX.Y.Z'. For example: '4.4.0'"
      explode: true
      in: query
      name: version
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    wait_for_complete:
      description: Disable timeout response
      explode: true
      in: query
      name: wait_for_complete
      required: false
      schema:
        default: false
        type: boolean
      style: form
    node_type:
      description: Filter by node type
      explode: true
      in: query
      name: type
      required: false
      schema:
        enum:
        - worker
        - master
        type: string
      style: form
    node_id:
      description: Cluster node name
      explode: false
      in: path
      name: node_id
      required: true
      schema:
        format: names
        type: string
      style: simple
    node_name:
      description: Filter by node name
      explode: true
      in: query
      name: node_name
      required: false
      schema:
        format: names
        type: string
      style: form
    section:
      description: Indicates the wazuh configuration section
      explode: true
      in: query
      name: section
      required: false
      schema:
        enum:
        - active-response
        - agentless
        - alerts
        - auth
        - client
        - client_buffer
        - cluster
        - command
        - database_output
        - email_alerts
        - global
        - integration
        - labels
        - localfile
        - logging
        - remote
        - reports
        - rootcheck
        - ruleset
        - sca
        - socket
        - syscheck
        - syslog_output
        - vulnerability-detection
        - indexer
        - aws-s3
        - azure-logs
        - cis-cat
        - docker-listener
        - open-scap
        - osquery
        - syscollector
        type: string
      style: form
    field:
      description: "Indicate a section child. E.g, fields for *ruleset* section are:\
        \ decoder_dir, rule_dir, etc"
      explode: true
      in: query
      name: field
      required: false
      schema:
        format: names
        type: string
      style: form
    date:
      description: Date to obtain statistical information from. Format YYYY-MM-DD
      explode: true
      in: query
      name: date
      required: false
      schema:
        format: date
        type: string
      style: form
    tag:
      description: Wazuh component that logged the event
      explode: true
      in: query
      name: tag
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    log_level:
      description: Filter by log level
      explode: true
      in: query
      name: level
      required: false
      schema:
        enum:
        - critical
        - debug
        - debug2
        - error
        - info
        - warning
        type: string
      style: form
    get_dirnames_path:
      description: Filter by relative directory name
      explode: true
      in: query
      name: relative_dirname
      required: false
      schema:
        format: get_dirnames_path
        type: string
      style: form
    overwrite:
      description: "If set to false, an exception will be raised when updating contents\
        \ of an already existing filename"
      explode: true
      in: query
      name: overwrite
      required: false
      schema:
        default: false
        type: boolean
      style: form
    group:
      description: Filter by rule group
      explode: true
      in: query
      name: group
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    level:
      description: Filter by rule level. Can be a single level (4) or an interval
        (2-4)
      explode: true
      in: query
      name: level
      required: false
      schema:
        format: range
        type: string
      style: form
    pci_dss:
      description: Filter by PCI_DSS requirement name
      explode: true
      in: query
      name: pci_dss
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    gdpr:
      description: Filter by GDPR requirement
      explode: true
      in: query
      name: gdpr
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    gpg13:
      description: Filter by GPG13 requirement
      explode: true
      in: query
      name: gpg13
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    hipaa:
      description: Filter by HIPAA requirement
      explode: true
      in: query
      name: hipaa
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    nist-800-53:
      description: Filter by NIST-800-53 requirement
      explode: true
      in: query
      name: nist-800-53
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    tsc:
      description: Filters by TSC requirement
      explode: true
      in: query
      name: tsc
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    mitre:
      description: Filters by MITRE technique ID
      explode: true
      in: query
      name: mitre
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    cis:
      description: Filter by CIS requirement
      explode: true
      in: query
      name: cis
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    filetype:
      description: Filter by file type. Registry_key and registry_value types are
        only available in Windows agents
      explode: true
      in: query
      name: type
      required: false
      schema:
        enum:
        - file
        - registry_key
        - registry_value
        type: string
      style: form
    summary:
      description: Return a summary grouping by filename
      explode: true
      in: query
      name: summary
      required: false
      schema:
        default: false
        type: boolean
      style: form
    md5:
      description: Filter files with the specified MD5 checksum
      explode: true
      in: query
      name: md5
      required: false
      schema:
        format: hash
        type: string
      style: form
    sha1:
      description: Filter files with the specified SHA1 checksum
      explode: true
      in: query
      name: sha1
      required: false
      schema:
        format: hash
        type: string
      style: form
    sha256:
      description: Filter files with the specified SHA256 checksum
      explode: true
      in: query
      name: sha256
      required: false
      schema:
        format: hash
        type: string
      style: form
    hashfilter:
      description: "Filter files with the specified hash (md5, sha256 or sha1)"
      explode: true
      in: query
      name: hash
      required: false
      schema:
        format: hash
        type: string
      style: form
    distinct:
      description: Look for distinct values.
      explode: true
      in: query
      name: distinct
      required: false
      schema:
        default: false
        type: boolean
      style: form
    ram.free:
      description: Filter by ram.free
      explode: true
      in: query
      name: ram.free
      required: false
      schema:
        format: int64
        minimum: 0
        type: integer
      style: form
    ram.total:
      description: Filter by ram.total
      explode: true
      in: query
      name: ram.total
      required: false
      schema:
        format: int64
        minimum: 0
        type: integer
      style: form
    cpu.cores:
      description: Filter by cpu.cores
      explode: true
      in: query
      name: cpu.cores
      required: false
      schema:
        format: int32
        minimum: 1
        type: integer
      style: form
    cpu.mhz:
      description: Filter by cpu.mhz
      explode: true
      in: query
      name: cpu.mhz
      required: false
      schema:
        format: float
        minimum: 1
        type: number
      style: form
    cpu.name:
      description: Filter by cpu.name
      explode: true
      in: query
      name: cpu.name
      required: false
      schema:
        type: string
      style: form
    board_serial:
      description: Filter by board_serial
      explode: true
      in: query
      name: board_serial
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    proto:
      description: Filter by IP protocol
      explode: true
      in: query
      name: proto
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    address:
      description: Filter by IP address
      explode: true
      in: query
      name: address
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    broadcast:
      description: Filter by broadcast direction
      explode: true
      in: query
      name: broadcast
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    netmask:
      description: Filter by netmask
      explode: true
      in: query
      name: netmask
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    adapter:
      description: Filter by adapter
      explode: true
      in: query
      name: adapter
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    state:
      description: Filter by state
      explode: true
      in: query
      name: state
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    mtu:
      description: Filter by mtu
      explode: true
      in: query
      name: mtu
      required: false
      schema:
        format: int32
        minimum: 0
        type: integer
      style: form
    tx.packets:
      description: Filter by tx.packets
      explode: true
      in: query
      name: tx.packets
      required: false
      schema:
        format: int32
        minimum: 0
        type: integer
      style: form
    rx.packets:
      description: Filter by rx.packets
      explode: true
      in: query
      name: rx.packets
      required: false
      schema:
        format: int32
        minimum: 0
        type: integer
      style: form
    tx.bytes:
      description: Filter by tx.bytes
      explode: true
      in: query
      name: tx.bytes
      required: false
      schema:
        format: int32
        minimum: 0
        type: integer
      style: form
    rx.bytes:
      description: Filter by rx.bytes
      explode: true
      in: query
      name: rx.bytes
      required: false
      schema:
        format: int32
        minimum: 0
        type: integer
      style: form
    tx.errors:
      description: Filter by tx.errors
      explode: true
      in: query
      name: tx.errors
      required: false
      schema:
        format: int32
        minimum: 0
        type: integer
      style: form
    rx.errors:
      description: Filter by rx.errors
      explode: true
      in: query
      name: rx.errors
      required: false
      schema:
        format: int32
        minimum: 0
        type: integer
      style: form
    tx.dropped:
      description: Filter by tx.dropped
      explode: true
      in: query
      name: tx.dropped
      required: false
      schema:
        format: int32
        minimum: 0
        type: integer
      style: form
    rx.dropped:
      description: Filter by rx.dropped
      explode: true
      in: query
      name: rx.dropped
      required: false
      schema:
        format: int32
        minimum: 0
        type: integer
      style: form
    iface:
      description: Filter by network interface
      explode: true
      in: query
      name: iface
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    gateway:
      description: Filter by network gateway
      explode: true
      in: query
      name: gateway
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    dhcp:
      description: Filter by network dhcp (enabled or disabled)
      explode: true
      in: query
      name: dhcp
      required: false
      schema:
        $ref: '#/components/schemas/DHCPStatus'
      style: form
    os.name:
      description: Filter by OS name
      explode: true
      in: query
      name: os.name
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    os.platform:
      description: Filter by OS platform
      explode: true
      in: query
      name: os.platform
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    architecture:
      description: Filter by architecture
      explode: true
      in: query
      name: architecture
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    os.version:
      description: Filter by OS version
      explode: true
      in: query
      name: os.version
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    release:
      description: Filter by release
      explode: true
      in: query
      name: release
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    vendor:
      description: Filter by vendor
      explode: true
      in: query
      name: vendor
      required: false
      schema:
        type: string
      style: form
    pid:
      description: Filter by pid
      explode: true
      in: query
      name: pid
      required: false
      schema:
        format: numbers
        type: string
      style: form
    protocol:
      description: Filter by protocol
      explode: true
      in: query
      name: protocol
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    local.ip:
      description: Filter by Local IP
      explode: true
      in: query
      name: local.ip
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    local.port:
      description: Filter by Local Port
      explode: true
      in: query
      name: local.port
      required: false
      schema:
        format: numbers
        type: string
      style: form
    remote.ip:
      description: Filter by Remote IP
      explode: true
      in: query
      name: remote.ip
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    tx_queue:
      description: Filter by tx_queue
      explode: true
      in: query
      name: tx_queue
      required: false
      schema:
        format: numbers
        type: string
      style: form
    process_pid:
      description: Filter by process pid
      explode: true
      in: query
      name: pid
      required: false
      schema:
        format: numbers
        type: string
      style: form
    process_state:
      description: Filter by process state
      explode: true
      in: query
      name: state
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    ppid:
      description: Filter by process parent pid
      explode: true
      in: query
      name: ppid
      required: false
      schema:
        format: numbers
        type: string
      style: form
    egroup:
      description: Filter by process egroup
      explode: true
      in: query
      name: egroup
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    euser:
      description: Filter by process euser
      explode: true
      in: query
      name: euser
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    fgroup:
      description: Filter by process fgroup
      explode: true
      in: query
      name: fgroup
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    process_name:
      description: Filter by process name
      explode: true
      in: query
      name: name
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    nlwp:
      description: Filter by process nlwp
      explode: true
      in: query
      name: nlwp
      required: false
      schema:
        format: numbers
        type: string
      style: form
    pgrp:
      description: Filter by process pgrp
      explode: true
      in: query
      name: pgrp
      required: false
      schema:
        format: numbers
        type: string
      style: form
    priority:
      description: Filter by process priority
      explode: true
      in: query
      name: priority
      required: false
      schema:
        format: numbers
        type: string
      style: form
    rgroup:
      description: Filter by process rgroup
      explode: true
      in: query
      name: rgroup
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    ruser:
      description: Filter by process ruser
      explode: true
      in: query
      name: ruser
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    syscheck_arch:
      description: Filter by architecture
      explode: true
      in: query
      name: arch
      required: false
      schema:
        enum:
        - "[x32]"
        - "[x64]"
        type: string
      style: form
    sgroup:
      description: Filter by process sgroup
      explode: true
      in: query
      name: sgroup
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    suser:
      description: Filter by process suser
      explode: true
      in: query
      name: suser
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    package_version:
      description: Filter by package version
      explode: true
      in: query
      name: version
      required: false
      schema:
        type: string
      style: form
    older_than:
      description: "Consider only agents whose last keep alive is older than the specified\
        \ time frame. For never_connected agents, register date is considered instead\
        \ of last keep alive. For example, `7d`, `10s` and `10` are valid values.\
        \ When no time unit is specified, seconds are assumed. Use 0s to select all\
        \ agents"
      explode: true
      in: query
      name: older_than
      required: false
      schema:
        default: 7d
        format: timeframe
        type: string
      style: form
    ip:
      description: "Filter by the IP used by the agent to communicate with the manager.\
        \ If it's not available, it will have the same value as registerIP"
      explode: true
      in: query
      name: ip
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    registerIP:
      description: Filter by the IP used when registering the agent
      explode: true
      in: query
      name: registerIP
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    group_config_status:
      description: Agent groups configuration sync status
      explode: true
      in: query
      name: group_config_status
      required: false
      schema:
        enum:
        - synced
        - not synced
        type: string
      style: form
    force_single_group:
      description: Removes the agent from all groups to which it belongs and assigns
        it to the specified group
      explode: true
      in: query
      name: force_single_group
      required: false
      schema:
        type: boolean
      style: form
    wpk_repo:
      description: WPK repository
      explode: true
      in: query
      name: wpk_repo
      required: false
      schema:
        format: path
        type: string
      style: form
    use_http:
      description: Use http protocol. If it's false use https. By default the value
        is set to false
      explode: true
      in: query
      name: use_http
      required: false
      schema:
        default: false
        type: boolean
      style: form
    upgrade_version:
      description: Wazuh version to upgrade to
      explode: true
      in: query
      name: upgrade_version
      required: false
      schema:
        format: wazuh_version
        type: string
      style: form
    force:
      description: Force upgrade
      explode: true
      in: query
      name: force
      required: false
      schema:
        default: false
        type: boolean
      style: form
    package_type:
      description: "Select package type to use. By default, the manager infers this."
      explode: true
      in: query
      name: package_type
      required: false
      schema:
        enum:
        - rpm
        - deb
        type: string
      style: form
    force_query:
      description: Force query to CTI service
      explode: true
      in: query
      name: force_query
      required: false
      schema:
        default: false
        type: boolean
      style: form
    file_path:
      description: "Full path to the WPK file. The file must be on a folder on the\
        \ Wazuh's installation directory (by default, <code>/var/ossec</code>)"
      explode: true
      in: query
      name: file_path
      required: true
      schema:
        format: wpk_path
        type: string
      style: form
    installer:
      description: Installation script. Default is <code>upgrade.sh</code> or <code>upgrade.bat</code>
        for windows agents
      explode: true
      in: query
      name: installer
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    resource_list:
      description: List of current RBAC's resources.
      explode: true
      in: query
      name: resource
      required: false
      schema:
        enum:
        - '*:*'
        - agent:group
        - agent:id
        - group:id
        - node:id
        - decoder:file
        - list:file
        - rule:file
        - policy:id
        - role:id
        - user:id
        type: string
      style: form
    value.name:
      description: Filter by value name
      explode: true
      in: query
      name: value.name
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    value.type:
      description: Filter by value type
      explode: true
      in: query
      name: value.type
      required: false
      schema:
        format: alphanumeric
        type: string
      style: form
    xml_filename:
      description: Filter by filename of one or more rule or decoder files.
      explode: true
      in: query
      name: filename
      required: false
      schema:
        items:
          format: xml_filename
          type: string
        type: array
      style: form
    xml_filename_path:
      description: Filename (rule or decoder) to download/upload/edit file.
      explode: false
      in: path
      name: filename
      required: true
      schema:
        format: xml_filename_path
        type: string
      style: simple
  responses:
    ResponseError:
      content:
        application/json:
          example:
            title: Bad Request
            detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating\
              \ 'format' in schema['items']: {'description': '{parameter_name}', 'format':\
              \ '{expected_format}', 'minLength': {expected_length}, 'type': '{expected_type}',\
              \ 'x-scope': ['', '#/components/parameters/{parameter_name}']}"
          schema:
            $ref: '#/components/schemas/RequestError'
      description: Response to report a bad request
    PermissionDeniedResponse:
      content:
        application/json:
          example:
            title: Permission Denied
            detail: "Permission denied: Resource type: *:*"
            remediation: "Please, make sure you have permissions to execute the current\
              \ request. For more information on how to set up permissions, please\
              \ visit https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
            error: 4000
            dapi_errors:
              unknown-node:
                error: "Permission denied: Resource type: *:*"
          schema:
            $ref: '#/components/schemas/ApiError'
      description: Response to report a permission denied request
    UnauthorizedResponse:
      content:
        application/json:
          example:
            title: Unauthorized
            detail: No authorization token provided
          schema:
            $ref: '#/components/schemas/RequestError'
      description: Response to report an unauthorized request
    InvalidCredentialsResponse:
      content:
        application/json:
          example:
            title: Unauthorized
            detail: Invalid credentials
          schema:
            $ref: '#/components/schemas/RequestError'
      description: Response to report a problem with authentication
    InvalidHTTPMethodResponse:
      content:
        application/json:
          example:
            title: Method Not Allowed
            detail: Specified method is invalid for this resource
          schema:
            $ref: '#/components/schemas/RequestError'
      description: Response to report an invalid HTTP method
    WrongContentTypeResponse:
      content:
        application/json:
          example:
            title: Wazuh Error
            detail: The body type is not the one specified in the content-type
            error: 6002
          schema:
            $ref: '#/components/schemas/RequestError'
      description: Response to report an invalid content-type
    RequestTooLargeResponse:
      content:
        application/json:
          example:
            title: Request Entity Too Large
            detail: "Maximum request body size 1048576 exceeded, actual body size\
              \ 1225245"
          schema:
            $ref: '#/components/schemas/RequestError'
      description: Maximum request body size exceeded
    TooManyRequestsResponse:
      content:
        application/json:
          example:
            title: Wazuh Error
            detail: Maximum number of requests per minute reached
            remediation: "This limit can be changed in api.yaml file. More information\
              \ here: https://documentation.wazuh.com/4.12/user-manual/api/security/configuration.html"
            code: 6001
          schema:
            $ref: '#/components/schemas/RequestError'
      description: Maximum number of request per minute reached
    ResourceNotFoundResponse:
      content:
        application/json:
          example:
            title: Resource Not Found
            detail: The group does not exist
            remediation: "Please, use `GET /groups` to find all available groups:\
              \ https://documentation.wazuh.com/4.12/user-manual/api/rbac/configuration.html"
            code: 1710
            dapi_errors:
              unknown-node:
                error: The group does not exist
          schema:
            $ref: '#/components/schemas/ApiError'
      description: Resource not found
    UnsupportedMediaTypeResponse:
      content:
        application/json:
          example:
            title: Unsupported media type
            detail: "Invalid Content-type (application/json), expected ['application/octet-stream']"
          schema:
            $ref: '#/components/schemas/ApiError'
      description: Unsupported media type
  schemas:
    ApiResponse:
      example:
        message: message
      properties:
        message:
          description: Human readable description to explain the result of the request
          type: string
      type: object
    SimpleApiError:
      example:
        id:
        - SimpleApiError_id_inner
        - SimpleApiError_id_inner
        error:
          key:
            remediation: remediation
            code: 6
            message: message
      properties:
        error:
          additionalProperties:
            $ref: '#/components/schemas/SimpleApiError_error_value'
          type: object
        id:
          items:
            $ref: '#/components/schemas/SimpleApiError_id_inner'
          type: array
      required:
      - error
      type: object
    ApiError:
      example:
        remediation: remediation
        instance: https://openapi-generator.tech
        code: 6
        detail: detail
        title: title
        dapi_errors:
          key:
            logfile: logfile
            error: error
      nullable: true
      properties:
        title:
          type: string
        detail:
          type: string
        instance:
          format: uri
          type: string
        code:
          format: int32
          type: integer
        remediation:
          type: string
        dapi_errors:
          additionalProperties:
            $ref: '#/components/schemas/ApiError_dapi_errors_value'
          type: object
      required:
      - detail
      - title
      type: object
    RequestError:
      example:
        detail: detail
        title: title
        error: 0
      nullable: true
      properties:
        title:
          type: string
        detail:
          type: string
        error:
          format: int32
          type: integer
      required:
      - detail
      - title
      type: object
    ScanIdTime:
      example:
        id: 7
        time: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Scan ID
          format: int64
          type: integer
        time:
          description: Date when the scan was performed
          format: date-time
          type: string
      type: object
    ItemAffected:
      properties:
        affected_items:
          description: Items that successfully applied the API call action
          items:
            $ref: '#/components/schemas/ItemAffected_affected_items_inner'
          type: array
      required:
      - affected_items
      type: object
    AllItemsResponse:
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
      properties:
        total_affected_items:
          description: Number of items that have successfully applied the requested
            operation
          format: int32
          type: integer
        failed_items:
          description: List of items that have failed applying the requested operation
          items:
            $ref: '#/components/schemas/SimpleApiError'
          type: array
        total_failed_items:
          description: Number of items that have failed applying the requested operation
          format: int32
          type: integer
      required:
      - failed_items
      - total_affected_items
      - total_failed_items
      type: object
    AllItemsResponseAgents:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/Agent'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 1
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - registerIP: registerIP
          status_code: 2
          manager: manager
          os:
            major: major
            uname: uname
            minor: minor
            codename: codename
            name: name
            arch: arch
            version: version
            platform: platform
          configSum: configSum
          lastKeepAlive: lastKeepAlive
          ip: ip
          node_name: node_name
          group_config_status: group_config_status
          version: version
          dateAdd: dateAdd
          name: name
          id: id
          mergedSum: mergedSum
          status: active
          group:
          - group
          - group
        - registerIP: registerIP
          status_code: 2
          manager: manager
          os:
            major: major
            uname: uname
            minor: minor
            codename: codename
            name: name
            arch: arch
            version: version
            platform: platform
          configSum: configSum
          lastKeepAlive: lastKeepAlive
          ip: ip
          node_name: node_name
          group_config_status: group_config_status
          version: version
          dateAdd: dateAdd
          name: name
          id: id
          mergedSum: mergedSum
          status: active
          group:
          - group
          - group
    AllItemsResponseAgentsDistinct:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/AgentDistinct'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - registerIP: registerIP
          status_code: 0
          manager: manager
          os:
            major: major
            uname: uname
            minor: minor
            codename: codename
            name: name
            arch: arch
            version: version
            platform: platform
          configSum: configSum
          lastKeepAlive: lastKeepAlive
          ip: ip
          node_name: node_name
          count: 5
          group_config_status: group_config_status
          version: version
          dateAdd: dateAdd
          name: name
          id: id
          mergedSum: mergedSum
          status: active
          group:
          - group
          - group
        - registerIP: registerIP
          status_code: 0
          manager: manager
          os:
            major: major
            uname: uname
            minor: minor
            codename: codename
            name: name
            arch: arch
            version: version
            platform: platform
          configSum: configSum
          lastKeepAlive: lastKeepAlive
          ip: ip
          node_name: node_name
          count: 5
          group_config_status: group_config_status
          version: version
          dateAdd: dateAdd
          name: name
          id: id
          mergedSum: mergedSum
          status: active
          group:
          - group
          - group
    AllItemsResponseWazuhDaemonStats:
      allOf:
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/AllItemsResponseWazuhDaemonStats_allOf_affected_items'
            type: array
        required:
        - affected_items
        type: object
      - $ref: '#/components/schemas/AllItemsResponse'
      example:
        total_failed_items: 8
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        affected_items:
        - name: wazuh-remoted
          metrics:
            keys_reload_count: 1
            bytes:
              received: 0
              sent: 6
            queues:
              received:
                size: 5
                usage: 9
            messages:
              received_breakdown:
                discarded: 2
                control_breakdown:
                  request: 2
                  keepalive: 5
                  startup: 9
                  shutdown: 7
                ping: 7
                control: 5
                dequeued_after: 3
                event: 4
                unknown: 1
              sent_breakdown:
                sca: 1
                ar: 1
                request: 7
                shared: 4
                discarded: 6
                ack: 1
            tcp_sessions: 9
          uptime: 2000-01-23T04:56:07.000+00:00
          timestamp: 2000-01-23T04:56:07.000+00:00
        - name: wazuh-remoted
          metrics:
            keys_reload_count: 1
            bytes:
              received: 0
              sent: 6
            queues:
              received:
                size: 5
                usage: 9
            messages:
              received_breakdown:
                discarded: 2
                control_breakdown:
                  request: 2
                  keepalive: 5
                  startup: 9
                  shutdown: 7
                ping: 7
                control: 5
                dequeued_after: 3
                event: 4
                unknown: 1
              sent_breakdown:
                sca: 1
                ar: 1
                request: 7
                shared: 4
                discarded: 6
                ack: 1
            tcp_sessions: 9
          uptime: 2000-01-23T04:56:07.000+00:00
          timestamp: 2000-01-23T04:56:07.000+00:00
        total_affected_items: 6
    AllItemsResponseWazuhDaemonStatsAgents:
      allOf:
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/AllItemsResponseWazuhDaemonStatsAgents_allOf_affected_items'
            type: array
        required:
        - affected_items
        type: object
      - $ref: '#/components/schemas/AllItemsResponse'
      example:
        total_failed_items: 1
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        affected_items:
        - name: wazuh-remoted
          timestamp: 2000-01-23T04:56:07.000+00:00
          agents:
          - id: 0
            metrics:
              messages:
                received_breakdown:
                  control_breakdown:
                    request: 5
                    keepalive: 1
                    startup: 2
                    shutdown: 5
                  control: 6
                  event: 7
                sent_breakdown:
                  sca: 7
                  ar: 3
                  request: 4
                  shared: 1
                  discarded: 2
                  ack: 9
            uptime: 2000-01-23T04:56:07.000+00:00
          - id: 0
            metrics:
              messages:
                received_breakdown:
                  control_breakdown:
                    request: 5
                    keepalive: 1
                    startup: 2
                    shutdown: 5
                  control: 6
                  event: 7
                sent_breakdown:
                  sca: 7
                  ar: 3
                  request: 4
                  shared: 1
                  discarded: 2
                  ack: 9
            uptime: 2000-01-23T04:56:07.000+00:00
        - name: wazuh-remoted
          timestamp: 2000-01-23T04:56:07.000+00:00
          agents:
          - id: 0
            metrics:
              messages:
                received_breakdown:
                  control_breakdown:
                    request: 5
                    keepalive: 1
                    startup: 2
                    shutdown: 5
                  control: 6
                  event: 7
                sent_breakdown:
                  sca: 7
                  ar: 3
                  request: 4
                  shared: 1
                  discarded: 2
                  ack: 9
            uptime: 2000-01-23T04:56:07.000+00:00
          - id: 0
            metrics:
              messages:
                received_breakdown:
                  control_breakdown:
                    request: 5
                    keepalive: 1
                    startup: 2
                    shutdown: 5
                  control: 6
                  event: 7
                sent_breakdown:
                  sca: 7
                  ar: 3
                  request: 4
                  shared: 1
                  discarded: 2
                  ack: 9
            uptime: 2000-01-23T04:56:07.000+00:00
        total_affected_items: 1
    AllItemsResponseGroups:
      allOf:
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/AgentGroup'
            type: array
        required:
        - affected_items
        type: object
      - $ref: '#/components/schemas/AllItemsResponse'
      example:
        total_failed_items: 1
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        affected_items:
        - configSum: configSum
          count: 0
          name: name
          mergedSum: mergedSum
        - configSum: configSum
          count: 0
          name: name
          mergedSum: mergedSum
        total_affected_items: 6
    AllItemsResponseAgentIDs:
      allOf:
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/AgentID'
            type: array
        required:
        - affected_items
        type: object
      - $ref: '#/components/schemas/AllItemsResponse'
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        affected_items:
        - null
        - null
        total_affected_items: 0
    AllItemsResponseNodeIDs:
      allOf:
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/NodeID'
            type: array
        required:
        - affected_items
        type: object
      - $ref: '#/components/schemas/AllItemsResponse'
    AllItemsResponseNodeHealthcheck:
      allOf:
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/NodeHealthcheck'
            type: array
        required:
        - affected_items
        type: object
      - $ref: '#/components/schemas/AllItemsResponse'
      example:
        total_failed_items: 3
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        affected_items:
        - name:
            info:
              name: name
              info:
                ip: ip
                totalActiveAgents: 0
                type: worker
                version: version
            status:
              last_keep_alive: last_keep_alive
              last_sync_agentinfo:
                date_end_master: date_end_master
                n_synced_chunks: 6
                date_start_master: date_start_master
              last_sync_integrity:
                date_end_master: date_end_master
                total_files:
                  shared: 7
                  extra: 5
                  extra_valid: 5
                  missing: 2
                date_start_master: date_start_master
              last_sync_full_agentgroup:
                date_start: date_start
                n_synced_chunks: 1
                date_end: date_end
              sync_integrity_free: true
              sync_agent_info_free: true
              last_sync_agentgroup:
                date_start: date_start
                n_synced_chunks: 1
                date_end: date_end
        - name:
            info:
              name: name
              info:
                ip: ip
                totalActiveAgents: 0
                type: worker
                version: version
            status:
              last_keep_alive: last_keep_alive
              last_sync_agentinfo:
                date_end_master: date_end_master
                n_synced_chunks: 6
                date_start_master: date_start_master
              last_sync_integrity:
                date_end_master: date_end_master
                total_files:
                  shared: 7
                  extra: 5
                  extra_valid: 5
                  missing: 2
                date_start_master: date_start_master
              last_sync_full_agentgroup:
                date_start: date_start
                n_synced_chunks: 1
                date_end: date_end
              sync_integrity_free: true
              sync_agent_info_free: true
              last_sync_agentgroup:
                date_start: date_start
                n_synced_chunks: 1
                date_end: date_end
        total_affected_items: 9
    AllItemsResponseNodeRulesetSynchronizationStatus:
      allOf:
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/NodeRulesetSyncStatus'
            type: array
        required:
        - affected_items
        type: object
      - $ref: '#/components/schemas/AllItemsResponse'
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        affected_items:
        - synced: true
          name: name
        - synced: true
          name: name
        total_affected_items: 0
    AllItemsResponseGroupIDs:
      allOf:
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/GroupID'
            type: array
        required:
        - affected_items
        type: object
      - $ref: '#/components/schemas/AllItemsResponse'
    AllItemsResponseAgentsSynced:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/AgentSynced'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - synced: true
          id: id
        - synced: true
          id: id
    AllItemsResponseAgentsKeys:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/AgentIdKey'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - id: id
          key: key
        - id: id
          key: key
    AllItemsResponseRules:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/Rule'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - hipaa:
          - hipaa
          - hipaa
          level: 8
          tsc:
          - tsc
          - tsc
          description: description
          groups:
          - groups
          - groups
          nist-800-53:
          - nist-800-53
          - nist-800-53
          relative_dirname: relative_dirname
          gdpr:
          - gdpr
          - gdpr
          filename: filename
          pci:
          - pci
          - pci
          details: null
          id: 1
          status: enabled
          gpg13:
          - gpg13
          - gpg13
        - hipaa:
          - hipaa
          - hipaa
          level: 8
          tsc:
          - tsc
          - tsc
          description: description
          groups:
          - groups
          - groups
          nist-800-53:
          - nist-800-53
          - nist-800-53
          relative_dirname: relative_dirname
          gdpr:
          - gdpr
          - gdpr
          filename: filename
          pci:
          - pci
          - pci
          details: null
          id: 1
          status: enabled
          gpg13:
          - gpg13
          - gpg13
    AllItemsResponseRulesFiles:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/RuleFile'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - filename: filename
          relative_dirname: relative_dirname
          status: enabled
        - filename: filename
          relative_dirname: relative_dirname
          status: enabled
    AllItemsResponseDecoders:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/Decoder'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - name: name
          details: "{}"
          position: 0
        - name: name
          details: "{}"
          position: 0
    AllItemsResponseDecodersFiles:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/DecoderFile'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - filename: filename
          relative_dirname: relative_dirname
          status: enabled
        - filename: filename
          relative_dirname: relative_dirname
          status: enabled
    AllItemsResponseLists:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/CDBList'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - filename: filename
          relative_dirname: relative_dirname
          items:
          - value: value
            key: key
          - value: value
            key: key
        - filename: filename
          relative_dirname: relative_dirname
          items:
          - value: value
            key: key
          - value: value
            key: key
    AllItemsResponseListsFiles:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/CDBListFile'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - null
        - null
    AllItemsResponseRoles:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/RolesResponse'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - name: name
          rule: "{}"
          id: 1
        - name: name
          rule: "{}"
          id: 1
    AllItemsResponsePolicies:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/AllItemsResponsePolicies_allOf_affected_items'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - name: name
          id: 1
          policy:
            effect: effect
            resources:
            - resources
            - resources
            actions:
            - actions
            - actions
        - name: name
          id: 1
          policy:
            effect: effect
            resources:
            - resources
            - resources
            actions:
            - actions
            - actions
    AllItemsResponseSyscollectorHardware:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/SyscollectorHardware'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - board_serial: board_serial
          agent_id: agent_id
          scan:
            id: 7
            time: 2000-01-23T04:56:07.000+00:00
          cpu:
            cores: 0
            name: name
            mhz: 0.5962134
          ram:
            total: 0
            usage: 70
            free: 0
        - board_serial: board_serial
          agent_id: agent_id
          scan:
            id: 7
            time: 2000-01-23T04:56:07.000+00:00
          cpu:
            cores: 0
            name: name
            mhz: 0.5962134
          ram:
            total: 0
            usage: 70
            free: 0
    AllItemsResponseSyscollectorHotfixes:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/SyscollectorHotfix'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - hotfix: hotfix
          scan:
            id: 7
            time: 2000-01-23T04:56:07.000+00:00
        - hotfix: hotfix
          scan:
            id: 7
            time: 2000-01-23T04:56:07.000+00:00
    AllItemsResponseSyscollectorInterface:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/SyscollectorInterface'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - tx:
            bytes: 0
            dropped: 0
            error: 0
            packets: 0
          agent_id: agent_id
          rx:
            bytes: 0
            dropped: 0
            error: 0
            packets: 0
          name: name
          scan:
            id: 7
            time: 2000-01-23T04:56:07.000+00:00
          state: up
          type: type
          mac: mac
          mtu: 0
        - tx:
            bytes: 0
            dropped: 0
            error: 0
            packets: 0
          agent_id: agent_id
          rx:
            bytes: 0
            dropped: 0
            error: 0
            packets: 0
          name: name
          scan:
            id: 7
            time: 2000-01-23T04:56:07.000+00:00
          state: up
          type: type
          mac: mac
          mtu: 0
    AllItemsResponseSyscollectorOS:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/SyscollectorOS'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - hostname: hostname
          os:
            major: major
            minor: minor
            codename: codename
            name: name
            version: version
            platform: platform
          agent_id: agent_id
          release: release
          sysname: sysname
          scan:
            id: 7
            time: 2000-01-23T04:56:07.000+00:00
          version: version
          architecture: architecture
        - hostname: hostname
          os:
            major: major
            minor: minor
            codename: codename
            name: name
            version: version
            platform: platform
          agent_id: agent_id
          release: release
          sysname: sysname
          scan:
            id: 7
            time: 2000-01-23T04:56:07.000+00:00
          version: version
          architecture: architecture
    AllItemsResponseSyscollectorPackages:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/SyscollectorPackages'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - agent_id: agent_id
          format: pacman
          scan:
            id: 7
            time: 2000-01-23T04:56:07.000+00:00
          description: description
          section: section
          source: source
          priority: priority
          version: version
          size: 1
          vendor: vendor
          name: name
          multiarch: allowed
          architecture: architecture
        - agent_id: agent_id
          format: pacman
          scan:
            id: 7
            time: 2000-01-23T04:56:07.000+00:00
          description: description
          section: section
          source: source
          priority: priority
          version: version
          size: 1
          vendor: vendor
          name: name
          multiarch: allowed
          architecture: architecture
    AllItemsResponseSyscollectorPorts:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/SyscollectorPorts'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - inode: 1
          protocol: tcp
          process: process
          agent_id: agent_id
          rx_queue: 0
          scan:
            id: 7
            time: 2000-01-23T04:56:07.000+00:00
          tx_queue: 0
          pid: 9
          state: established
          remote:
            port: 0
            ip: ip
          local:
            port: 0
            ip: ip
        - inode: 1
          protocol: tcp
          process: process
          agent_id: agent_id
          rx_queue: 0
          scan:
            id: 7
            time: 2000-01-23T04:56:07.000+00:00
          tx_queue: 0
          pid: 9
          state: established
          remote:
            port: 0
            ip: ip
          local:
            port: 0
            ip: ip
    AllItemsResponseSyscollectorProcesses:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/SyscollectorProcess'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - egroup: egroup
          ruser: ruser
          pgrp: 5
          agent_id: agent_id
          session: 2
          scan:
            id: 7
            time: 2000-01-23T04:56:07.000+00:00
          pid: pid
          stime: 0
          vm_size: 0
          share: 0
          state: state
          argvs: argvs
          resident: 3
          nlwp: 5
          rgroup: rgroup
          utime: 7
          priority: 7
          processor: 0
          nice: 1
          ppid: 0
          start_time: 1
          sgroup: sgroup
          size: 0
          suser: suser
          euser: euser
          fgroup: fgroup
          name: name
          tgid: 1
          tty: 6
          cmd: cmd
        - egroup: egroup
          ruser: ruser
          pgrp: 5
          agent_id: agent_id
          session: 2
          scan:
            id: 7
            time: 2000-01-23T04:56:07.000+00:00
          pid: pid
          stime: 0
          vm_size: 0
          share: 0
          state: state
          argvs: argvs
          resident: 3
          nlwp: 5
          rgroup: rgroup
          utime: 7
          priority: 7
          processor: 0
          nice: 1
          ppid: 0
          start_time: 1
          sgroup: sgroup
          size: 0
          suser: suser
          euser: euser
          fgroup: fgroup
          name: name
          tgid: 1
          tty: 6
          cmd: cmd
    AllItemsResponseSyscollectorProtocol:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/SyscollectorProtocol'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - iface: iface
          agent_id: agent_id
          scan_id: 1
          type: ipv4
          dhcp: enabled
          gateway: gateway
        - iface: iface
          agent_id: agent_id
          scan_id: 1
          type: ipv4
          dhcp: enabled
          gateway: gateway
    AllItemsResponseSyscollectorNetwork:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/SyscollectorNetwork'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - broadcast: broadcast
          iface: iface
          address: address
          agent_id: agent_id
          netmask: netmask
          proto: proto
          scan_id: 1
        - broadcast: broadcast
          iface: iface
          address: address
          agent_id: agent_id
          netmask: netmask
          proto: proto
          scan_id: 1
    AllItemsResponseUsers:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/UsersResponse'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - allow_run_as: true
          roles:
          - roles
          - roles
          id: 1
          username: username
        - allow_run_as: true
          roles:
          - roles
          - roles
          id: 1
          username: username
    AllItemsResponseGroupFiles:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/GroupFiles'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - filename: agent.conf
          hash: ab73af41699f13fdd81903b5f23d8d00
        - filename: agent.conf
          hash: ab73af41699f13fdd81903b5f23d8d00
    AllItemsResponseCiscatResult:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/CiscatResults'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - fail: 5
          score: 9
          notchecked: 5
          pass: 2
          profile: profile
          scan:
            id: 7
            time: 2000-01-23T04:56:07.000+00:00
          error: 1
          benchmark: benchmark
          unknown: 3
        - fail: 5
          score: 9
          notchecked: 5
          pass: 2
          profile: profile
          scan:
            id: 7
            time: 2000-01-23T04:56:07.000+00:00
          error: 1
          benchmark: benchmark
          unknown: 3
    AllItemsResponseSyscheckResult:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/SyscheckDatabase'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - date: 2000-01-23T04:56:07.000+00:00
          gid: gid
          perm: perm
          uname: uname
          sha256: sha256
          changes: 1
          gname: gname
          mtime: mtime
          sha1: sha1
          inode: 5
          uid: uid
          file: file
          size: 5
          md5: md5
        - date: 2000-01-23T04:56:07.000+00:00
          gid: gid
          perm: perm
          uname: uname
          sha256: sha256
          changes: 1
          gname: gname
          mtime: mtime
          sha1: sha1
          inode: 5
          uid: uid
          file: file
          size: 5
          md5: md5
    AllItemsResponseLastScan:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/LastScan'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
        - start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
    AllItemsResponseSCADatabase:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/SCADatabase'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - fail: 1
          score: 5
          start_scan: 2000-01-23T04:56:07.000+00:00
          policy_id: policy_id
          references: references
          pass: 5
          end_scan: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
        - fail: 1
          score: 5
          start_scan: 2000-01-23T04:56:07.000+00:00
          policy_id: policy_id
          references: references
          pass: 5
          end_scan: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
    AllItemsResponseSCAChecks:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/SCAChecks'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - registry: registry
          process: process
          policy_id: policy_id
          references: references
          description: description
          title: title
          directory: directory
          rationale: rationale
          result: passed
          remediation: remediation
          condition: all
          file: file
          id: 1
        - registry: registry
          process: process
          policy_id: policy_id
          references: references
          description: description
          title: title
          directory: directory
          rationale: rationale
          result: passed
          remediation: remediation
          condition: all
          file: file
          id: 1
    AllItemsResponseClusterNodes:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/ClusterNode'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - ip: ip
          name: null
          type: worker
          version: version
        - ip: ip
          name: null
          type: worker
          version: version
    AllItemsResponseWazuhLogs:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/WazuhLogs'
            type: array
        required:
        - affected_items
        type: object
      example:
        total_failed_items: 6
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        total_affected_items: 0
        affected_items:
        - level: critical
          description: description
          tag: tag
          timestamp: 2000-01-23T04:56:07.000+00:00
        - level: critical
          description: description
          tag: tag
          timestamp: 2000-01-23T04:56:07.000+00:00
    AllItemsResponseValidationStatus:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/ValidationStatus'
            type: array
        required:
        - affected_items
        type: object
    AllItemsResponseWazuhStats:
      allOf:
      - properties:
          affected_items:
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/AllItemsResponseWazuhStats_allOf_affected_items'
            type: array
        required:
        - affected_items
        type: object
      - $ref: '#/components/schemas/AllItemsResponse'
      example:
        total_failed_items: 2
        failed_items:
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        - id:
          - SimpleApiError_id_inner
          - SimpleApiError_id_inner
          error:
            key:
              remediation: remediation
              code: 6
              message: message
        affected_items:
        - - alerts:
            - times: 1
              level: 9
              sigid: 0
            - times: 1
              level: 9
              sigid: 0
            syscheck: 7
            totalAlerts: 9
            hour: 2
            firewall: 5
            events: 5
          - alerts:
            - times: 1
              level: 9
              sigid: 0
            - times: 1
              level: 9
              sigid: 0
            syscheck: 7
            totalAlerts: 9
            hour: 2
            firewall: 5
            events: 5
        - - alerts:
            - times: 1
              level: 9
              sigid: 0
            - times: 1
              level: 9
              sigid: 0
            syscheck: 7
            totalAlerts: 9
            hour: 2
            firewall: 5
            events: 5
          - alerts:
            - times: 1
              level: 9
              sigid: 0
            - times: 1
              level: 9
              sigid: 0
            syscheck: 7
            totalAlerts: 9
            hour: 2
            firewall: 5
            events: 5
        total_affected_items: 3
    BasicInfo:
      example:
        license_name: license_name
        hostname: hostname
        title: title
        api_version: api_version
        license_url: license_url
        revision: revision
        timestamp: timestamp
      properties:
        title:
          description: API title name
          type: string
        api_version:
          description: API version in the manager
          type: string
        revision:
          description: API revision
          type: string
        license_name:
          description: API license name
          type: string
        license_url:
          description: API license url
          type: string
        hostname:
          description: Server hostname
          type: string
        timestamp:
          type: string
      type: object
    RulesetFile:
      properties:
        filename:
          description: Name of the file
          type: string
        relative_dirname:
          description: Folder path where the file is located. This path is relative
            to the Wazuh installation path
          format: paths
          type: string
      type: object
    RulesetStatus:
      properties:
        status:
          description: Whether the specified ruleset file is enabled or disabled in
            Wazuh manager configuration
          enum:
          - enabled
          - disabled
          type: string
      type: object
    ActiveResponseBody:
      example:
        alert:
          data: "{}"
        arguments:
        - arguments
        - arguments
        command: command
      properties:
        arguments:
          description: Command arguments
          items:
            type: string
          type: array
        command:
          description: "Command running in the agent. If this value starts with `!`,\
            \ then it refers to a script name instead of a command name"
          format: active_response_command
          type: string
        alert:
          $ref: '#/components/schemas/ActiveResponseBody_alert'
      required:
      - command
      type: object
    Agent:
      example:
        registerIP: registerIP
        status_code: 2
        manager: manager
        os:
          major: major
          uname: uname
          minor: minor
          codename: codename
          name: name
          arch: arch
          version: version
          platform: platform
        configSum: configSum
        lastKeepAlive: lastKeepAlive
        ip: ip
        node_name: node_name
        group_config_status: group_config_status
        version: version
        dateAdd: dateAdd
        name: name
        id: id
        mergedSum: mergedSum
        status: active
        group:
        - group
        - group
      properties:
        version:
          description: Wazuh version the agent has installed
          type: string
        id:
          description: Agent ID
          format: numbers
          minLength: 3
          type: string
        name:
          description: Agent name used at the registration process
          type: string
        status:
          $ref: '#/components/schemas/AgentStatus'
        configSum:
          description: MD5 checksum of the group configuration file (agent.conf)
          type: string
        group:
          description: List of groups the agent belongs to
          items:
            type: string
          type: array
        mergedSum:
          description: MD5 checksum of all group shared files merged in a single one
            (merged.mg)
          type: string
        ip:
          description: "IP where the agent communicates with the manager. If the manager\
            \ can't get this information, it will be the same as registerIP field"
          type: string
        registerIP:
          description: IP used at agent the registration process
          type: string
        manager:
          description: Hostname of the manager the agent is reporting to
          type: string
        node_name:
          description: ID of the node the agent is reporting to
          type: string
        dateAdd:
          description: Date when the agent was registered
          type: string
        lastKeepAlive:
          description: Date when the last keepalive was received from the agent
          type: string
        os:
          $ref: '#/components/schemas/Agent_os'
        status_code:
          default: 0
          description: Agent connection status code
          format: int32
          maximum: 5
          minimum: 0
          type: integer
        group_config_status:
          description: Agent groups configuration sync status
          type: string
      type: object
    AgentAddBody:
      example:
        ip: ip
        name: name
      properties:
        name:
          description: Agent name
          format: names
          type: string
        ip:
          description: "If this is not included, the API will get the IP automatically.\
            \ Allowed values: IP, IP/NET, ANY"
          format: alphanumeric_symbols
          type: string
      required:
      - name
      type: object
    AgentGroup:
      example:
        configSum: configSum
        count: 0
        name: name
        mergedSum: mergedSum
      properties:
        count:
          description: Number of agents belonging to that group
          minimum: 0
          type: integer
        name:
          type: string
        mergedSum:
          description: MD5 checksum of all group shared files merged in a single one
            (merged.mg)
          format: hash
          type: string
        configSum:
          description: MD5 checksum of the group configuration file (agent.conf)
          format: hash
          type: string
      type: object
    AgentGroupDeleted:
      properties:
        affected_items:
          description: "List of removed groups, agents belonging exclusively to the\
            \ removed groups will be reassigned to group default"
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      required:
      - affected_items
      type: object
    AgentIdKey:
      example:
        id: id
        key: key
      properties:
        id:
          description: Agent ID
          format: numbers
          minLength: 3
          type: string
        key:
          format: base64
          type: string
      required:
      - id
      - key
      type: object
    AgentInsertBody:
      example:
        ip: ip
        name: name
        force:
          disconnected_time:
            value: 1h
            enabled: true
          after_registration_time: 1h
          enabled: true
        id: id
        key: key
      properties:
        id:
          description: Agent ID
          format: numbers
          minLength: 3
          type: string
        key:
          description: Key to use when communicating with the manager. The agent must
            have the same key on its `client.keys` file
          format: wazuh_key
          maxLength: 64
          minLength: 64
          type: string
        name:
          description: Agent name
          format: names
          type: string
        ip:
          description: "If this is not included, the API will get the IP automatically.\
            \ Allowed values: IP, IP/NET, ANY"
          format: alphanumeric_symbols
          type: string
        force:
          $ref: '#/components/schemas/AgentInsertForce'
      required:
      - name
      type: object
    AgentStatus:
      description: Agent status. It is calculated based on the last keepalive and
        the Wazuh version
      enum:
      - active
      - pending
      - never_connected
      - disconnected
      type: string
    AgentsSummaryStatus:
      example:
        configuration:
          total: 2
          synced: 7
          not_synced: 9
        connection:
          total: 0
          disconnected: 1
          never_connected: 5
          pending: 5
          active: 6
      properties:
        connection:
          $ref: '#/components/schemas/AgentsSummaryStatus_connection'
        configuration:
          $ref: '#/components/schemas/AgentsSummaryStatus_configuration'
      type: object
    AgentDistinct:
      allOf:
      - $ref: '#/components/schemas/Agent'
      - properties:
          count:
            description: Number of agents with the specified unique fields
            format: int32
            type: integer
        type: object
      example:
        registerIP: registerIP
        status_code: 0
        manager: manager
        os:
          major: major
          uname: uname
          minor: minor
          codename: codename
          name: name
          arch: arch
          version: version
          platform: platform
        configSum: configSum
        lastKeepAlive: lastKeepAlive
        ip: ip
        node_name: node_name
        count: 5
        group_config_status: group_config_status
        version: version
        dateAdd: dateAdd
        name: name
        id: id
        mergedSum: mergedSum
        status: active
        group:
        - group
        - group
    AgentSynced:
      example:
        synced: true
        id: id
      properties:
        id:
          description: Agent ID
          type: string
        synced:
          description: Sync info
          type: boolean
      type: object
    AgentID:
      description: Agent ID
      format: numbers
      minLength: 3
      type: string
    AgentIDListAll:
      description: Agent ID|all
      format: numbers_or_all
      minLength: 3
      type: string
    NodeID:
      description: Node ID
      format: string
      type: string
    AgentConfiguration:
      description: Current agent's configuration. The output varies with requested
        component and the agent configuration
      type: object
    AgentInsertForce:
      description: "Remove the old agent with the same name, ID or IP if the configuration\
        \ is matched"
      example:
        disconnected_time:
          value: 1h
          enabled: true
        after_registration_time: 1h
        enabled: true
      properties:
        enabled:
          default: true
          description: Enable force option
          type: boolean
        disconnected_time:
          $ref: '#/components/schemas/AgentInsertForce_disconnected_time'
        after_registration_time:
          default: 1h
          description: "Time the agent must has been registered to force the insertion.\
            \ Time in seconds, â€˜[n_days]dâ€™, â€˜[n_hours]hâ€™, â€˜[n_minutes]mâ€™ or â€˜[n_seconds]sâ€™\
            . For example, `7d`, `10s` and `10` are valid values. If no time unit\
            \ is specified, seconds are used"
          format: timeframe
          type: string
      type: object
    WazuhRemotedStatsAgentsItem:
      example:
        name: wazuh-remoted
        timestamp: 2000-01-23T04:56:07.000+00:00
        agents:
        - id: 0
          metrics:
            messages:
              received_breakdown:
                control_breakdown:
                  request: 5
                  keepalive: 1
                  startup: 2
                  shutdown: 5
                control: 6
                event: 7
              sent_breakdown:
                sca: 7
                ar: 3
                request: 4
                shared: 1
                discarded: 2
                ack: 9
          uptime: 2000-01-23T04:56:07.000+00:00
        - id: 0
          metrics:
            messages:
              received_breakdown:
                control_breakdown:
                  request: 5
                  keepalive: 1
                  startup: 2
                  shutdown: 5
                control: 6
                event: 7
              sent_breakdown:
                sca: 7
                ar: 3
                request: 4
                shared: 1
                discarded: 2
                ack: 9
          uptime: 2000-01-23T04:56:07.000+00:00
      properties:
        timestamp:
          description: Daemon stats request time
          format: date-time
          type: string
        name:
          description: Daemon name
          enum:
          - wazuh-remoted
          type: string
        agents:
          items:
            $ref: '#/components/schemas/WazuhRemotedStatsAgentsItem_agents_inner'
          type: array
      type: object
    WazuhAnalysisdStatsAgentsItem:
      properties:
        timestamp:
          description: Daemon stats request time
          format: date-time
          type: string
        name:
          description: Daemon name
          enum:
          - wazuh-analysisd
          type: string
        agents:
          items:
            $ref: '#/components/schemas/WazuhAnalysisdStatsAgentsItem_agents_inner'
          type: array
      type: object
    GroupID:
      description: Group name
      format: group_names
      type: string
    GroupIDListAll:
      description: Group name|all
      format: group_names_or_all
      minLength: 1
      type: string
    GroupConfiguration:
      example:
        filters:
          os: os
          profile: profile
          name: name
        config: "{}"
      properties:
        filters:
          $ref: '#/components/schemas/GroupConfiguration_filters'
        config:
          description: Group configuration. The fields on this object depend on the
            actual group configuration
          type: object
      required:
      - config
      - filters
      type: object
    CreateGroupBody:
      example:
        group_id: NewGroup_1
      properties:
        group_id:
          description: "Group name. It can contain any of the characters between a-z,\
            \ A-Z, 0-9, '_', '-' and '.'. Names '.' and '..' are restricted."
          format: group_names
          maxLength: 128
          type: string
      required:
      - group_id
      type: object
    GroupFiles:
      example:
        filename: agent.conf
        hash: ab73af41699f13fdd81903b5f23d8d00
      properties:
        filename:
          description: File name
          type: string
        hash:
          description: File content hash
          type: string
      type: object
    CiscatResults:
      example:
        fail: 5
        score: 9
        notchecked: 5
        pass: 2
        profile: profile
        scan:
          id: 7
          time: 2000-01-23T04:56:07.000+00:00
        error: 1
        benchmark: benchmark
        unknown: 3
      properties:
        benchmark:
          description: CIS-CAT benchmark where the profile is defined
          type: string
        error:
          description: Number of checks that CIS-CAT was not able to run
          format: int32
          type: integer
        fail:
          description: Number of failed checks. If this number is higher than 0 the
            host will probably have a vulnerability
          format: int32
          type: integer
        notchecked:
          description: Number of not passed checks
          format: int32
          type: integer
        pass:
          description: Number of passed checks
          format: int32
          type: integer
        profile:
          description: CIS-CAT profile scanned
          type: string
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        score:
          description: Percentage of passed checks
          format: int32
          type: integer
        unknown:
          description: Number of checks which status CIS-CAT was not able to determine
          format: int32
          type: integer
      type: object
    ClusterNodeBasic:
      properties:
        type:
          description: Node type
          enum:
          - worker
          - master
          type: string
        version:
          description: Wazuh version installed in the node
          format: \d+\.\d+\.\d+
          type: string
        ip:
          description: IP the node is using to communicate with other nodes in the
            cluster
          type: string
      type: object
    ClusterNodeName:
      description: Node ID
      type: string
    ClusterNode:
      allOf:
      - $ref: '#/components/schemas/ClusterNodeBasic'
      - properties:
          name:
            $ref: '#/components/schemas/ClusterNodeName'
        type: object
      example:
        ip: ip
        name: null
        type: worker
        version: version
    NodeHealthcheck:
      example:
        name:
          info:
            name: name
            info:
              ip: ip
              totalActiveAgents: 0
              type: worker
              version: version
          status:
            last_keep_alive: last_keep_alive
            last_sync_agentinfo:
              date_end_master: date_end_master
              n_synced_chunks: 6
              date_start_master: date_start_master
            last_sync_integrity:
              date_end_master: date_end_master
              total_files:
                shared: 7
                extra: 5
                extra_valid: 5
                missing: 2
              date_start_master: date_start_master
            last_sync_full_agentgroup:
              date_start: date_start
              n_synced_chunks: 1
              date_end: date_end
            sync_integrity_free: true
            sync_agent_info_free: true
            last_sync_agentgroup:
              date_start: date_start
              n_synced_chunks: 1
              date_end: date_end
      properties:
        name:
          $ref: '#/components/schemas/NodeHealthcheck_name'
      type: object
    NodeRulesetSyncStatus:
      example:
        synced: true
        name: name
      properties:
        name:
          description: Node name
          type: string
        synced:
          description: Whether the ruleset is synchronized or not
          type: boolean
      type: object
    DaemonStatus:
      enum:
      - stopped
      - running
      type: string
    ClusterLocalInfo:
      properties:
        data:
          $ref: '#/components/schemas/ClusterLocalInfo_data'
      type: object
    ClusterLocalConfig:
      properties:
        data:
          $ref: '#/components/schemas/ClusterLocalConfig_data'
      type: object
    ClusterStatus:
      properties:
        data:
          $ref: '#/components/schemas/ClusterStatus_data'
      type: object
    LogtestRequest:
      example:
        log_format: log_format
        location: location
        event: event
        token: token
      properties:
        token:
          description: Token for the logtest session
          type: string
        log_format:
          description: "Allowed values: syslog, json, snort-full, squid, eventlog,\
            \ eventchannel, audit, mysql_log, postgresql_log, nmapg, iis, command,\
            \ full_command, djb-multilog, multi-line"
          type: string
        location:
          description: Path string
          type: string
        event:
          description: Event to look for
          type: string
      required:
      - event
      - location
      - log_format
      type: object
    Mitre_reference_id:
      description: MITRE Reference ID
      type: string
    Mitre_mitigation_id:
      description: MITRE mitigation ID
      type: string
    Mitre_tactic_id:
      description: MITRE tactic ID
      type: string
    Mitre_group_id:
      description: MITRE group ID
      type: string
    Mitre_software_id:
      description: MITRE software ID
      type: string
    Mitre_technique_id:
      description: MITRE technique ID
      type: string
    Role_id:
      description: Role ID
      format: numbers
      type: string
    Role_id_DELETE:
      description: Role ID|all
      format: numbers_or_all
      type: string
    Security_rule_id:
      description: Security rule ID
      format: numbers
      type: string
    Security_rule_id_DELETE:
      description: Security rule ID|all
      format: numbers_or_all
      type: string
    Task_id:
      description: Task ID
      format: numbers
      type: string
    Policy_id:
      description: Policy ID
      format: numbers
      type: string
    Policy_id_DELETE:
      description: Policy ID|all
      format: numbers_or_all
      type: string
    User_id:
      description: User ID
      format: numbers
      type: string
    User_id_DELETE:
      description: User ID|all
      format: numbers_or_all
      type: string
    PoliciesRequest:
      example:
        name: name
        policy:
          effect: effect
          resources:
          - resources
          - resources
          actions:
          - actions
          - actions
      properties:
        name:
          description: Policy name
          format: names
          maxLength: 64
          type: string
        policy:
          $ref: '#/components/schemas/PoliciesRequest_policy'
      required:
      - name
      - policy
      type: object
    PoliciesRequest_no_required:
      properties:
        name:
          description: Policy name
          format: names
          maxLength: 64
          type: string
        policy:
          $ref: '#/components/schemas/PoliciesRequest_policy'
      type: object
    PoliciesResponse:
      example:
        name: name
        id: 1
        policy:
          effect: effect
          resources:
          - resources
          - resources
          actions:
          - actions
          - actions
      properties:
        id:
          description: Policy id
          type: integer
        name:
          description: Policy name
          type: string
        policy:
          $ref: '#/components/schemas/PoliciesResponse_policy'
      type: object
    RolesResponse:
      example:
        name: name
        rule: "{}"
        id: 1
      properties:
        id:
          description: Role id
          type: integer
        name:
          description: Role name
          type: string
        rule:
          description: Role rule
          type: object
      type: object
    RolesRequest:
      example:
        name: name
      properties:
        name:
          description: Role name
          format: names
          maxLength: 64
          type: string
      required:
      - name
      type: object
    RolesRequest_no_required:
      properties:
        name:
          description: Role name
          format: names
          maxLength: 64
          type: string
      type: object
    SecurityRulesRequest:
      example:
        name: name
        rule: "{}"
      properties:
        name:
          description: Rule name
          format: names
          maxLength: 64
          type: string
        rule:
          description: Rule body
          type: object
      required:
      - name
      - rule
      type: object
    SecurityRulesRequest_no_required:
      properties:
        name:
          description: Rule name
          format: names
          maxLength: 64
          type: string
        rule:
          description: Rule body
          type: object
      type: object
    UsersResponse:
      example:
        allow_run_as: true
        roles:
        - roles
        - roles
        id: 1
        username: username
      properties:
        id:
          description: User's id
          type: integer
        username:
          type: string
        allow_run_as:
          description: Flag to enable the user to log in using authorization context
          type: boolean
        roles:
          description: User's roles
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      type: object
    Token:
      example:
        token: token
      properties:
        token:
          description: User's JWT token
          type: string
      type: object
    WazuhRemotedStatsItem:
      example:
        name: wazuh-remoted
        metrics:
          keys_reload_count: 1
          bytes:
            received: 0
            sent: 6
          queues:
            received:
              size: 5
              usage: 9
          messages:
            received_breakdown:
              discarded: 2
              control_breakdown:
                request: 2
                keepalive: 5
                startup: 9
                shutdown: 7
              ping: 7
              control: 5
              dequeued_after: 3
              event: 4
              unknown: 1
            sent_breakdown:
              sca: 1
              ar: 1
              request: 7
              shared: 4
              discarded: 6
              ack: 1
          tcp_sessions: 9
        uptime: 2000-01-23T04:56:07.000+00:00
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        uptime:
          description: When the count of the metrics started
          format: date-time
          type: string
        timestamp:
          description: Daemon stats request time
          format: date-time
          type: string
        name:
          description: Daemon name
          enum:
          - wazuh-remoted
          type: string
        metrics:
          $ref: '#/components/schemas/WazuhRemotedStatsItem_metrics'
      type: object
    WazuhAnalysisdStatsItem:
      properties:
        uptime:
          description: When the count of the metrics started
          format: date-time
          type: string
        timestamp:
          description: Daemon stats request time
          format: date-time
          type: string
        name:
          description: Daemon name
          enum:
          - wazuh-analysisd
          type: string
        metrics:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics'
      type: object
    WazuhDBStatsItem:
      properties:
        uptime:
          description: When the count of the metrics started
          format: date-time
          type: string
        timestamp:
          description: Daemon stats request time
          format: date-time
          type: string
        name:
          description: Daemon name
          enum:
          - wazuh-db
          type: string
        metrics:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics'
      type: object
    WazuhDaemonsStatus:
      example:
        wazuh-modulesd: null
        wazuh-reportd: null
        wazuh-monitord: null
        wazuh-clusterd: null
        wazuh-agentlessd: stopped
        wazuh-integratord: null
        wazuh-maild: null
        wazuh-execd: null
        wazuh-dbd: null
        wazuh-apid: null
        wazuh-analysisd: null
        wazuh-remoted: null
        wazuh-db: null
        wazuh-syscheckd: null
        wazuh-logcollector: null
        wazuh-csyslogd: null
        wazuh-authd: null
      properties:
        wazuh-agentlessd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-analysisd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-authd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-csyslogd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-dbd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-execd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-integratord:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-logcollector:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-maild:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-monitord:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-remoted:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-reportd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-syscheckd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-apid:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-clusterd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-db:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-modulesd:
          $ref: '#/components/schemas/DaemonStatus'
      type: object
    WazuhInfo:
      example:
        path: path
        tz_name: tz_name
        tz_offset: tz_offset
        max_agents: max_agents
        type: server
        version: version
        openssl_support: openssl_support
      properties:
        path:
          description: Wazuh installation path
          format: paths
          type: string
        version:
          description: Wazuh version
          type: string
        type:
          description: Wazuh installation type
          enum:
          - server
          - local
          - hybrid
          type: string
        max_agents:
          description: Maximum number of agents that can be registered.
          minimum: 0
          type: string
        openssl_support:
          type: string
        tz_offset:
          type: string
        tz_name:
          type: string
      type: object
    WazuhManagerConfiguration:
      example:
        cluster: "{}"
        gcp-pubsub: "{}"
        reports: "{}"
        syscheck: "{}"
        auth: "{}"
        syscollector: "{}"
        open-scap: "{}"
        global: "{}"
        azure-logs: "{}"
        remote:
        - "{}"
        - "{}"
        sca: "{}"
        localfile:
        - "{}"
        - "{}"
        rootcheck: "{}"
        osquery: "{}"
        database_output: "{}"
        email_alerts: "{}"
        ruleset: "{}"
        active-response:
        - "{}"
        - "{}"
        command:
        - "{}"
        - "{}"
        labels: "{}"
        alerts: "{}"
        cis-cat: "{}"
        aws-s3: "{}"
        agentless:
        - "{}"
        - "{}"
        integration:
        - "{}"
        - "{}"
        syslog_output:
        - "{}"
        - "{}"
        logging: "{}"
        socket: "{}"
        docker-listener: "{}"
      properties:
        active-response:
          items:
            type: object
          type: array
        agentless:
          items:
            type: object
          type: array
        alerts:
          type: object
        auth:
          type: object
        cluster:
          type: object
        command:
          items:
            type: object
          type: array
        database_output:
          type: object
        email_alerts:
          type: object
        gcp-pubsub:
          type: object
        global:
          type: object
        integration:
          items:
            type: object
          type: array
        labels:
          type: object
        localfile:
          items:
            type: object
          type: array
        logging:
          type: object
        remote:
          items:
            type: object
          type: array
        reports:
          type: object
        rootcheck:
          type: object
        ruleset:
          type: object
        sca:
          type: object
        socket:
          type: object
        syscheck:
          type: object
        syslog_output:
          items:
            type: object
          type: array
        aws-s3:
          type: object
        azure-logs:
          type: object
        cis-cat:
          type: object
        docker-listener:
          type: object
        open-scap:
          type: object
        osquery:
          type: object
        syscollector:
          type: object
      type: object
    WazuhStats:
      items:
        $ref: '#/components/schemas/WazuhStats_inner'
      type: array
    WazuhHourlyStats:
      properties:
        averages:
          description: Array containing the number of alerts for every hour
          items:
            type: integer
          maxLength: 24
          minLength: 24
          type: array
        interactions:
          format: int32
          type: integer
      type: object
    WazuhWeeklyStats:
      properties:
        Sun:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Mon:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Tue:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Wed:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Thu:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Fri:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Sat:
          $ref: '#/components/schemas/WazuhHourlyStats'
      type: object
    WazuhAnalysisdStats:
      properties:
        alerts_queue_size:
          description: Pending to write in disk alerts queue size
          format: float
          type: number
        alerts_queue_usage:
          description: "If an event matches a rule, an alert is raised. The alerts\
            \ are pushed to a _pending to write in disk alerts_ queue. This variable\
            \ shows usage of that queue"
          format: float
          type: number
        alerts_written:
          description: Total number of alerts written in disk during the last 5 seconds
          format: float
          type: number
        archives_queue_size:
          description: _Events to write in the archives.log_ queue size
          format: float
          type: number
        archives_queue_usage:
          description: _Events to write in the archives.log_ queue usage
          format: float
          type: number
        event_queue_size:
          description: Non-catalogued events queue size
          format: float
          type: number
        event_queue_usage:
          description: Same as `syscheck_queue_usage` but for events not catalogued
            in any of the previously mentioned queues
          format: float
          type: number
        events_dropped:
          description: Discarded events because they didn't match any rule in the
            ruleset
          format: float
          type: number
        events_processed:
          description: Total number of events processed (i.e. matched against Wazuh
            ruleset) in the last 5 seconds
          format: float
          type: number
        events_received:
          description: Events received in `analysisd` from the rest of modules in
            the last 5 seconds
          format: float
          type: number
        firewall_queue_size:
          description: _Events to write in the firewall log_ queue size
          format: float
          type: number
        firewall_queue_usage:
          description: Percentage of use in the queue of events to write in the firewall
            log
          format: float
          type: number
        firewall_written:
          description: Same as `alerts_written` but focusing on firewall alerts
          format: float
          type: number
        fts_written:
          description: "Same as `alerts_written` but focusing on [FTS alerts] (https://documentation.wazuh.com/4.12/user-manual/ruleset/ruleset-xml-syntax/decoders.html?highlight=fts\
            \ #fts)"
          format: float
          type: number
        hostinfo_queue_size:
          description: Hostinfo events queue size
          format: float
          type: number
        hostinfo_queue_usage:
          description: Same as `syscheck_queue_usage` but for hostinfo events
          format: float
          type: number
        other_events_decoded:
          description: Same as `total_events_decoded` but for non-catalogued events
          format: float
          type: number
        rootcheck_events_decoded:
          description: Same as `total_events_decoded` but for rootcheck events
          format: float
          type: number
        rootcheck_queue_size:
          description: Rootcheck events queue size
          format: float
          type: number
        rootcheck_queue_usage:
          description: Same as `syscheck_queue_usage` but for rootcheck events
          format: float
          type: number
        rule_matching_queue_size:
          description: Pending to process events queue size
          format: float
          type: number
        rule_matching_queue_usage:
          description: "After decoding, events are pushed to a _pending to process_\
            \ queue which will match the events against the Wazuh ruleset to raise\
            \ alerts. This variable shows usage of that queue"
          format: float
          type: number
        sca_events_decoded:
          description: Same as `total_events_decoded` but for policy monitoring events
          format: float
          type: number
        sca_queue_size:
          description: Policy monitoring events queue size
          format: float
          type: number
        sca_queue_usage:
          description: Same as `syscheck_queue_usage` but for policy monitoring events
          format: float
          type: number
        statistical_queue_size:
          description: Stats log queue size
          format: float
          type: number
        statistical_queue_usage:
          description: Stats log queue usage
          format: float
          type: number
        syscheck_events_decoded:
          description: Same as `total_events_decoded` but for FIM events
          format: float
          type: number
        syscheck_queue_size:
          description: Syscheck events queue size
          format: float
          type: number
        syscheck_queue_usage:
          description: Percentage of use in the syscheck events queue pending to be
            decoded. Events are discarded when the queue is full
          format: float
          type: number
        syscollector_events_decoded:
          description: Same as `total_events_decoded` but for system inventory events
          format: float
          type: number
        syscollector_queue_size:
          description: System inventory events queue size
          format: float
          type: number
        syscollector_queue_usage:
          description: Same as `syscheck_queue_usage` but for system inventory events
          format: float
          type: number
        total_events_decoded:
          description: "Total events decoded in the last 5 seconds. This number is\
            \ not accumulative, the number in the following 5 seconds can be lower\
            \ than the previous one"
          format: float
          type: number
        winevt_events_decoded:
          description: Same as `total_events_decoded` but for Windows events
          format: float
          type: number
        winevt_queue_size:
          description: Windows events queue size
          format: float
          type: number
        winevt_queue_usage:
          description: Same as `syscheck_queue_usage` but for Windows events
          format: float
          type: number
      type: object
    WazuhRemotedStats:
      properties:
        ctrl_msg_count:
          description: Number of control messages received from all agents during
            the last five seconds
          format: float
          type: number
        discarded_count:
          description: Number of discarded events received from agents during the
            last five seconds
          format: float
          type: number
        evt_count:
          description: Number of events sent to analysisd during the last five seconds
          format: float
          type: number
        sent_bytes:
          description: Number of sent bytes to the agents during the last five seconds
          format: float
          type: number
        queue_size:
          description: Usage of the queue to storage events from agents
          format: float
          type: number
        recv_bytes:
          description: Number of received bytes from all agents during the last five
            seconds
          format: float
          type: number
        tcp_sessions:
          description: Number of TCP active sessions during the last five seconds
          format: float
          type: number
        total_queue_size:
          description: Total queue size to store events from agents
          format: float
          type: number
      type: object
    WazuhLogs:
      example:
        level: critical
        description: description
        tag: tag
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        description:
          description: Log message
          type: string
        level:
          description: Log level
          enum:
          - critical
          - debug
          - debug2
          - error
          - info
          - warning
          type: string
        tag:
          description: Wazuh component that logged the event
          format: alphanumeric
          type: string
        timestamp:
          format: date-time
          type: string
      type: object
    ValidationStatus:
      properties:
        name:
          description: Node name
          type: string
        status:
          description: Status value
          type: string
      type: object
    LogSummary:
      example:
        all: 0
        debug: 0
        critical: 0
        warning: 0
        error: 0
        info: 0
      properties:
        all:
          format: int32
          minimum: 0
          type: integer
        critical:
          format: int32
          minimum: 0
          type: integer
        debug:
          format: int32
          minimum: 0
          type: integer
        error:
          format: int32
          minimum: 0
          type: integer
        info:
          format: int32
          minimum: 0
          type: integer
        warning:
          format: int32
          minimum: 0
          type: integer
      type: object
    WazuhLogsSummary:
      example:
        wazuh-modulesd:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-modulesd:aws-s3:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-modulesd:syscollector:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-reportd:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-modulesd:database:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-agentlessd:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-modulesd:command:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-modulesd:control:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-dbd:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        sca:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-logcollector:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-modulesd:vulnerability-scanner:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-modulesd:ciscat:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-modulesd:content_manager:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-modulesd:osquery:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-modulesd:agent-upgrade:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-modulesd:task-manager:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        rootcheck:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-monitord:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-modulesd:download:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-integratord:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-maild:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-execd:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-analysisd:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-remoted:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-db:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-modulesd:oscap:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-syscheckd:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        indexer-connector:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-modulesd:docker-listener:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-csyslogd:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-authd:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
        wazuh-modulesd:azure-logs:
          all: 0
          debug: 0
          critical: 0
          warning: 0
          error: 0
          info: 0
      properties:
        indexer-connector:
          $ref: '#/components/schemas/LogSummary'
        wazuh-agentlessd:
          $ref: '#/components/schemas/LogSummary'
        wazuh-analysisd:
          $ref: '#/components/schemas/LogSummary'
        wazuh-authd:
          $ref: '#/components/schemas/LogSummary'
        wazuh-csyslogd:
          $ref: '#/components/schemas/LogSummary'
        wazuh-dbd:
          $ref: '#/components/schemas/LogSummary'
        wazuh-execd:
          $ref: '#/components/schemas/LogSummary'
        wazuh-integratord:
          $ref: '#/components/schemas/LogSummary'
        wazuh-maild:
          $ref: '#/components/schemas/LogSummary'
        wazuh-monitord:
          $ref: '#/components/schemas/LogSummary'
        wazuh-logcollector:
          $ref: '#/components/schemas/LogSummary'
        wazuh-remoted:
          $ref: '#/components/schemas/LogSummary'
        wazuh-reportd:
          $ref: '#/components/schemas/LogSummary'
        rootcheck:
          $ref: '#/components/schemas/LogSummary'
        wazuh-syscheckd:
          $ref: '#/components/schemas/LogSummary'
        sca:
          $ref: '#/components/schemas/LogSummary'
        wazuh-db:
          $ref: '#/components/schemas/LogSummary'
        wazuh-modulesd:
          $ref: '#/components/schemas/LogSummary'
        wazuh-modulesd:agent-upgrade:
          $ref: '#/components/schemas/LogSummary'
        wazuh-modulesd:aws-s3:
          $ref: '#/components/schemas/LogSummary'
        wazuh-modulesd:azure-logs:
          $ref: '#/components/schemas/LogSummary'
        wazuh-modulesd:ciscat:
          $ref: '#/components/schemas/LogSummary'
        wazuh-modulesd:control:
          $ref: '#/components/schemas/LogSummary'
        wazuh-modulesd:command:
          $ref: '#/components/schemas/LogSummary'
        wazuh-modulesd:content_manager:
          $ref: '#/components/schemas/LogSummary'
        wazuh-modulesd:database:
          $ref: '#/components/schemas/LogSummary'
        wazuh-modulesd:docker-listener:
          $ref: '#/components/schemas/LogSummary'
        wazuh-modulesd:download:
          $ref: '#/components/schemas/LogSummary'
        wazuh-modulesd:oscap:
          $ref: '#/components/schemas/LogSummary'
        wazuh-modulesd:osquery:
          $ref: '#/components/schemas/LogSummary'
        wazuh-modulesd:syscollector:
          $ref: '#/components/schemas/LogSummary'
        wazuh-modulesd:vulnerability-scanner:
          $ref: '#/components/schemas/LogSummary'
        wazuh-modulesd:task-manager:
          $ref: '#/components/schemas/LogSummary'
      type: object
    ConfirmationMessage:
      properties:
        message:
          description: Confirmation message
          type: string
      type: object
    ConfigurationValidation:
      example:
        status: OK
      properties:
        status:
          description: Configuration status
          enum:
          - OK
          type: string
      type: object
    APIconfiguration:
      additionalProperties: false
      minProperties: 1
      properties:
        access:
          $ref: '#/components/schemas/APIconfiguration_access'
        logs:
          $ref: '#/components/schemas/APIconfiguration_logs'
        cors:
          $ref: '#/components/schemas/APIconfiguration_cors'
        experimental_features:
          default: false
          description: Enable features under development
          type: boolean
        authentication_pool_size:
          default: 2
          description: Number of processes dedicated to processing authentication
            requests
          maximum: 50
          minimum: 1
          type: integer
      type: object
    LastScan:
      example:
        start: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
      properties:
        end:
          description: "Date when the latest scan finished. If it is in progress,\
            \ or no scans have been run, null will be returned"
          format: date-time
          nullable: true
          type: string
        start:
          description: "Date when the latest scan started. If no scans have been run,\
            \ null will be returned"
          format: date-time
          nullable: true
          type: string
      type: object
    NewVersions:
      example:
        last_available_major:
          semver:
            patch: 1
            major: 0
            minor: 6
          description: description
          tag: tag
          title: title
          published_date: published_date
        last_check_date: last_check_date
        current_version: current_version
        update_check: true
        last_available_minor:
          semver:
            patch: 1
            major: 0
            minor: 6
          description: description
          tag: tag
          title: title
          published_date: published_date
        last_available_patch:
          semver:
            patch: 1
            major: 0
            minor: 6
          description: description
          tag: tag
          title: title
          published_date: published_date
        uuid: uuid
      properties:
        last_check_date:
          description: Datetime of the last query to the CTI service
          type: string
        current_version:
          description: Current version in the format vX.Y.Z
          type: string
        update_check:
          description: Flag that indicates if the service is enabled
          type: boolean
        last_available_major:
          $ref: '#/components/schemas/NewVersions_last_available_major'
        last_available_minor:
          $ref: '#/components/schemas/NewVersions_last_available_minor'
        last_available_patch:
          $ref: '#/components/schemas/NewVersions_last_available_patch'
        uuid:
          description: Identifier of the Wazuh instance
          type: string
      type: object
    RuleFile:
      allOf:
      - $ref: '#/components/schemas/RulesetFile'
      - $ref: '#/components/schemas/RulesetStatus'
      example:
        filename: filename
        relative_dirname: relative_dirname
        status: enabled
    Rule:
      allOf:
      - $ref: '#/components/schemas/RuleFile'
      - properties:
          description:
            description: Rule description. This description is shown when an alert
              matching the rule is raised
            type: string
          details:
            $ref: '#/components/schemas/Rule_allOf_details'
          gdpr:
            description: GDPR checks the rule is checking
            items:
              type: string
            type: array
          gpg13:
            description: GPG13 checks the rule is checking
            items:
              type: string
            type: array
          groups:
            description: Groups the rule belongs to
            items:
              type: string
            type: array
          hipaa:
            description: HIPAA checks the rule is checking
            items:
              type: string
            type: array
          id:
            description: Rule ID
            format: int32
            type: integer
          level:
            description: Rule level
            format: int32
            maximum: 15
            minimum: 0
            type: integer
          nist-800-53:
            description: NIST-800-53 checks the rule is checking
            items:
              type: string
            type: array
          tsc:
            description: TSC checks the rule is checking
            items:
              type: string
            type: array
          pci:
            description: PCI DSS checks the rule is checking
            items:
              type: string
            type: array
        type: object
      example:
        hipaa:
        - hipaa
        - hipaa
        level: 8
        tsc:
        - tsc
        - tsc
        description: description
        groups:
        - groups
        - groups
        nist-800-53:
        - nist-800-53
        - nist-800-53
        relative_dirname: relative_dirname
        gdpr:
        - gdpr
        - gdpr
        filename: filename
        pci:
        - pci
        - pci
        details: null
        id: 1
        status: enabled
        gpg13:
        - gpg13
        - gpg13
    SecurityConfiguration:
      example:
        auth_token_exp_timeout: 900
        rbac_mode: white
      minProperties: 1
      properties:
        auth_token_exp_timeout:
          description: Time in seconds until the token expires
          example: 900
          format: int32
          minimum: 30
          type: integer
        rbac_mode:
          description: RBAC mode (white/black)
          enum:
          - white
          - black
          example: white
          type: string
      type: object
    SCAChecks:
      example:
        registry: registry
        process: process
        policy_id: policy_id
        references: references
        description: description
        title: title
        directory: directory
        rationale: rationale
        result: passed
        remediation: remediation
        condition: all
        file: file
        id: 1
      properties:
        description:
          description: A description of what is being checked
          type: string
        directory:
          description: Analyzed directories
          type: string
        file:
          description: Analyzed file path
          type: string
        id:
          description: Policy check ID. A policy contains multiple checks
          format: int32
          type: integer
        policy_id:
          description: Scanned policy ID
          type: string
        process:
          description: Check whether a process is running or not. It's only returned
            when the checked process is running
          type: string
        rationale:
          description: Explain why this check is necessary
          type: string
        references:
          description: A link to a documentation page about the check
          type: string
        registry:
          description: Analyzed registry
          type: string
        remediation:
          description: "Explain how to fix the check, this field is very useful in\
            \ case the check failed"
          type: string
        result:
          description: Check result
          enum:
          - passed
          - failed
          - not applicable
          type: string
        title:
          description: A brief description of what is being checked
          type: string
        condition:
          description: Specify how rule results are aggregated in order to calculate
            the final value of a check
          enum:
          - all
          - any
          - none
          type: string
      type: object
    SCADatabase:
      example:
        fail: 1
        score: 5
        start_scan: 2000-01-23T04:56:07.000+00:00
        policy_id: policy_id
        references: references
        pass: 5
        end_scan: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
      properties:
        description:
          description: Brief description of what the policy is checking
          type: string
        end_scan:
          description: When the last scan finished
          format: date-time
          type: string
        fail:
          description: Number of failed checks. If this number is higher than 0 the
            host has a vulnerability
          format: int32
          type: integer
        name:
          description: Policy name
          type: string
        pass:
          description: Number of passed checks
          format: int32
          type: integer
        policy_id:
          description: Policy ID
          type: string
        references:
          description: A link to a documentation page about the policy
          type: string
        score:
          description: Percentage of passed checks
          format: int32
          type: integer
        start_scan:
          description: When the last scan started
          format: date-time
          type: string
      type: object
    SyscheckDatabase:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        gid: gid
        perm: perm
        uname: uname
        sha256: sha256
        changes: 1
        gname: gname
        mtime: mtime
        sha1: sha1
        inode: 5
        uid: uid
        file: file
        size: 5
        md5: md5
      properties:
        changes:
          description: Number of changes applied
          format: int32
          type: integer
        sha1:
          description: SHA1 checksum of the file
          format: hash_or_empty
          type: string
        file:
          description: File name that raised the alert
          type: string
        md5:
          description: MD5 checksum of the file
          format: hash_or_empty
          type: string
        inode:
          description: Inode of the file. Only available in Linux agents
          format: int32
          type: integer
        uid:
          description: UID of the file
          format: numbers_or_empty
          type: string
        date:
          description: Date when the alert was raised
          format: date-time
          type: string
        perm:
          description: File permissions
          format: names_or_empty
          type: string
        gname:
          description: Group name. Only available in Linux agents
          format: names_or_empty
          type: string
        uname:
          description: User name of the file
          format: names_or_empty
          type: string
        size:
          description: File size in bytes
          format: int64
          type: integer
        gid:
          description: GID of the file. Only available in Linux agents
          format: numbers_or_empty
          type: string
        mtime:
          description: Last modification date of the file
          format: date-time_or_empty
          type: string
        sha256:
          description: SHA256 checksum of the file
          format: hash_or_empty
          type: string
      type: object
    Decoder:
      allOf:
      - $ref: '#/components/schemas/DecoderFile'
      example:
        name: name
        details: "{}"
        position: 0
      properties:
        name:
          description: Decoder name
          type: string
        position:
          description: "Position of this decoder in the decoder file. The parent decoder\
            \ will have position 0, the following defined decoder will have position\
            \ 1, and so on"
          format: int32
          minimum: 0
          type: integer
        details:
          description: Decoder definition fields
          properties:
            program_name:
              nullable: true
              type: object
            parent:
              type: string
            prematch:
              type: object
            regex:
              items:
                type: string
              type: array
            order:
              type: string
            accumulate:
              nullable: true
              type: boolean
          type: object
      type: object
    DecoderFile:
      allOf:
      - $ref: '#/components/schemas/RulesetFile'
      - $ref: '#/components/schemas/RulesetStatus'
      example:
        filename: filename
        relative_dirname: relative_dirname
        status: enabled
    SyscollectorHardware:
      example:
        board_serial: board_serial
        agent_id: agent_id
        scan:
          id: 7
          time: 2000-01-23T04:56:07.000+00:00
        cpu:
          cores: 0
          name: name
          mhz: 0.5962134
        ram:
          total: 0
          usage: 70
          free: 0
      properties:
        board_serial:
          description: Motherboard serial number. This value will be empty in virtual
            machines
          type: string
        cpu:
          $ref: '#/components/schemas/SyscollectorHardware_cpu'
        ram:
          $ref: '#/components/schemas/SyscollectorHardware_ram'
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        agent_id:
          description: Agent ID
          format: numbers
          minLength: 3
          type: string
      type: object
    SyscollectorHotfix:
      example:
        hotfix: hotfix
        scan:
          id: 7
          time: 2000-01-23T04:56:07.000+00:00
      properties:
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        hotfix:
          description: Hotfixes for windows agents
          type: string
      type: object
    SyscollectorNetwork:
      example:
        broadcast: broadcast
        iface: iface
        address: address
        agent_id: agent_id
        netmask: netmask
        proto: proto
        scan_id: 1
      properties:
        address:
          description: IP address associated with the network interface
          type: string
        broadcast:
          description: IP address associated with the broadcast
          type: string
        iface:
          description: Network interface name
          type: string
        netmask:
          description: Netmask associated with the network interface
          type: string
        proto:
          description: Protocol associated with the network interface
          type: string
        scan_id:
          description: Scan ID
          format: int64
          type: integer
        agent_id:
          description: Agent ID
          format: numbers
          minLength: 3
          type: string
      type: object
    NetworkInterfaceSentPackets:
      description: Information related to sent packets in the network interface
      example:
        bytes: 0
        dropped: 0
        error: 0
        packets: 0
      properties:
        bytes:
          description: Number of bytes in the network interface
          format: int32
          minimum: 0
          type: integer
        dropped:
          description: Number of dropped packages in the network interface
          format: int32
          minimum: 0
          type: integer
        error:
          description: Number of packages containing any error in the network interface
          format: int32
          minimum: 0
          type: integer
        packets:
          description: Number of packages in the network interface
          format: int32
          minimum: 0
          type: integer
      type: object
    NetworkInterfaceReceivedPackets:
      description: Information related to received packets in the network interface
      example:
        bytes: 0
        dropped: 0
        error: 0
        packets: 0
      properties:
        bytes:
          description: Number of bytes in the network interface
          format: int32
          minimum: 0
          type: integer
        dropped:
          description: Number of dropped packages in the network interface
          format: int32
          minimum: 0
          type: integer
        error:
          description: Number of packages containing any error in the network interface
          format: int32
          minimum: 0
          type: integer
        packets:
          description: Number of packages in the network interface
          format: int32
          minimum: 0
          type: integer
      type: object
    SyscollectorInterface:
      example:
        tx:
          bytes: 0
          dropped: 0
          error: 0
          packets: 0
        agent_id: agent_id
        rx:
          bytes: 0
          dropped: 0
          error: 0
          packets: 0
        name: name
        scan:
          id: 7
          time: 2000-01-23T04:56:07.000+00:00
        state: up
        type: type
        mac: mac
        mtu: 0
      properties:
        mac:
          description: MAC Address of the network interface
          type: string
        mtu:
          description: Network interface's Maximum Transfer Unit
          format: int32
          minimum: 0
          type: integer
        name:
          description: Network interface name
          type: string
        rx:
          $ref: '#/components/schemas/NetworkInterfaceReceivedPackets'
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        state:
          description: Network interface state
          enum:
          - up
          - down
          type: string
        tx:
          $ref: '#/components/schemas/NetworkInterfaceSentPackets'
        type:
          description: Network interface type
          type: string
        agent_id:
          description: Agent ID
          format: numbers
          minLength: 3
          type: string
      type: object
    SyscollectorProtocol:
      example:
        iface: iface
        agent_id: agent_id
        scan_id: 1
        type: ipv4
        dhcp: enabled
        gateway: gateway
      properties:
        dhcp:
          $ref: '#/components/schemas/DHCPStatus'
        gateway:
          description: Gateway IP
          type: string
        iface:
          description: Network interface name
          type: string
        scan_id:
          description: Scan ID
          format: int64
          type: integer
        type:
          description: Protocol of the interface data
          enum:
          - ipv4
          - ipv6
          type: string
        agent_id:
          description: Agent ID
          format: numbers
          minLength: 3
          type: string
      type: object
    DHCPStatus:
      description: DHCP status
      enum:
      - enabled
      - disabled
      - unknown
      - BOOTP
      type: string
    SyscollectorOS:
      example:
        hostname: hostname
        os:
          major: major
          minor: minor
          codename: codename
          name: name
          version: version
          platform: platform
        agent_id: agent_id
        release: release
        sysname: sysname
        scan:
          id: 7
          time: 2000-01-23T04:56:07.000+00:00
        version: version
        architecture: architecture
      properties:
        architecture:
          description: OS architecture
          type: string
        hostname:
          description: Machine's hostname
          type: string
        os:
          $ref: '#/components/schemas/SyscollectorOS_os'
        release:
          description: Release name
          type: string
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        sysname:
          description: System name
          type: string
        version:
          description: Release version
          type: string
        agent_id:
          description: Agent ID
          format: numbers
          minLength: 3
          type: string
      type: object
    SyscollectorPackages:
      example:
        agent_id: agent_id
        format: pacman
        scan:
          id: 7
          time: 2000-01-23T04:56:07.000+00:00
        description: description
        section: section
        source: source
        priority: priority
        version: version
        size: 1
        vendor: vendor
        name: name
        multiarch: allowed
        architecture: architecture
      properties:
        architecture:
          description: Package architecture
          type: string
        description:
          description: Brief package description
          type: string
        format:
          description: Package format
          enum:
          - pacman
          - deb
          - rpm
          - win
          - pkg
          - apk
          - snap
          - macports
          - pypi
          - npm
          type: string
        multiarch:
          description: Whether the package has multi architecture support
          enum:
          - allowed
          - same
          - foreign
          type: string
        name:
          description: Package name
          type: string
        priority:
          description: Package priority
          type: string
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        section:
          description: Package section
          type: string
        source:
          description: Source section
          type: string
        size:
          description: Installed package size in bytes
          type: integer
        vendor:
          description: Vendor name
          type: string
        version:
          description: Release version installed
          type: string
        agent_id:
          description: Agent ID
          format: numbers
          minLength: 3
          type: string
      type: object
    LocalPortInfo:
      description: Information regarding local opened port
      example:
        port: 0
        ip: ip
      properties:
        ip:
          description: Bind IP
          type: string
        port:
          description: Port used
          format: int32
          minimum: 0
          type: integer
      type: object
    RemotePortInfo:
      description: Information regarding the remote port the machine is connected
        to
      example:
        port: 0
        ip: ip
      properties:
        ip:
          description: Bind IP
          type: string
        port:
          description: Port used
          format: int32
          minimum: 0
          type: integer
      type: object
    SyscollectorPorts:
      example:
        inode: 1
        protocol: tcp
        process: process
        agent_id: agent_id
        rx_queue: 0
        scan:
          id: 7
          time: 2000-01-23T04:56:07.000+00:00
        tx_queue: 0
        pid: 9
        state: established
        remote:
          port: 0
          ip: ip
        local:
          port: 0
          ip: ip
      properties:
        inode:
          description: Port inode
          format: int64
          type: integer
        local:
          $ref: '#/components/schemas/LocalPortInfo'
        protocol:
          description: Protocol used in the communication
          enum:
          - tcp
          - udp
          - tcp6
          - udp6
          type: string
        remote:
          $ref: '#/components/schemas/RemotePortInfo'
        rx_queue:
          description: Packets at the receiver queue
          format: int32
          minimum: 0
          type: integer
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        state:
          description: Communication status
          enum:
          - established
          - syn_sent
          - syn_recv
          - fin_wait1
          - fin_wait2
          - time_wait
          - close
          - close_wait
          - last_ack
          - listening
          - closing
          - delete_tcp
          - unknown
          type: string
        tx_queue:
          description: Packets pending to be transmitted
          format: int32
          minimum: 0
          type: integer
        agent_id:
          description: Agent ID
          format: numbers
          minLength: 3
          type: string
        pid:
          description: PID owner of the opened port
          format: int32
          type: integer
        process:
          description: Name of the PID
          format: alphanumeric
          type: string
      type: object
    SyscollectorProcess:
      example:
        egroup: egroup
        ruser: ruser
        pgrp: 5
        agent_id: agent_id
        session: 2
        scan:
          id: 7
          time: 2000-01-23T04:56:07.000+00:00
        pid: pid
        stime: 0
        vm_size: 0
        share: 0
        state: state
        argvs: argvs
        resident: 3
        nlwp: 5
        rgroup: rgroup
        utime: 7
        priority: 7
        processor: 0
        nice: 1
        ppid: 0
        start_time: 1
        sgroup: sgroup
        size: 0
        suser: suser
        euser: euser
        fgroup: fgroup
        name: name
        tgid: 1
        tty: 6
        cmd: cmd
      properties:
        argvs:
          description: Process received arguments
          type: string
        cmd:
          description: Executed command
          type: string
        egroup:
          description: Effective group
          type: string
        euser:
          description: Effective user
          type: string
        fgroup:
          description: Filesystem group name
          type: string
        name:
          description: Process name
          type: string
        nice:
          description: Nice value of the process
          format: int32
          type: integer
        nlwp:
          description: Number of light weight processes
          format: int32
          type: integer
        pgrp:
          description: Process group
          format: int32
          type: integer
        pid:
          description: Process PID
          type: string
        ppid:
          description: Process parent PID
          format: int32
          minimum: 0
          type: integer
        priority:
          description: Kernel scheduling priority
          format: int32
          type: integer
        processor:
          description: Processor number which is running the process
          format: int32
          minimum: 0
          type: integer
        resident:
          description: Process resident size in bytes
          format: int32
          type: integer
        rgroup:
          description: Real group
          type: string
        ruser:
          description: Real user
          type: string
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        session:
          description: Process session
          format: int32
          type: integer
        sgroup:
          description: Saved-set group
          type: string
        share:
          description: Shared memory
          format: int32
          minimum: 0
          type: integer
        size:
          description: Process size in bytes
          format: int32
          minimum: 0
          type: integer
        start_time:
          description: Time when the process started
          format: int64
          type: integer
        state:
          description: Process state
          type: string
        stime:
          description: Time spent executing system code
          format: int32
          minimum: 0
          type: integer
        suser:
          description: Saved-set user
          type: string
        tgid:
          description: Thread Group ID
          format: int32
          type: integer
        tty:
          description: Process TTY number
          format: int32
          type: integer
        utime:
          description: Time spent executing user code
          format: int32
          type: integer
        vm_size:
          description: Total VM size (KB)
          format: int32
          minimum: 0
          type: integer
        agent_id:
          description: Agent ID
          format: numbers
          minLength: 3
          type: string
      type: object
    CDBList:
      allOf:
      - $ref: '#/components/schemas/RulesetFile'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/CDBListPair'
            type: array
        type: object
      example:
        filename: filename
        relative_dirname: relative_dirname
        items:
        - value: value
          key: key
        - value: value
          key: key
    CDBListPair:
      example:
        value: value
        key: key
      properties:
        key:
          description: Value of the CDB list item key
          type: string
        value:
          description: Value of the CDB list item value
          type: string
      required:
      - key
      - value
      type: object
    CDBListFile:
      $ref: '#/components/schemas/RulesetFile'
    OverviewAgents:
      example:
        last_registered_agent:
        - registerIP: registerIP
          status_code: 2
          manager: manager
          os:
            major: major
            uname: uname
            minor: minor
            codename: codename
            name: name
            arch: arch
            version: version
            platform: platform
          configSum: configSum
          lastKeepAlive: lastKeepAlive
          ip: ip
          node_name: node_name
          group_config_status: group_config_status
          version: version
          dateAdd: dateAdd
          name: name
          id: id
          mergedSum: mergedSum
          status: active
          group:
          - group
          - group
        - registerIP: registerIP
          status_code: 2
          manager: manager
          os:
            major: major
            uname: uname
            minor: minor
            codename: codename
            name: name
            arch: arch
            version: version
            platform: platform
          configSum: configSum
          lastKeepAlive: lastKeepAlive
          ip: ip
          node_name: node_name
          group_config_status: group_config_status
          version: version
          dateAdd: dateAdd
          name: name
          id: id
          mergedSum: mergedSum
          status: active
          group:
          - group
          - group
        agent_version:
        - count: 1
          version: version
        - count: 1
          version: version
        nodes:
        - count: 0
          node_name: node_name
        - count: 0
          node_name: node_name
        agent_status:
          configuration:
            total: 2
            synced: 7
            not_synced: 9
          connection:
            total: 0
            disconnected: 1
            never_connected: 5
            pending: 5
            active: 6
        groups:
        - configSum: configSum
          count: 0
          name: name
          mergedSum: mergedSum
        - configSum: configSum
          count: 0
          name: name
          mergedSum: mergedSum
        agent_os:
        - os:
            name: name
            version: version
            platform: platform
          count: 6
        - os:
            name: name
            version: version
            platform: platform
          count: 6
      properties:
        nodes:
          description: Active nodes in the cluster
          items:
            $ref: '#/components/schemas/OverviewAgents_nodes_inner'
          type: array
        groups:
          description: Recount of the number of Wazuh agents group by Wazuh groups
          items:
            $ref: '#/components/schemas/AgentGroup'
          type: array
        agent_os:
          description: Recount of the number of Wazuh agents group by OS
          items:
            $ref: '#/components/schemas/OverviewAgents_agent_os_inner'
          type: array
        agent_status:
          $ref: '#/components/schemas/AgentsSummaryStatus'
        agent_version:
          description: Recount of the number of Wazuh agents group by version
          items:
            $ref: '#/components/schemas/OverviewAgents_agent_version_inner'
          type: array
        last_registered_agent:
          items:
            $ref: '#/components/schemas/Agent'
          type: array
      required:
      - agent_os
      - agent_status
      - agent_version
      - groups
      - last_registered_agent
      - nodes
      type: object
    api_controllers_default_controller_default_info_200_response:
      example:
        data:
          license_name: license_name
          hostname: hostname
          title: title
          api_version: api_version
          license_url: license_url
          revision: revision
          timestamp: timestamp
      properties:
        data:
          $ref: '#/components/schemas/BasicInfo'
      type: object
    api_controllers_agent_controller_get_agents_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseAgents'
        type: object
      example:
        data:
          total_failed_items: 1
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - registerIP: registerIP
            status_code: 2
            manager: manager
            os:
              major: major
              uname: uname
              minor: minor
              codename: codename
              name: name
              arch: arch
              version: version
              platform: platform
            configSum: configSum
            lastKeepAlive: lastKeepAlive
            ip: ip
            node_name: node_name
            group_config_status: group_config_status
            version: version
            dateAdd: dateAdd
            name: name
            id: id
            mergedSum: mergedSum
            status: active
            group:
            - group
            - group
          - registerIP: registerIP
            status_code: 2
            manager: manager
            os:
              major: major
              uname: uname
              minor: minor
              codename: codename
              name: name
              arch: arch
              version: version
              platform: platform
            configSum: configSum
            lastKeepAlive: lastKeepAlive
            ip: ip
            node_name: node_name
            group_config_status: group_config_status
            version: version
            dateAdd: dateAdd
            name: name
            id: id
            mergedSum: mergedSum
            status: active
            group:
            - group
            - group
        message: message
    api_controllers_agent_controller_add_agent_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AgentIdKey'
        type: object
      example:
        data:
          id: id
          key: key
        message: message
    api_controllers_agent_controller_delete_agents_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            allOf:
            - $ref: '#/components/schemas/AllItemsResponseAgentIDs'
        type: object
      example:
        data: ""
        message: message
    api_controllers_agent_controller_get_agent_config_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AgentConfiguration'
        type: object
      example:
        data: null
        message: message
    api_controllers_agent_controller_delete_single_agent_multiple_groups_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            allOf:
            - $ref: '#/components/schemas/AllItemsResponseGroupIDs'
        type: object
      example:
        data: ""
        message: message
    api_controllers_agent_controller_get_sync_agent_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseAgentsSynced'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - synced: true
            id: id
          - synced: true
            id: id
        message: message
    api_controllers_agent_controller_get_agent_key_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseAgentsKeys'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - id: id
            key: key
          - id: id
            key: key
        message: message
    api_controllers_agent_controller_restart_agent_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/ItemAffected'
        type: object
      example:
        data:
          affected_items:
          - "002"
          total_affected_items: 1
          total_failed_items: 0
          failed_items: []
        message: Restart command was sent to all agents
        error: 0
    api_controllers_agent_controller_get_daemon_stats_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseWazuhDaemonStatsAgents'
        type: object
      example:
        data:
          total_failed_items: 1
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          affected_items:
          - name: wazuh-remoted
            timestamp: 2000-01-23T04:56:07.000+00:00
            agents:
            - id: 0
              metrics:
                messages:
                  received_breakdown:
                    control_breakdown:
                      request: 5
                      keepalive: 1
                      startup: 2
                      shutdown: 5
                    control: 6
                    event: 7
                  sent_breakdown:
                    sca: 7
                    ar: 3
                    request: 4
                    shared: 1
                    discarded: 2
                    ack: 9
              uptime: 2000-01-23T04:56:07.000+00:00
            - id: 0
              metrics:
                messages:
                  received_breakdown:
                    control_breakdown:
                      request: 5
                      keepalive: 1
                      startup: 2
                      shutdown: 5
                    control: 6
                    event: 7
                  sent_breakdown:
                    sca: 7
                    ar: 3
                    request: 4
                    shared: 1
                    discarded: 2
                    ack: 9
              uptime: 2000-01-23T04:56:07.000+00:00
          - name: wazuh-remoted
            timestamp: 2000-01-23T04:56:07.000+00:00
            agents:
            - id: 0
              metrics:
                messages:
                  received_breakdown:
                    control_breakdown:
                      request: 5
                      keepalive: 1
                      startup: 2
                      shutdown: 5
                    control: 6
                    event: 7
                  sent_breakdown:
                    sca: 7
                    ar: 3
                    request: 4
                    shared: 1
                    discarded: 2
                    ack: 9
              uptime: 2000-01-23T04:56:07.000+00:00
            - id: 0
              metrics:
                messages:
                  received_breakdown:
                    control_breakdown:
                      request: 5
                      keepalive: 1
                      startup: 2
                      shutdown: 5
                    control: 6
                    event: 7
                  sent_breakdown:
                    sca: 7
                    ar: 3
                    request: 4
                    shared: 1
                    discarded: 2
                    ack: 9
              uptime: 2000-01-23T04:56:07.000+00:00
          total_affected_items: 1
        message: message
    api_controllers_agent_controller_restart_agents_by_group_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseAgentIDs'
        type: object
      example:
        data:
          affected_items:
          - "002"
          - "003"
          - "005"
          total_affected_items: 3
          total_failed_items: 0
          failed_items: []
          message: Restart command was sent to all agents
          error: 0
    api_controllers_agent_controller_restart_agents_by_node_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseAgentIDs'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          affected_items:
          - null
          - null
          total_affected_items: 0
        message: message
    api_controllers_agent_controller_reconnect_agents_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseAgentIDs'
        type: object
      example:
        data:
          affected_items:
          - "001"
          - "002"
          - "003"
          total_affected_items: 3
          total_failed_items: 0
          failed_items: []
        message: Force reconnect command was sent to all agents
        error: 0
    api_controllers_agent_controller_restart_agents_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseAgentIDs'
        type: object
      example:
        data:
          affected_items:
          - "001"
          - "002"
          - "003"
          - "004"
          - "005"
          - "006"
          - "007"
          - "008"
          total_affected_items: 8
          total_failed_items: 3
          failed_items:
          - error:
              code: 1707
              message: "Cannot send request, agent is not active"
              remediation: "Please, check non-active agents connection and try again.\
                \ Visit https://documentation.wazuh.com/4.12/user-manual/registering/index.html\
                \ and https://documentation.wazuh.com/4.12/user-manual/agents/agent-connection.html\
                \ to obtain more information on registering and connecting agents"
            id:
            - "009"
            - "010"
            - "011"
        message: Restart command was not sent to some agents
        error: 2
    api_controllers_agent_controller_get_agent_fields_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseAgentsDistinct'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - registerIP: registerIP
            status_code: 0
            manager: manager
            os:
              major: major
              uname: uname
              minor: minor
              codename: codename
              name: name
              arch: arch
              version: version
              platform: platform
            configSum: configSum
            lastKeepAlive: lastKeepAlive
            ip: ip
            node_name: node_name
            count: 5
            group_config_status: group_config_status
            version: version
            dateAdd: dateAdd
            name: name
            id: id
            mergedSum: mergedSum
            status: active
            group:
            - group
            - group
          - registerIP: registerIP
            status_code: 0
            manager: manager
            os:
              major: major
              uname: uname
              minor: minor
              codename: codename
              name: name
              arch: arch
              version: version
              platform: platform
            configSum: configSum
            lastKeepAlive: lastKeepAlive
            ip: ip
            node_name: node_name
            count: 5
            group_config_status: group_config_status
            version: version
            dateAdd: dateAdd
            name: name
            id: id
            mergedSum: mergedSum
            status: active
            group:
            - group
            - group
        message: message
    api_controllers_agent_controller_get_agent_summary_status_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AgentsSummaryStatus'
        type: object
      example:
        data:
          configuration:
            total: 2
            synced: 7
            not_synced: 9
          connection:
            total: 0
            disconnected: 1
            never_connected: 5
            pending: 5
            active: 6
        message: message
    api_controllers_agent_controller_get_list_group_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseGroups'
        type: object
      example:
        data:
          total_failed_items: 1
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          affected_items:
          - configSum: configSum
            count: 0
            name: name
            mergedSum: mergedSum
          - configSum: configSum
            count: 0
            name: name
            mergedSum: mergedSum
          total_affected_items: 6
        message: message
    api_controllers_agent_controller_delete_groups_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            allOf:
            - $ref: '#/components/schemas/AgentGroupDeleted'
        type: object
      example:
        data: ""
        message: message
    api_controllers_agent_controller_get_group_config_200_response_data:
      example:
        affected_items:
        - filters:
            os: os
            profile: profile
            name: name
          config: "{}"
        - filters:
            os: os
            profile: profile
            name: name
          config: "{}"
        total_affected_items: 0
      properties:
        affected_items:
          items:
            $ref: '#/components/schemas/GroupConfiguration'
          type: array
        total_affected_items:
          format: int32
          type: integer
      type: object
    api_controllers_agent_controller_get_group_config_200_response:
      example:
        data:
          affected_items:
          - filters:
              os: os
              profile: profile
              name: name
            config: "{}"
          - filters:
              os: os
              profile: profile
              name: name
            config: "{}"
          total_affected_items: 0
      properties:
        data:
          $ref: '#/components/schemas/api_controllers_agent_controller_get_group_config_200_response_data'
      type: object
    api_controllers_agent_controller_put_group_config_request:
      properties:
        tmp_file:
          description: File to update
          type: string
    api_controllers_agent_controller_get_group_files_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseGroupFiles'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - filename: agent.conf
            hash: ab73af41699f13fdd81903b5f23d8d00
          - filename: agent.conf
            hash: ab73af41699f13fdd81903b5f23d8d00
        message: message
    api_controllers_agent_controller_get_group_file_200_response_data:
      oneOf:
      - items:
          description: TODO default missing array inner type to string
          type: string
        type: array
      - description: "The output format depends on the type of file that has been\
          \ requested: rootkit file, rootkit trojans or rcl"
        type: object
    api_controllers_agent_controller_get_group_file_200_response:
      example:
        data:
        - api_controllers_agent_controller_get_group_file_200_response_data
        - api_controllers_agent_controller_get_group_file_200_response_data
      properties:
        data:
          $ref: '#/components/schemas/api_controllers_agent_controller_get_group_file_200_response_data'
    api_controllers_ciscat_controller_get_agents_ciscat_results_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseCiscatResult'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - fail: 5
            score: 9
            notchecked: 5
            pass: 2
            profile: profile
            scan:
              id: 7
              time: 2000-01-23T04:56:07.000+00:00
            error: 1
            benchmark: benchmark
            unknown: 3
          - fail: 5
            score: 9
            notchecked: 5
            pass: 2
            profile: profile
            scan:
              id: 7
              time: 2000-01-23T04:56:07.000+00:00
            error: 1
            benchmark: benchmark
            unknown: 3
        message: message
    api_controllers_cluster_controller_get_cluster_node_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ClusterLocalInfo'
      example:
        data:
          node: node
          cluster: cluster
          type: type
        message: message
    api_controllers_cluster_controller_get_config_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ClusterLocalConfig'
      example:
        data:
          node_type: master
          nodes:
          - nodes
          - nodes
          hidden: hidden
          port: 0
          name: name
          node_name: node_name
          disabled: true
          bind_addr: bind_addr
          key: key
        message: message
    api_controllers_cluster_controller_get_cluster_nodes_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseClusterNodes'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - ip: ip
            name: null
            type: worker
            version: version
          - ip: ip
            name: null
            type: worker
            version: version
        message: message
    api_controllers_cluster_controller_get_healthcheck_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseNodeHealthcheck'
        type: object
      example:
        data:
          total_failed_items: 3
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          affected_items:
          - name:
              info:
                name: name
                info:
                  ip: ip
                  totalActiveAgents: 0
                  type: worker
                  version: version
              status:
                last_keep_alive: last_keep_alive
                last_sync_agentinfo:
                  date_end_master: date_end_master
                  n_synced_chunks: 6
                  date_start_master: date_start_master
                last_sync_integrity:
                  date_end_master: date_end_master
                  total_files:
                    shared: 7
                    extra: 5
                    extra_valid: 5
                    missing: 2
                  date_start_master: date_start_master
                last_sync_full_agentgroup:
                  date_start: date_start
                  n_synced_chunks: 1
                  date_end: date_end
                sync_integrity_free: true
                sync_agent_info_free: true
                last_sync_agentgroup:
                  date_start: date_start
                  n_synced_chunks: 1
                  date_end: date_end
          - name:
              info:
                name: name
                info:
                  ip: ip
                  totalActiveAgents: 0
                  type: worker
                  version: version
              status:
                last_keep_alive: last_keep_alive
                last_sync_agentinfo:
                  date_end_master: date_end_master
                  n_synced_chunks: 6
                  date_start_master: date_start_master
                last_sync_integrity:
                  date_end_master: date_end_master
                  total_files:
                    shared: 7
                    extra: 5
                    extra_valid: 5
                    missing: 2
                  date_start_master: date_start_master
                last_sync_full_agentgroup:
                  date_start: date_start
                  n_synced_chunks: 1
                  date_end: date_end
                sync_integrity_free: true
                sync_agent_info_free: true
                last_sync_agentgroup:
                  date_start: date_start
                  n_synced_chunks: 1
                  date_end: date_end
          total_affected_items: 9
        message: message
    api_controllers_cluster_controller_get_nodes_ruleset_sync_status_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseNodeRulesetSynchronizationStatus'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          affected_items:
          - synced: true
            name: name
          - synced: true
            name: name
          total_affected_items: 0
        message: message
    api_controllers_cluster_controller_get_status_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ClusterStatus'
      example:
        data:
          running: "yes"
          enabled: "yes"
        message: message
    api_controllers_cluster_controller_get_status_node_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/WazuhDaemonsStatus'
        type: object
      example:
        data:
          wazuh-modulesd: null
          wazuh-reportd: null
          wazuh-monitord: null
          wazuh-clusterd: null
          wazuh-agentlessd: stopped
          wazuh-integratord: null
          wazuh-maild: null
          wazuh-execd: null
          wazuh-dbd: null
          wazuh-apid: null
          wazuh-analysisd: null
          wazuh-remoted: null
          wazuh-db: null
          wazuh-syscheckd: null
          wazuh-logcollector: null
          wazuh-csyslogd: null
          wazuh-authd: null
        message: message
    api_controllers_cluster_controller_get_info_node_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/WazuhInfo'
        type: object
      example:
        data:
          path: path
          tz_name: tz_name
          tz_offset: tz_offset
          max_agents: max_agents
          type: server
          version: version
          openssl_support: openssl_support
        message: message
    api_controllers_cluster_controller_get_configuration_node_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/WazuhManagerConfiguration'
        type: object
      example:
        data:
          cluster: "{}"
          gcp-pubsub: "{}"
          reports: "{}"
          syscheck: "{}"
          auth: "{}"
          syscollector: "{}"
          open-scap: "{}"
          global: "{}"
          azure-logs: "{}"
          remote:
          - "{}"
          - "{}"
          sca: "{}"
          localfile:
          - "{}"
          - "{}"
          rootcheck: "{}"
          osquery: "{}"
          database_output: "{}"
          email_alerts: "{}"
          ruleset: "{}"
          active-response:
          - "{}"
          - "{}"
          command:
          - "{}"
          - "{}"
          labels: "{}"
          alerts: "{}"
          cis-cat: "{}"
          aws-s3: "{}"
          agentless:
          - "{}"
          - "{}"
          integration:
          - "{}"
          - "{}"
          syslog_output:
          - "{}"
          - "{}"
          logging: "{}"
          socket: "{}"
          docker-listener: "{}"
        message: message
    api_controllers_cluster_controller_update_configuration_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ConfirmationMessage'
      example:
        message: message
    api_controllers_cluster_controller_get_daemon_stats_node_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseWazuhDaemonStats'
        type: object
      example:
        data:
          total_failed_items: 8
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          affected_items:
          - name: wazuh-remoted
            metrics:
              keys_reload_count: 1
              bytes:
                received: 0
                sent: 6
              queues:
                received:
                  size: 5
                  usage: 9
              messages:
                received_breakdown:
                  discarded: 2
                  control_breakdown:
                    request: 2
                    keepalive: 5
                    startup: 9
                    shutdown: 7
                  ping: 7
                  control: 5
                  dequeued_after: 3
                  event: 4
                  unknown: 1
                sent_breakdown:
                  sca: 1
                  ar: 1
                  request: 7
                  shared: 4
                  discarded: 6
                  ack: 1
              tcp_sessions: 9
            uptime: 2000-01-23T04:56:07.000+00:00
            timestamp: 2000-01-23T04:56:07.000+00:00
          - name: wazuh-remoted
            metrics:
              keys_reload_count: 1
              bytes:
                received: 0
                sent: 6
              queues:
                received:
                  size: 5
                  usage: 9
              messages:
                received_breakdown:
                  discarded: 2
                  control_breakdown:
                    request: 2
                    keepalive: 5
                    startup: 9
                    shutdown: 7
                  ping: 7
                  control: 5
                  dequeued_after: 3
                  event: 4
                  unknown: 1
                sent_breakdown:
                  sca: 1
                  ar: 1
                  request: 7
                  shared: 4
                  discarded: 6
                  ack: 1
              tcp_sessions: 9
            uptime: 2000-01-23T04:56:07.000+00:00
            timestamp: 2000-01-23T04:56:07.000+00:00
          total_affected_items: 6
        message: message
    api_controllers_cluster_controller_get_stats_node_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseWazuhStats'
        type: object
      example:
        data:
          total_failed_items: 2
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          affected_items:
          - - alerts:
              - times: 1
                level: 9
                sigid: 0
              - times: 1
                level: 9
                sigid: 0
              syscheck: 7
              totalAlerts: 9
              hour: 2
              firewall: 5
              events: 5
            - alerts:
              - times: 1
                level: 9
                sigid: 0
              - times: 1
                level: 9
                sigid: 0
              syscheck: 7
              totalAlerts: 9
              hour: 2
              firewall: 5
              events: 5
          - - alerts:
              - times: 1
                level: 9
                sigid: 0
              - times: 1
                level: 9
                sigid: 0
              syscheck: 7
              totalAlerts: 9
              hour: 2
              firewall: 5
              events: 5
            - alerts:
              - times: 1
                level: 9
                sigid: 0
              - times: 1
                level: 9
                sigid: 0
              syscheck: 7
              totalAlerts: 9
              hour: 2
              firewall: 5
              events: 5
          total_affected_items: 3
        message: message
    api_controllers_cluster_controller_get_log_node_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseWazuhLogs'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - level: critical
            description: description
            tag: tag
            timestamp: 2000-01-23T04:56:07.000+00:00
          - level: critical
            description: description
            tag: tag
            timestamp: 2000-01-23T04:56:07.000+00:00
        message: message
    api_controllers_cluster_controller_get_log_summary_node_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/WazuhLogsSummary'
        type: object
      example:
        data:
          wazuh-modulesd:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-modulesd:aws-s3:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-modulesd:syscollector:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-reportd:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-modulesd:database:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-agentlessd:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-modulesd:command:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-modulesd:control:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-dbd:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          sca:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-logcollector:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-modulesd:vulnerability-scanner:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-modulesd:ciscat:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-modulesd:content_manager:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-modulesd:osquery:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-modulesd:agent-upgrade:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-modulesd:task-manager:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          rootcheck:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-monitord:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-modulesd:download:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-integratord:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-maild:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-execd:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-analysisd:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-remoted:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-db:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-modulesd:oscap:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-syscheckd:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          indexer-connector:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-modulesd:docker-listener:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-csyslogd:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-authd:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
          wazuh-modulesd:azure-logs:
            all: 0
            debug: 0
            critical: 0
            warning: 0
            error: 0
            info: 0
        message: message
    api_controllers_cluster_controller_put_restart_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseNodeIDs'
        type: object
      example:
        data:
          affected_items:
          - master-node
          - worker1
          - worker2
          total_affected_items: 3
          total_failed_items: 0
          failed_items: []
        message: Restart request sent to all specified nodes
        error: 0
    api_controllers_cluster_controller_get_conf_validation_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseValidationStatus'
        type: object
      example:
        data:
          affected_items:
          - name: master-node
            status: OK
          - name: worker1
            status: OK
          - name: worker2
            status: OK
          total_affected_items: 3
          total_failed_items: 0
          failed_items: []
        message: Validation was successfully checked in all nodes
        error: 0
    api_controllers_cluster_controller_get_node_config_200_response_data:
      oneOf:
      - items:
          description: TODO default missing array inner type to string
          type: string
        type: array
      - description: The output format depends on the configuration and component
          requested
        type: object
    api_controllers_cluster_controller_get_node_config_200_response:
      example:
        data:
        - api_controllers_cluster_controller_get_node_config_200_response_data
        - api_controllers_cluster_controller_get_node_config_200_response_data
      properties:
        data:
          $ref: '#/components/schemas/api_controllers_cluster_controller_get_node_config_200_response_data'
    api_controllers_cdb_list_controller_get_lists_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseLists'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - filename: filename
            relative_dirname: relative_dirname
            items:
            - value: value
              key: key
            - value: value
              key: key
          - filename: filename
            relative_dirname: relative_dirname
            items:
            - value: value
              key: key
            - value: value
              key: key
        message: message
    api_controllers_cdb_list_controller_get_file_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseListsFiles'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - null
          - null
        message: message
    api_controllers_manager_controller_check_available_version_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/NewVersions'
        type: object
      example:
        data:
          last_available_major:
            semver:
              patch: 1
              major: 0
              minor: 6
            description: description
            tag: tag
            title: title
            published_date: published_date
          last_check_date: last_check_date
          current_version: current_version
          update_check: true
          last_available_minor:
            semver:
              patch: 1
              major: 0
              minor: 6
            description: description
            tag: tag
            title: title
            published_date: published_date
          last_available_patch:
            semver:
              patch: 1
              major: 0
              minor: 6
            description: description
            tag: tag
            title: title
            published_date: published_date
          uuid: uuid
        message: message
    api_controllers_mitre_controller_get_groups_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponse'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
        message: message
    api_controllers_rule_controller_get_rules_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseRules'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - hipaa:
            - hipaa
            - hipaa
            level: 8
            tsc:
            - tsc
            - tsc
            description: description
            groups:
            - groups
            - groups
            nist-800-53:
            - nist-800-53
            - nist-800-53
            relative_dirname: relative_dirname
            gdpr:
            - gdpr
            - gdpr
            filename: filename
            pci:
            - pci
            - pci
            details: null
            id: 1
            status: enabled
            gpg13:
            - gpg13
            - gpg13
          - hipaa:
            - hipaa
            - hipaa
            level: 8
            tsc:
            - tsc
            - tsc
            description: description
            groups:
            - groups
            - groups
            nist-800-53:
            - nist-800-53
            - nist-800-53
            relative_dirname: relative_dirname
            gdpr:
            - gdpr
            - gdpr
            filename: filename
            pci:
            - pci
            - pci
            details: null
            id: 1
            status: enabled
            gpg13:
            - gpg13
            - gpg13
        message: message
    api_controllers_rule_controller_get_rules_files_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseRulesFiles'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - filename: filename
            relative_dirname: relative_dirname
            status: enabled
          - filename: filename
            relative_dirname: relative_dirname
            status: enabled
        message: message
    api_controllers_sca_controller_get_sca_agent_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseSCADatabase'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - fail: 1
            score: 5
            start_scan: 2000-01-23T04:56:07.000+00:00
            policy_id: policy_id
            references: references
            pass: 5
            end_scan: 2000-01-23T04:56:07.000+00:00
            name: name
            description: description
          - fail: 1
            score: 5
            start_scan: 2000-01-23T04:56:07.000+00:00
            policy_id: policy_id
            references: references
            pass: 5
            end_scan: 2000-01-23T04:56:07.000+00:00
            name: name
            description: description
        message: message
    api_controllers_sca_controller_get_sca_checks_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseSCAChecks'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - registry: registry
            process: process
            policy_id: policy_id
            references: references
            description: description
            title: title
            directory: directory
            rationale: rationale
            result: passed
            remediation: remediation
            condition: all
            file: file
            id: 1
          - registry: registry
            process: process
            policy_id: policy_id
            references: references
            description: description
            title: title
            directory: directory
            rationale: rationale
            result: passed
            remediation: remediation
            condition: all
            file: file
            id: 1
        message: message
    api_controllers_syscheck_controller_get_syscheck_agent_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseSyscheckResult'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - date: 2000-01-23T04:56:07.000+00:00
            gid: gid
            perm: perm
            uname: uname
            sha256: sha256
            changes: 1
            gname: gname
            mtime: mtime
            sha1: sha1
            inode: 5
            uid: uid
            file: file
            size: 5
            md5: md5
          - date: 2000-01-23T04:56:07.000+00:00
            gid: gid
            perm: perm
            uname: uname
            sha256: sha256
            changes: 1
            gname: gname
            mtime: mtime
            sha1: sha1
            inode: 5
            uid: uid
            file: file
            size: 5
            md5: md5
        message: message
    api_controllers_syscheck_controller_get_last_scan_agent_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseLastScan'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - start: 2000-01-23T04:56:07.000+00:00
            end: 2000-01-23T04:56:07.000+00:00
          - start: 2000-01-23T04:56:07.000+00:00
            end: 2000-01-23T04:56:07.000+00:00
        message: message
    api_controllers_decoder_controller_get_decoders_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseDecoders'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - name: name
            details: "{}"
            position: 0
          - name: name
            details: "{}"
            position: 0
        message: message
    api_controllers_decoder_controller_get_decoders_files_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseDecodersFiles'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - filename: filename
            relative_dirname: relative_dirname
            status: enabled
          - filename: filename
            relative_dirname: relative_dirname
            status: enabled
        message: message
    api_controllers_event_controller_forward_event_request:
      properties:
        events:
          description: Bulk of events
          items:
            type: string
          type: array
      required:
      - events
      type: object
    api_controllers_experimental_controller_get_hardware_info_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseSyscollectorHardware'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - board_serial: board_serial
            agent_id: agent_id
            scan:
              id: 7
              time: 2000-01-23T04:56:07.000+00:00
            cpu:
              cores: 0
              name: name
              mhz: 0.5962134
            ram:
              total: 0
              usage: 70
              free: 0
          - board_serial: board_serial
            agent_id: agent_id
            scan:
              id: 7
              time: 2000-01-23T04:56:07.000+00:00
            cpu:
              cores: 0
              name: name
              mhz: 0.5962134
            ram:
              total: 0
              usage: 70
              free: 0
        message: message
    api_controllers_experimental_controller_get_network_address_info_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseSyscollectorNetwork'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - broadcast: broadcast
            iface: iface
            address: address
            agent_id: agent_id
            netmask: netmask
            proto: proto
            scan_id: 1
          - broadcast: broadcast
            iface: iface
            address: address
            agent_id: agent_id
            netmask: netmask
            proto: proto
            scan_id: 1
        message: message
    api_controllers_experimental_controller_get_network_interface_info_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseSyscollectorInterface'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - tx:
              bytes: 0
              dropped: 0
              error: 0
              packets: 0
            agent_id: agent_id
            rx:
              bytes: 0
              dropped: 0
              error: 0
              packets: 0
            name: name
            scan:
              id: 7
              time: 2000-01-23T04:56:07.000+00:00
            state: up
            type: type
            mac: mac
            mtu: 0
          - tx:
              bytes: 0
              dropped: 0
              error: 0
              packets: 0
            agent_id: agent_id
            rx:
              bytes: 0
              dropped: 0
              error: 0
              packets: 0
            name: name
            scan:
              id: 7
              time: 2000-01-23T04:56:07.000+00:00
            state: up
            type: type
            mac: mac
            mtu: 0
        message: message
    api_controllers_experimental_controller_get_network_protocol_info_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseSyscollectorProtocol'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - iface: iface
            agent_id: agent_id
            scan_id: 1
            type: ipv4
            dhcp: enabled
            gateway: gateway
          - iface: iface
            agent_id: agent_id
            scan_id: 1
            type: ipv4
            dhcp: enabled
            gateway: gateway
        message: message
    api_controllers_experimental_controller_get_os_info_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseSyscollectorOS'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - hostname: hostname
            os:
              major: major
              minor: minor
              codename: codename
              name: name
              version: version
              platform: platform
            agent_id: agent_id
            release: release
            sysname: sysname
            scan:
              id: 7
              time: 2000-01-23T04:56:07.000+00:00
            version: version
            architecture: architecture
          - hostname: hostname
            os:
              major: major
              minor: minor
              codename: codename
              name: name
              version: version
              platform: platform
            agent_id: agent_id
            release: release
            sysname: sysname
            scan:
              id: 7
              time: 2000-01-23T04:56:07.000+00:00
            version: version
            architecture: architecture
        message: message
    api_controllers_experimental_controller_get_packages_info_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseSyscollectorPackages'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - agent_id: agent_id
            format: pacman
            scan:
              id: 7
              time: 2000-01-23T04:56:07.000+00:00
            description: description
            section: section
            source: source
            priority: priority
            version: version
            size: 1
            vendor: vendor
            name: name
            multiarch: allowed
            architecture: architecture
          - agent_id: agent_id
            format: pacman
            scan:
              id: 7
              time: 2000-01-23T04:56:07.000+00:00
            description: description
            section: section
            source: source
            priority: priority
            version: version
            size: 1
            vendor: vendor
            name: name
            multiarch: allowed
            architecture: architecture
        message: message
    api_controllers_experimental_controller_get_ports_info_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseSyscollectorPorts'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - inode: 1
            protocol: tcp
            process: process
            agent_id: agent_id
            rx_queue: 0
            scan:
              id: 7
              time: 2000-01-23T04:56:07.000+00:00
            tx_queue: 0
            pid: 9
            state: established
            remote:
              port: 0
              ip: ip
            local:
              port: 0
              ip: ip
          - inode: 1
            protocol: tcp
            process: process
            agent_id: agent_id
            rx_queue: 0
            scan:
              id: 7
              time: 2000-01-23T04:56:07.000+00:00
            tx_queue: 0
            pid: 9
            state: established
            remote:
              port: 0
              ip: ip
            local:
              port: 0
              ip: ip
        message: message
    api_controllers_experimental_controller_get_processes_info_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseSyscollectorProcesses'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - egroup: egroup
            ruser: ruser
            pgrp: 5
            agent_id: agent_id
            session: 2
            scan:
              id: 7
              time: 2000-01-23T04:56:07.000+00:00
            pid: pid
            stime: 0
            vm_size: 0
            share: 0
            state: state
            argvs: argvs
            resident: 3
            nlwp: 5
            rgroup: rgroup
            utime: 7
            priority: 7
            processor: 0
            nice: 1
            ppid: 0
            start_time: 1
            sgroup: sgroup
            size: 0
            suser: suser
            euser: euser
            fgroup: fgroup
            name: name
            tgid: 1
            tty: 6
            cmd: cmd
          - egroup: egroup
            ruser: ruser
            pgrp: 5
            agent_id: agent_id
            session: 2
            scan:
              id: 7
              time: 2000-01-23T04:56:07.000+00:00
            pid: pid
            stime: 0
            vm_size: 0
            share: 0
            state: state
            argvs: argvs
            resident: 3
            nlwp: 5
            rgroup: rgroup
            utime: 7
            priority: 7
            processor: 0
            nice: 1
            ppid: 0
            start_time: 1
            sgroup: sgroup
            size: 0
            suser: suser
            euser: euser
            fgroup: fgroup
            name: name
            tgid: 1
            tty: 6
            cmd: cmd
        message: message
    api_controllers_experimental_controller_get_hotfixes_info_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseSyscollectorHotfixes'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - hotfix: hotfix
            scan:
              id: 7
              time: 2000-01-23T04:56:07.000+00:00
          - hotfix: hotfix
            scan:
              id: 7
              time: 2000-01-23T04:56:07.000+00:00
        message: message
    api_controllers_security_controller_deprecated_login_user_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/Token'
        type: object
      example:
        data:
          token: token
        message: message
    api_controllers_security_controller_run_as_login_200_response:
      example:
        token: token
      properties:
        token:
          type: string
      type: object
    api_controllers_security_controller_get_user_me_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseUsers'
        type: object
      example:
        data:
          affected_items:
          - id: 1
            username: wazuh
            allow_run_as: true
            roles:
            - id: 1
              name: administrator
              rule:
                FIND:
                  r'^auth[a-zA-Z]+$':
                  - full_admin
              policies:
              - id: 1
                name: agents_all_resourceless
                policy:
                  actions:
                  - agent:create
                  - group:create
                  resources:
                  - '*:*:*'
                  effect: allow
              - id: 2
                name: agents_all_agents
                policy:
                  actions:
                  - agent:read
                  - agent:delete
                  - agent:modify_group
                  - agent:reconnect
                  - agent:restart
                  - agent:upgrade
                  resources:
                  - agent:id:*
                  - agent:group:*
                  effect: allow
          total_affected_items: 1
          total_failed_items: 0
          failed_items: []
        message: Current user information was returned
        error: 0
    api_controllers_security_controller_edit_run_as_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseUsers'
        type: object
      example:
        data:
          affected_items:
          - id: 1
            username: wazuh
            allow_run_as: true
            roles:
            - 1
          total_affected_items: 1
          total_failed_items: 0
          failed_items: []
        message: Parameter allow_run_as has been enabled for the user
        error: 0
    api_controllers_security_controller_get_rbac_actions_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - type: object
      example:
        message: message
    api_controllers_security_controller_get_users_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseUsers'
        type: object
      example:
        data:
          affected_items:
          - id: 3
            username: administrator
            allow_run_as: true
            roles:
            - 2
          - id: 4
            username: guest
            allow_run_as: false
            roles: []
          - id: 5
            username: normal
            allow_run_as: false
            roles:
            - 4
            - 5
            - 6
          - id: 6
            username: ossec
            allow_run_as: true
            roles:
            - 2
            - 5
          - username: python
            allow_run_as: true
            roles: []
          - id: 7
            username: rbac
            allow_run_as: false
            roles:
            - 3
            - 4
            - 5
          - id: 1
            username: wazuh
            allow_run_as: true
            roles:
            - 1
          - id: 2
            username: wazuh-wui
            allow_run_as: true
            roles: []
          total_affected_items: 8
          total_failed_items: 0
          failed_items: []
        message: All specified users were returned
        error: 0
    api_controllers_security_controller_create_user_request:
      properties:
        username:
          format: names
          maxLength: 64
          minLength: 4
          type: string
        password:
          format: password
          type: string
      required:
      - password
      - username
      type: object
    api_controllers_security_controller_create_user_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseUsers'
        type: object
      example:
        data:
          affected_items:
          - id: 100
            username: TestWazuh
            allow_run_as: false
            roles: []
          total_affected_items: 1
          total_failed_items: 0
          failed_items: []
        message: User was successfully created
        error: 0
    api_controllers_security_controller_delete_users_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseUsers'
        type: object
      example:
        data:
          affected_items:
          - id: 100
            username: new_user
            allow_run_as: false
            roles: []
          - id: 102
            username: another_user
            allow_run_as: true
            roles:
            - 6
          total_affected_items: 2
          total_failed_items: 0
          failed_items: []
        message: Users were successfully deleted
        error: 0
    api_controllers_security_controller_update_user_request:
      properties:
        password:
          format: password
          type: string
      type: object
    api_controllers_security_controller_update_user_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseUsers'
        type: object
      example:
        data:
          affected_items:
          - id: 100
            username: wazuh-test
            allow_run_as: false
            roles:
            - 2
          total_affected_items: 1
          total_failed_items: 0
          failed_items: []
        message: User was successfully updated
        error: 0
    api_controllers_security_controller_get_roles_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseRoles'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - name: name
            rule: "{}"
            id: 1
          - name: name
            rule: "{}"
            id: 1
        message: message
    api_controllers_security_controller_update_rule_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseUsers'
        type: object
      example:
        data:
          affected_items:
          - id: 100
            name: TestWazuhRule
            rule:
              MATCH:
                definition: test_rule_updated
            roles: []
          total_affected_items: 1
          total_failed_items: 0
          failed_items: []
        message: Security rule was successfully updated
        error: 0
    api_controllers_security_controller_get_policies_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponsePolicies'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - name: name
            id: 1
            policy:
              effect: effect
              resources:
              - resources
              - resources
              actions:
              - actions
              - actions
          - name: name
            id: 1
            policy:
              effect: effect
              resources:
              - resources
              - resources
              actions:
              - actions
              - actions
        message: message
    api_controllers_security_controller_set_user_role_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/AllItemsResponseUsers'
        type: object
      example:
        data:
          total_failed_items: 6
          failed_items:
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          - id:
            - SimpleApiError_id_inner
            - SimpleApiError_id_inner
            error:
              key:
                remediation: remediation
                code: 6
                message: message
          total_affected_items: 0
          affected_items:
          - allow_run_as: true
            roles:
            - roles
            - roles
            id: 1
            username: username
          - allow_run_as: true
            roles:
            - roles
            - roles
            id: 1
            username: username
        message: message
    api_controllers_overview_controller_get_overview_agents_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            $ref: '#/components/schemas/OverviewAgents'
        type: object
      example:
        data:
          last_registered_agent:
          - registerIP: registerIP
            status_code: 2
            manager: manager
            os:
              major: major
              uname: uname
              minor: minor
              codename: codename
              name: name
              arch: arch
              version: version
              platform: platform
            configSum: configSum
            lastKeepAlive: lastKeepAlive
            ip: ip
            node_name: node_name
            group_config_status: group_config_status
            version: version
            dateAdd: dateAdd
            name: name
            id: id
            mergedSum: mergedSum
            status: active
            group:
            - group
            - group
          - registerIP: registerIP
            status_code: 2
            manager: manager
            os:
              major: major
              uname: uname
              minor: minor
              codename: codename
              name: name
              arch: arch
              version: version
              platform: platform
            configSum: configSum
            lastKeepAlive: lastKeepAlive
            ip: ip
            node_name: node_name
            group_config_status: group_config_status
            version: version
            dateAdd: dateAdd
            name: name
            id: id
            mergedSum: mergedSum
            status: active
            group:
            - group
            - group
          agent_version:
          - count: 1
            version: version
          - count: 1
            version: version
          nodes:
          - count: 0
            node_name: node_name
          - count: 0
            node_name: node_name
          agent_status:
            configuration:
              total: 2
              synced: 7
              not_synced: 9
            connection:
              total: 0
              disconnected: 1
              never_connected: 5
              pending: 5
              active: 6
          groups:
          - configSum: configSum
            count: 0
            name: name
            mergedSum: mergedSum
          - configSum: configSum
            count: 0
            name: name
            mergedSum: mergedSum
          agent_os:
          - os:
              name: name
              version: version
              platform: platform
            count: 6
          - os:
              name: name
              version: version
              platform: platform
            count: 6
        message: message
    SimpleApiError_error_value:
      example:
        remediation: remediation
        code: 6
        message: message
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        remediation:
          type: string
    SimpleApiError_id_inner:
      oneOf:
      - type: string
      - type: integer
    ApiError_dapi_errors_value:
      example:
        logfile: logfile
        error: error
      properties:
        error:
          type: string
        logfile:
          format: path
          type: string
      type: object
    ItemAffected_affected_items_inner:
      oneOf:
      - type: string
      - type: object
    AllItemsResponseWazuhDaemonStats_allOf_affected_items:
      oneOf:
      - $ref: '#/components/schemas/WazuhRemotedStatsItem'
      - $ref: '#/components/schemas/WazuhAnalysisdStatsItem'
      - $ref: '#/components/schemas/WazuhDBStatsItem'
    AllItemsResponseWazuhDaemonStatsAgents_allOf_affected_items:
      oneOf:
      - $ref: '#/components/schemas/WazuhRemotedStatsAgentsItem'
      - $ref: '#/components/schemas/WazuhAnalysisdStatsAgentsItem'
    AllItemsResponsePolicies_allOf_affected_items:
      oneOf:
      - $ref: '#/components/schemas/PoliciesResponse'
      - type: integer
    AllItemsResponseWazuhStats_allOf_affected_items:
      anyOf:
      - $ref: '#/components/schemas/WazuhStats'
      - $ref: '#/components/schemas/WazuhHourlyStats'
      - $ref: '#/components/schemas/WazuhWeeklyStats'
      - $ref: '#/components/schemas/WazuhAnalysisdStats'
      - $ref: '#/components/schemas/WazuhRemotedStats'
    ActiveResponseBody_alert:
      example:
        data: "{}"
      properties:
        data:
          description: Alert data depending on the active response command executed
          type: object
      type: object
    Agent_os:
      description: Agent OS information
      example:
        major: major
        uname: uname
        minor: minor
        codename: codename
        name: name
        arch: arch
        version: version
        platform: platform
      properties:
        major:
          type: string
        name:
          type: string
        uname:
          type: string
        platform:
          type: string
        version:
          type: string
        codename:
          type: string
        arch:
          type: string
        minor:
          type: string
      type: object
    AgentsSummaryStatus_connection:
      example:
        total: 0
        disconnected: 1
        never_connected: 5
        pending: 5
        active: 6
      properties:
        total:
          format: int32
          type: integer
        active:
          format: int32
          type: integer
        disconnected:
          format: int32
          type: integer
        never_connected:
          format: int32
          type: integer
        pending:
          format: int32
          type: integer
      type: object
    AgentsSummaryStatus_configuration:
      example:
        total: 2
        synced: 7
        not_synced: 9
      properties:
        total:
          format: int32
          type: integer
        synced:
          format: int32
          type: integer
        not_synced:
          format: int32
          type: integer
      type: object
    AgentInsertForce_disconnected_time:
      example:
        value: 1h
        enabled: true
      properties:
        enabled:
          default: true
          description: Enable force disconnected_time option
          type: boolean
        value:
          default: 1h
          description: "Time the agent must has been disconnected to force the insertion.\
            \ Time in seconds, â€˜[n_days]dâ€™, â€˜[n_hours]hâ€™, â€˜[n_minutes]mâ€™ or â€˜[n_seconds]sâ€™\
            . For example, `7d`, `10s` and `10` are valid values. If no time unit\
            \ is specified, seconds are used"
          format: timeframe
          type: string
      type: object
    WazuhRemotedStatsAgentsItem_agents_inner_metrics_messages_received_breakdown_control_breakdown:
      example:
        request: 5
        keepalive: 1
        startup: 2
        shutdown: 5
      properties:
        keepalive:
          description: Keepalive messages from agent
          format: int32
          type: integer
        request:
          description: "Request messages (for example, WPK responses) from agent"
          format: int32
          type: integer
        shutdown:
          description: Shutdown messages from agent
          format: int32
          type: integer
        startup:
          description: Startup messages from agent
          format: int32
          type: integer
      type: object
    WazuhRemotedStatsAgentsItem_agents_inner_metrics_messages_received_breakdown:
      example:
        control_breakdown:
          request: 5
          keepalive: 1
          startup: 2
          shutdown: 5
        control: 6
        event: 7
      properties:
        control:
          description: Control messages received from agent
          format: int32
          type: integer
        control_breakdown:
          $ref: '#/components/schemas/WazuhRemotedStatsAgentsItem_agents_inner_metrics_messages_received_breakdown_control_breakdown'
        event:
          description: "Event messages (syscheck, syscollector, logcollector, etc.)\
            \ received from agent"
          format: int32
          type: integer
      type: object
    WazuhRemotedStatsAgentsItem_agents_inner_metrics_messages_sent_breakdown:
      example:
        sca: 7
        ar: 3
        request: 4
        shared: 1
        discarded: 2
        ack: 9
      properties:
        ack:
          description: "ACK messages (response to keepalive, startup and shutdown)\
            \ sent to agent"
          format: int32
          type: integer
        ar:
          description: Active response messages sent to agent
          format: int32
          type: integer
        discarded:
          description: Messages discarded because the send queue was full (for this
            agent)
          format: int32
          type: integer
        request:
          description: "Request messages (for example, WPK chunks) sent to agent"
          format: int32
          type: integer
        sca:
          description: SCA messages sent to agent
          format: int32
          type: integer
        shared:
          description: Shared configuration messages (merged.mg) sent to agent
          format: int32
          type: integer
      type: object
    WazuhRemotedStatsAgentsItem_agents_inner_metrics_messages:
      example:
        received_breakdown:
          control_breakdown:
            request: 5
            keepalive: 1
            startup: 2
            shutdown: 5
          control: 6
          event: 7
        sent_breakdown:
          sca: 7
          ar: 3
          request: 4
          shared: 1
          discarded: 2
          ack: 9
      properties:
        received_breakdown:
          $ref: '#/components/schemas/WazuhRemotedStatsAgentsItem_agents_inner_metrics_messages_received_breakdown'
        sent_breakdown:
          $ref: '#/components/schemas/WazuhRemotedStatsAgentsItem_agents_inner_metrics_messages_sent_breakdown'
      type: object
    WazuhRemotedStatsAgentsItem_agents_inner_metrics:
      example:
        messages:
          received_breakdown:
            control_breakdown:
              request: 5
              keepalive: 1
              startup: 2
              shutdown: 5
            control: 6
            event: 7
          sent_breakdown:
            sca: 7
            ar: 3
            request: 4
            shared: 1
            discarded: 2
            ack: 9
      properties:
        messages:
          $ref: '#/components/schemas/WazuhRemotedStatsAgentsItem_agents_inner_metrics_messages'
      type: object
    WazuhRemotedStatsAgentsItem_agents_inner:
      example:
        id: 0
        metrics:
          messages:
            received_breakdown:
              control_breakdown:
                request: 5
                keepalive: 1
                startup: 2
                shutdown: 5
              control: 6
              event: 7
            sent_breakdown:
              sca: 7
              ar: 3
              request: 4
              shared: 1
              discarded: 2
              ack: 9
        uptime: 2000-01-23T04:56:07.000+00:00
      properties:
        uptime:
          description: When the count of the metrics started
          format: date-time
          type: string
        id:
          description: Agent ID
          format: int32
          type: integer
        metrics:
          $ref: '#/components/schemas/WazuhRemotedStatsAgentsItem_agents_inner_metrics'
      type: object
    WazuhAnalysisdStatsAgentsItem_agents_inner_metrics_events_received_breakdown_decoded_breakdown_integrations_breakdown:
      properties:
        virustotal:
          description: Events coming from VirusTotal (this agent)
          format: int32
          type: integer
      type: object
    ? WazuhAnalysisdStatsAgentsItem_agents_inner_metrics_events_received_breakdown_decoded_breakdown_modules_breakdown_logcollector_breakdown
    : properties:
        eventchannel:
          description: EventChannel events collected by logcollector (this agent)
          format: int32
          type: integer
        eventlog:
          description: EventLog events collected by logcollector (this agent)
          format: int32
          type: integer
        macos:
          description: MacOS events collected by logcollector (this agent)
          format: int32
          type: integer
        others:
          description: Other events collected by logcollector (this agent)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsAgentsItem_agents_inner_metrics_events_received_breakdown_decoded_breakdown_modules_breakdown:
      properties:
        aws:
          description: Events coming from AWS module (this agent)
          format: int32
          type: integer
        azure:
          description: Events coming from Azure module (this agent)
          format: int32
          type: integer
        ciscat:
          description: Events coming from CIS-CAT module (this agent)
          format: int32
          type: integer
        command:
          description: Events coming from command module (this agent)
          format: int32
          type: integer
        docker:
          description: Events coming from Docker module (this agent)
          format: int32
          type: integer
        gcp:
          description: Events coming from GCP module (this agent)
          format: int32
          type: integer
        github:
          description: Events coming from GitHub module (this agent)
          format: int32
          type: integer
        logcollector_breakdown:
          $ref: '#/components/schemas/WazuhAnalysisdStatsAgentsItem_agents_inner_metrics_events_received_breakdown_decoded_breakdown_modules_breakdown_logcollector_breakdown'
        office365:
          description: Events coming from the Office365 module (this agent)
          format: int32
          type: integer
        ms-graph:
          description: Events coming from the ms-graph module (this agent)
          format: int32
          type: integer
        oscap:
          description: Events coming from the OSCAP module (this agent)
          format: int32
          type: integer
        osquery:
          description: Events coming from the OSQuery module (this agent)
          format: int32
          type: integer
        rootcheck:
          description: Events coming from the rootcheck (syscheckd) (this agent)
          format: int32
          type: integer
        sca:
          description: Events coming from the SCA module (this agent)
          format: int32
          type: integer
        syscheck:
          description: Events coming from the syscheckd (this agent)
          format: int32
          type: integer
        syscollector:
          description: Events coming from the syscollector module (this agent)
          format: int32
          type: integer
        upgrade:
          description: Events coming from the upgrade agent module (this agent)
          format: int32
          type: integer
        vulnerability:
          description: Events coming from the vulnerability detector module (this
            agent)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsAgentsItem_agents_inner_metrics_events_received_breakdown_decoded_breakdown:
      properties:
        agent:
          description: Events coming from agentd (this agent)
          format: int32
          type: integer
        dbsync:
          description: Synchronization events (this agent)
          format: int32
          type: integer
        integrations_breakdown:
          $ref: '#/components/schemas/WazuhAnalysisdStatsAgentsItem_agents_inner_metrics_events_received_breakdown_decoded_breakdown_integrations_breakdown'
        modules_breakdown:
          $ref: '#/components/schemas/WazuhAnalysisdStatsAgentsItem_agents_inner_metrics_events_received_breakdown_decoded_breakdown_modules_breakdown'
        monitor:
          description: Events coming from monitord (this agent)
          format: int32
          type: integer
        remote:
          description: Events coming from remoted (this agent)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsAgentsItem_agents_inner_metrics_events_received_breakdown:
      properties:
        decoded_breakdown:
          $ref: '#/components/schemas/WazuhAnalysisdStatsAgentsItem_agents_inner_metrics_events_received_breakdown_decoded_breakdown'
      type: object
    WazuhAnalysisdStatsAgentsItem_agents_inner_metrics_events_written_breakdown:
      properties:
        alerts:
          description: Alerts written in alerts log file (this agent)
          format: int32
          type: integer
        archives:
          description: Alerts written in archives log file (this agent)
          format: int32
          type: integer
        firewall:
          description: Alerts written in firewall log file (this agent)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsAgentsItem_agents_inner_metrics_events:
      properties:
        processed:
          description: Total processed events (analyzed by rules) from agent
          format: int32
          type: integer
        received_breakdown:
          $ref: '#/components/schemas/WazuhAnalysisdStatsAgentsItem_agents_inner_metrics_events_received_breakdown'
        written_breakdown:
          $ref: '#/components/schemas/WazuhAnalysisdStatsAgentsItem_agents_inner_metrics_events_written_breakdown'
      type: object
    WazuhAnalysisdStatsAgentsItem_agents_inner_metrics:
      properties:
        events:
          $ref: '#/components/schemas/WazuhAnalysisdStatsAgentsItem_agents_inner_metrics_events'
      type: object
    WazuhAnalysisdStatsAgentsItem_agents_inner:
      properties:
        uptime:
          description: When the count of the metrics started
          format: date-time
          type: string
        id:
          description: Agent ID
          format: int32
          type: integer
        metrics:
          $ref: '#/components/schemas/WazuhAnalysisdStatsAgentsItem_agents_inner_metrics'
      type: object
    GroupConfiguration_filters:
      example:
        os: os
        profile: profile
        name: name
      properties:
        os:
          description: OS family where the configuration is being applied
          type: string
        name:
          description: The name of the agent where that configuration is being applied
          type: string
        profile:
          description: Profile name. Any agent configured to use the defined profile
            may use the block
          type: string
      type: object
    NodeHealthcheck_name_info_info:
      allOf:
      - $ref: '#/components/schemas/ClusterNodeBasic'
      - properties:
          totalActiveAgents:
            description: Number of agents currently reporting to that node
            format: int32
            minimum: 0
            type: integer
        type: object
      example:
        ip: ip
        totalActiveAgents: 0
        type: worker
        version: version
    NodeHealthcheck_name_info:
      example:
        name: name
        info:
          ip: ip
          totalActiveAgents: 0
          type: worker
          version: version
      properties:
        name:
          description: Node ID
          type: string
        info:
          $ref: '#/components/schemas/NodeHealthcheck_name_info_info'
      type: object
    NodeHealthcheck_name_status_last_sync_agentinfo:
      example:
        date_end_master: date_end_master
        n_synced_chunks: 6
        date_start_master: date_start_master
      properties:
        date_start_master:
          type: string
        date_end_master:
          type: string
        n_synced_chunks:
          format: int32
          type: integer
      type: object
    NodeHealthcheck_name_status_last_sync_agentgroup:
      example:
        date_start: date_start
        n_synced_chunks: 1
        date_end: date_end
      properties:
        date_start:
          type: string
        date_end:
          type: string
        n_synced_chunks:
          format: int32
          type: integer
      type: object
    NodeHealthcheck_name_status_last_sync_integrity_total_files:
      example:
        shared: 7
        extra: 5
        extra_valid: 5
        missing: 2
      properties:
        extra:
          format: int32
          type: integer
        extra_valid:
          format: int32
          type: integer
        missing:
          format: int32
          type: integer
        shared:
          format: int32
          type: integer
      type: object
    NodeHealthcheck_name_status_last_sync_integrity:
      example:
        date_end_master: date_end_master
        total_files:
          shared: 7
          extra: 5
          extra_valid: 5
          missing: 2
        date_start_master: date_start_master
      properties:
        date_start_master:
          type: string
        date_end_master:
          type: string
        total_files:
          $ref: '#/components/schemas/NodeHealthcheck_name_status_last_sync_integrity_total_files'
      type: object
    NodeHealthcheck_name_status:
      example:
        last_keep_alive: last_keep_alive
        last_sync_agentinfo:
          date_end_master: date_end_master
          n_synced_chunks: 6
          date_start_master: date_start_master
        last_sync_integrity:
          date_end_master: date_end_master
          total_files:
            shared: 7
            extra: 5
            extra_valid: 5
            missing: 2
          date_start_master: date_start_master
        last_sync_full_agentgroup:
          date_start: date_start
          n_synced_chunks: 1
          date_end: date_end
        sync_integrity_free: true
        sync_agent_info_free: true
        last_sync_agentgroup:
          date_start: date_start
          n_synced_chunks: 1
          date_end: date_end
      properties:
        last_keep_alive:
          type: string
        last_sync_agentinfo:
          $ref: '#/components/schemas/NodeHealthcheck_name_status_last_sync_agentinfo'
        last_sync_agentgroup:
          $ref: '#/components/schemas/NodeHealthcheck_name_status_last_sync_agentgroup'
        last_sync_full_agentgroup:
          $ref: '#/components/schemas/NodeHealthcheck_name_status_last_sync_agentgroup'
        last_sync_integrity:
          $ref: '#/components/schemas/NodeHealthcheck_name_status_last_sync_integrity'
        sync_agent_info_free:
          type: boolean
        sync_integrity_free:
          type: boolean
      type: object
    NodeHealthcheck_name:
      example:
        info:
          name: name
          info:
            ip: ip
            totalActiveAgents: 0
            type: worker
            version: version
        status:
          last_keep_alive: last_keep_alive
          last_sync_agentinfo:
            date_end_master: date_end_master
            n_synced_chunks: 6
            date_start_master: date_start_master
          last_sync_integrity:
            date_end_master: date_end_master
            total_files:
              shared: 7
              extra: 5
              extra_valid: 5
              missing: 2
            date_start_master: date_start_master
          last_sync_full_agentgroup:
            date_start: date_start
            n_synced_chunks: 1
            date_end: date_end
          sync_integrity_free: true
          sync_agent_info_free: true
          last_sync_agentgroup:
            date_start: date_start
            n_synced_chunks: 1
            date_end: date_end
      properties:
        info:
          $ref: '#/components/schemas/NodeHealthcheck_name_info'
        status:
          $ref: '#/components/schemas/NodeHealthcheck_name_status'
      type: object
    ClusterLocalInfo_data:
      example:
        node: node
        cluster: cluster
        type: type
      properties:
        node:
          description: Node name
          type: string
        cluster:
          description: Cluster name the node belongs to
          type: string
        type:
          description: Node type
          type: string
    ClusterLocalConfig_data:
      example:
        node_type: master
        nodes:
        - nodes
        - nodes
        hidden: hidden
        port: 0
        name: name
        node_name: node_name
        disabled: true
        bind_addr: bind_addr
        key: key
      properties:
        name:
          description: Cluster name
          type: string
        node_name:
          description: Node name
          type: string
        node_type:
          description: Node type
          enum:
          - master
          - worker
          type: string
        key:
          description: Cluster key used to encrypt messages
          type: string
        port:
          description: Port used by the **master** node to communicate with workers
          type: integer
        bind_addr:
          description: Network interface used by the **master** to listen to incoming
            connections
          type: string
        nodes:
          description: List of cluster master nodes. This list is used by **worker**
            nodes to connect to the master
          items:
            type: string
          type: array
        hidden:
          description: Whether to hide the cluster information in the alerts
          type: string
        disabled:
          description: Whether the cluster is enabled or not
          type: boolean
    ClusterStatus_data:
      example:
        running: "yes"
        enabled: "yes"
      properties:
        enabled:
          description: Whether the cluster is enabled in the Wazuh configuration
          enum:
          - "yes"
          - "no"
          type: string
        running:
          description: Whether the cluster daemon is running
          enum:
          - "yes"
          - "no"
          type: string
    PoliciesRequest_policy:
      description: New policy definition
      example:
        effect: effect
        resources:
        - resources
        - resources
        actions:
        - actions
        - actions
      properties:
        actions:
          description: Actions to perform
          items:
            type: string
          type: array
        resources:
          description: Resources to apply the actions on
          items:
            type: string
          type: array
        effect:
          description: Effect of the policy
          type: string
      required:
      - actions
      - effect
      - resources
      type: object
    PoliciesResponse_policy:
      description: New policy definition
      example:
        effect: effect
        resources:
        - resources
        - resources
        actions:
        - actions
        - actions
      properties:
        actions:
          description: Actions to perform
          items:
            type: string
          type: array
        resources:
          description: Resources to apply the actions on
          items:
            type: string
          type: array
        effect:
          description: Effect of the policy
          type: string
      type: object
    WazuhRemotedStatsItem_metrics_bytes:
      example:
        received: 0
        sent: 6
      properties:
        received:
          description: Bytes received from agents
          format: int32
          type: integer
        sent:
          description: Bytes sent to agents
          format: int32
          type: integer
      type: object
    WazuhRemotedStatsItem_metrics_messages_received_breakdown_control_breakdown:
      example:
        request: 2
        keepalive: 5
        startup: 9
        shutdown: 7
      properties:
        keepalive:
          description: Keepalive messages from agents
          format: int32
          type: integer
        request:
          description: "Request messages (for example, WPK responses) from agents"
          format: int32
          type: integer
        shutdown:
          description: Shutdown messages from agents
          format: int32
          type: integer
        startup:
          description: Startup messages from agents
          format: int32
          type: integer
      type: object
    WazuhRemotedStatsItem_metrics_messages_received_breakdown:
      example:
        discarded: 2
        control_breakdown:
          request: 2
          keepalive: 5
          startup: 9
          shutdown: 7
        ping: 7
        control: 5
        dequeued_after: 3
        event: 4
        unknown: 1
      properties:
        control:
          description: Control messages received from agents
          format: int32
          type: integer
        control_breakdown:
          $ref: '#/components/schemas/WazuhRemotedStatsItem_metrics_messages_received_breakdown_control_breakdown'
        dequeued_after:
          description: Messages dequeued after newer messages (counter < current counter)
          format: int32
          type: integer
        discarded:
          description: Messages discarded because the received queue was full
          format: int32
          type: integer
        event:
          description: "Event messages (syscheck, syscollector, logcollector, etc.)\
            \ received from agents"
          format: int32
          type: integer
        ping:
          description: Ping messages received
          format: int32
          type: integer
        unknown:
          description: Not recognized messages
          format: int32
          type: integer
      type: object
    WazuhRemotedStatsItem_metrics_messages_sent_breakdown:
      example:
        sca: 1
        ar: 1
        request: 7
        shared: 4
        discarded: 6
        ack: 1
      properties:
        ack:
          description: "ACK messages (response to keepalive, startup and shutdown)\
            \ sent to agents"
          format: int32
          type: integer
        ar:
          description: Active response messages sent to agents
          format: int32
          type: integer
        discarded:
          description: Messages discarded because the send queue was full
          format: int32
          type: integer
        request:
          description: "Request messages (for example, WPK chunks) sent to agents"
          format: int32
          type: integer
        sca:
          description: SCA messages sent to agents
          format: int32
          type: integer
        shared:
          description: Shared configuration messages (merged.mg) sent to agents
          format: int32
          type: integer
      type: object
    WazuhRemotedStatsItem_metrics_messages:
      example:
        received_breakdown:
          discarded: 2
          control_breakdown:
            request: 2
            keepalive: 5
            startup: 9
            shutdown: 7
          ping: 7
          control: 5
          dequeued_after: 3
          event: 4
          unknown: 1
        sent_breakdown:
          sca: 1
          ar: 1
          request: 7
          shared: 4
          discarded: 6
          ack: 1
      properties:
        received_breakdown:
          $ref: '#/components/schemas/WazuhRemotedStatsItem_metrics_messages_received_breakdown'
        sent_breakdown:
          $ref: '#/components/schemas/WazuhRemotedStatsItem_metrics_messages_sent_breakdown'
      type: object
    WazuhRemotedStatsItem_metrics_queues_received:
      example:
        size: 5
        usage: 9
      properties:
        size:
          description: Received messages queue size
          format: int32
          type: integer
        usage:
          description: Current usage of the received queue (count)
          format: int32
          type: integer
      type: object
    WazuhRemotedStatsItem_metrics_queues:
      example:
        received:
          size: 5
          usage: 9
      properties:
        received:
          $ref: '#/components/schemas/WazuhRemotedStatsItem_metrics_queues_received'
      type: object
    WazuhRemotedStatsItem_metrics:
      example:
        keys_reload_count: 1
        bytes:
          received: 0
          sent: 6
        queues:
          received:
            size: 5
            usage: 9
        messages:
          received_breakdown:
            discarded: 2
            control_breakdown:
              request: 2
              keepalive: 5
              startup: 9
              shutdown: 7
            ping: 7
            control: 5
            dequeued_after: 3
            event: 4
            unknown: 1
          sent_breakdown:
            sca: 1
            ar: 1
            request: 7
            shared: 4
            discarded: 6
            ack: 1
        tcp_sessions: 9
      properties:
        bytes:
          $ref: '#/components/schemas/WazuhRemotedStatsItem_metrics_bytes'
        keys_reload_count:
          description: Number of times keys were reloaded into memory
          format: int32
          type: integer
        messages:
          $ref: '#/components/schemas/WazuhRemotedStatsItem_metrics_messages'
        queues:
          $ref: '#/components/schemas/WazuhRemotedStatsItem_metrics_queues'
        tcp_sessions:
          description: Current active TCP sessions (agents)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_bytes:
      properties:
        received:
          description: Bytes received from agents and local modules
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_eps:
      properties:
        available_credits:
          description: Available credits to process events in the current timeframe
          format: int32
          type: integer
        available_credits_prev:
          description: Available credits to process events in the previous timeframe
          format: int32
          type: integer
        events_dropped:
          description: Events discarded because the EPS limit was reached and queues
            were full
          format: int32
          type: integer
        events_dropped_not_eps:
          description: Events discarded due to causes unrelated to EPS limit
          format: int32
          type: integer
        seconds_over_limit:
          description: Time in seconds the EPS limit was exceeded
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_events_received_breakdown_decoded_breakdown_integrations_breakdown:
      properties:
        virustotal:
          description: Events coming from VirusTotal integration
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_events_received_breakdown_decoded_breakdown_modules_breakdown_logcollector_breakdown:
      properties:
        eventchannel:
          description: EventChannel events collected by logcollector
          format: int32
          type: integer
        eventlog:
          description: EventLog events collected by logcollector
          format: int32
          type: integer
        macos:
          description: MacOS events collected by logcollector
          format: int32
          type: integer
        others:
          description: Other events collected by logcollector
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_events_received_breakdown_decoded_breakdown_modules_breakdown:
      properties:
        aws:
          description: Events coming from AWS module
          format: int32
          type: integer
        azure:
          description: Events coming from Azure module
          format: int32
          type: integer
        ciscat:
          description: Events coming from CIS-CAT module
          format: int32
          type: integer
        command:
          description: Events coming from command module
          format: int32
          type: integer
        docker:
          description: Events coming from Docker module
          format: int32
          type: integer
        gcp:
          description: Events coming from GCP module
          format: int32
          type: integer
        github:
          description: Events coming from GitHub module
          format: int32
          type: integer
        logcollector_breakdown:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_events_received_breakdown_decoded_breakdown_modules_breakdown_logcollector_breakdown'
        office365:
          description: Events coming from Office365 module
          format: int32
          type: integer
        ms-graph:
          description: Events coming from ms-graph module
          format: int32
          type: integer
        oscap:
          description: Events coming from OSCAP module
          format: int32
          type: integer
        osquery:
          description: Events coming from OSQuery module
          format: int32
          type: integer
        rootcheck:
          description: Events coming from rootcheck (syscheckd)
          format: int32
          type: integer
        sca:
          description: Events coming from SCA module
          format: int32
          type: integer
        syscheck:
          description: Events coming from syscheckd
          format: int32
          type: integer
        syscollector:
          description: Events coming from syscollector module
          format: int32
          type: integer
        upgrade:
          description: Events coming from upgrade agent module (upgrade responses)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_events_received_breakdown_decoded_breakdown:
      properties:
        agent:
          description: Events coming from agentd
          format: int32
          type: integer
        agentless:
          description: Events coming from agentlessd
          format: int32
          type: integer
        dbsync:
          description: Synchronization events
          format: int32
          type: integer
        integrations_breakdown:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_events_received_breakdown_decoded_breakdown_integrations_breakdown'
        modules_breakdown:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_events_received_breakdown_decoded_breakdown_modules_breakdown'
        monitor:
          description: Events coming from monitord
          format: int32
          type: integer
        remote:
          description: Events coming from remoted
          format: int32
          type: integer
        syslog:
          description: Events coming from syslog remoted
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_events_received_breakdown_dropped_breakdown_integrations_breakdown:
      properties:
        virustotal:
          description: Events discarded from VirusTotal integration because the queue
            was full
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_events_received_breakdown_dropped_breakdown_modules_breakdown_logcollector_breakdown:
      properties:
        eventchannel:
          description: EventChannel events collected by logcollector discarded because
            the queue was full
          format: int32
          type: integer
        eventlog:
          description: EventLog events collected by logcollector discarded because
            the queue was full
          format: int32
          type: integer
        macos:
          description: MacOS events collected by logcollector discarded because the
            queue was full
          format: int32
          type: integer
        others:
          description: Other events collected by logcollector discarded because the
            queue was full
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_events_received_breakdown_dropped_breakdown_modules_breakdown:
      properties:
        aws:
          description: Events discarded from AWS module because the queue was full
          format: int32
          type: integer
        azure:
          description: Events discarded from Azure module because the queue was full
          format: int32
          type: integer
        ciscat:
          description: Events discarded from CIS-CAT module because the queue was
            full
          format: int32
          type: integer
        command:
          description: Events discarded from command module because the queue was
            full
          format: int32
          type: integer
        docker:
          description: Events discarded from Docker module because the queue was full
          format: int32
          type: integer
        gcp:
          description: Events discarded from GCP module because the queue was full
          format: int32
          type: integer
        github:
          description: Events discarded from GitHub module because the queue was full
          format: int32
          type: integer
        logcollector_breakdown:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_events_received_breakdown_dropped_breakdown_modules_breakdown_logcollector_breakdown'
        office365:
          description: Events discarded from Office365 module because the queue was
            full
          format: int32
          type: integer
        ms-graph:
          description: Events discarded from ms-graph module because the queue was
            full
          format: int32
          type: integer
        oscap:
          description: Events discarded from OSCAP module because the queue was full
          format: int32
          type: integer
        osquery:
          description: Events discarded from OSQuery module because the queue was
            full
          format: int32
          type: integer
        rootcheck:
          description: Events discarded from rootcheck (syscheckd) because the queue
            was full
          format: int32
          type: integer
        sca:
          description: Events discarded from SCA module because the queue was full
          format: int32
          type: integer
        syscheck:
          description: Events discarded from syscheckd because the queue was full
          format: int32
          type: integer
        syscollector:
          description: Events discarded from syscollector module because the queue
            was full
          format: int32
          type: integer
        upgrade:
          description: Events discarded from upgrade agent module because the queue
            was full
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_events_received_breakdown_dropped_breakdown:
      properties:
        agent:
          description: Events discarded from agentd because the queue was full
          format: int32
          type: integer
        agentless:
          description: Events discarded from agentlessd because the queue was full
          format: int32
          type: integer
        dbsync:
          description: Synchronization events discarded because the queue was full
          format: int32
          type: integer
        integrations_breakdown:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_events_received_breakdown_dropped_breakdown_integrations_breakdown'
        modules_breakdown:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_events_received_breakdown_dropped_breakdown_modules_breakdown'
        monitor:
          description: Events discarded from monitord because the queue was full
          format: int32
          type: integer
        remote:
          description: Events discarded from remoted because the queue was full
          format: int32
          type: integer
        syslog:
          description: Events discarded from syslog remoted because the queue was
            full
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_events_received_breakdown:
      properties:
        decoded_breakdown:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_events_received_breakdown_decoded_breakdown'
        dropped_breakdown:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_events_received_breakdown_dropped_breakdown'
      type: object
    WazuhAnalysisdStatsItem_metrics_events_written_breakdown:
      properties:
        alerts:
          description: Alerts written in alerts log file
          format: int32
          type: integer
        archives:
          description: Alerts written in archives log file
          format: int32
          type: integer
        firewall:
          description: Alerts written in firewall log file
          format: int32
          type: integer
        fts:
          description: Alerts written in FTS queue file
          format: int32
          type: integer
        stats:
          description: Alerts written in stats files
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_events:
      properties:
        processed:
          description: Total processed events (analyzed by rules)
          format: int32
          type: integer
        received:
          description: Total received events from agents and local modules
          format: int32
          type: integer
        received_breakdown:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_events_received_breakdown'
        written_breakdown:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_events_written_breakdown'
      type: object
    WazuhAnalysisdStatsItem_metrics_queues_alerts:
      properties:
        size:
          description: Alerts messages queue size
          format: int32
          type: integer
        usage:
          description: Current usage of the alerts queue (percentage)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_queues_archives:
      properties:
        size:
          description: Archives messages queue size
          format: int32
          type: integer
        usage:
          description: Current usage of the archives queue (percentage)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_queues_dbsync:
      properties:
        size:
          description: DBsync messages queue size
          format: int32
          type: integer
        usage:
          description: Current usage of the dbsync queue (percentage)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_queues_eventchannel:
      properties:
        size:
          description: EventChannel messages queue size
          format: int32
          type: integer
        usage:
          description: Current usage of the eventchannel queue (percentage)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_queues_firewall:
      properties:
        size:
          description: Firewall messages queue size
          format: int32
          type: integer
        usage:
          description: Current usage of the firewall queue (percentage)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_queues_fts:
      properties:
        size:
          description: FTS messages queue size
          format: int32
          type: integer
        usage:
          description: Current usage of the FTS queue (percentage)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_queues_hostinfo:
      properties:
        size:
          description: Hostinfo messages queue size
          format: int32
          type: integer
        usage:
          description: Current usage of the hostinfo queue (percentage)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_queues_others:
      properties:
        size:
          description: Other events messages queue size
          format: int32
          type: integer
        usage:
          description: Current usage of the other events queue (percentage)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_queues_processed:
      properties:
        size:
          description: Processed messages queue size
          format: int32
          type: integer
        usage:
          description: Current usage of the processed queue (percentage)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_queues_rootcheck:
      properties:
        size:
          description: Rootcheck messages queue size
          format: int32
          type: integer
        usage:
          description: Current usage of the rootcheck queue (percentage)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_queues_sca:
      properties:
        size:
          description: SCA messages queue size
          format: int32
          type: integer
        usage:
          description: Current usage of the SCA queue (percentage)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_queues_stats:
      properties:
        size:
          description: Stats messages queue size
          format: int32
          type: integer
        usage:
          description: Current usage of the stats queue (percentage)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_queues_syscheck:
      properties:
        size:
          description: Syscheck messages queue size
          format: int32
          type: integer
        usage:
          description: Current usage of the syscheck queue (percentage)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_queues_syscollector:
      properties:
        size:
          description: Syscollector messages queue size
          format: int32
          type: integer
        usage:
          description: Current usage of the syscollector queue (percentage)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_queues_upgrade:
      properties:
        size:
          description: Upgrade messages queue size
          format: int32
          type: integer
        usage:
          description: Current usage of the upgrade queue (percentage)
          format: int32
          type: integer
      type: object
    WazuhAnalysisdStatsItem_metrics_queues:
      properties:
        alerts:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_queues_alerts'
        archives:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_queues_archives'
        dbsync:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_queues_dbsync'
        eventchannel:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_queues_eventchannel'
        firewall:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_queues_firewall'
        fts:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_queues_fts'
        hostinfo:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_queues_hostinfo'
        others:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_queues_others'
        processed:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_queues_processed'
        rootcheck:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_queues_rootcheck'
        sca:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_queues_sca'
        stats:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_queues_stats'
        syscheck:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_queues_syscheck'
        syscollector:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_queues_syscollector'
        upgrade:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_queues_upgrade'
      type: object
    WazuhAnalysisdStatsItem_metrics:
      properties:
        bytes:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_bytes'
        eps:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_eps'
        events:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_events'
        queues:
          $ref: '#/components/schemas/WazuhAnalysisdStatsItem_metrics_queues'
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_db:
      description: Number of queries per operation
      properties:
        begin:
          format: int32
          type: integer
        close:
          format: int32
          type: integer
        commit:
          format: int32
          type: integer
        remove:
          format: int32
          type: integer
        sql:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_ciscat:
      properties:
        ciscat:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_rootcheck:
      properties:
        rootcheck:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_sca:
      properties:
        sca:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_sync:
      properties:
        dbsync:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_syscheck:
      properties:
        fim_file:
          format: int32
          type: integer
        fim_registry:
          format: int32
          type: integer
        fim_registry_key:
          format: int32
          type: integer
        fim_registry_value:
          format: int32
          type: integer
        syscheck:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_syscollector_deprecated:
      properties:
        hardware:
          format: int32
          type: integer
        hotfix:
          format: int32
          type: integer
        netaddr:
          format: int32
          type: integer
        netinfo:
          format: int32
          type: integer
        netproto:
          format: int32
          type: integer
        osinfo:
          format: int32
          type: integer
        package:
          format: int32
          type: integer
        port:
          format: int32
          type: integer
        process:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_syscollector:
      properties:
        syscollector_hotfixes:
          format: int32
          type: integer
        syscollector_hwinfo:
          format: int32
          type: integer
        syscollector_network_address:
          format: int32
          type: integer
        syscollector_network_iface:
          format: int32
          type: integer
        syscollector_network_protocol:
          format: int32
          type: integer
        syscollector_osinfo:
          format: int32
          type: integer
        syscollector_packages:
          format: int32
          type: integer
        syscollector_ports:
          format: int32
          type: integer
        syscollector_processes:
          format: int32
          type: integer
        deprecated:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_syscollector_deprecated'
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables:
      description: Number of queries per table
      properties:
        ciscat:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_ciscat'
        rootcheck:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_rootcheck'
        sca:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_sca'
        sync:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_sync'
        syscheck:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_syscheck'
        syscollector:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_syscollector'
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown:
      properties:
        db:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_db'
        tables:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables'
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown_db:
      description: Number of queries per operation
      properties:
        backup:
          format: int32
          type: integer
        sql:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown_tables_agent:
      properties:
        delete-agent:
          format: int32
          type: integer
        disconnect-agents:
          format: int32
          type: integer
        find-agent:
          format: int32
          type: integer
        get-agent-info:
          format: int32
          type: integer
        get-agents-by-connection-status:
          format: int32
          type: integer
        get-all-agents:
          format: int32
          type: integer
        get-groups-integrity:
          format: int32
          type: integer
        insert-agent:
          format: int32
          type: integer
        reset-agents-connection:
          format: int32
          type: integer
        select-agent-group:
          format: int32
          type: integer
        select-agent-name:
          format: int32
          type: integer
        set-agent-groups:
          format: int32
          type: integer
        sync-agent-groups-get:
          format: int32
          type: integer
        sync-agent-info-get:
          format: int32
          type: integer
        sync-agent-info-set":
          format: int32
          type: integer
        update-agent-data:
          format: int32
          type: integer
        update-agent-name:
          format: int32
          type: integer
        update-connection-status:
          format: int32
          type: integer
        update-keepalive:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown_tables_belongs:
      properties:
        get-group-agents:
          format: int32
          type: integer
        select-group-belong:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown_tables_group:
      properties:
        delete-group:
          format: int32
          type: integer
        find-group:
          format: int32
          type: integer
        insert-agent-group:
          format: int32
          type: integer
        select-groups:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown_tables_labels:
      properties:
        get-labels:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown_tables:
      description: Number of queries per operation in tables
      properties:
        agent:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown_tables_agent'
        belongs:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown_tables_belongs'
        group:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown_tables_group'
        labels:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown_tables_labels'
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown:
      properties:
        db:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown_db'
        tables:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown_tables'
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_mitre_breakdown_db:
      description: Number of queries per operation
      properties:
        sql:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_mitre_breakdown:
      properties:
        db:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_mitre_breakdown_db'
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_task_breakdown_tables_tasks:
      properties:
        delete_old:
          format: int32
          type: integer
        set_timeout:
          format: int32
          type: integer
        upgrade:
          format: int32
          type: integer
        upgrade_cancel_tasks:
          format: int32
          type: integer
        upgrade_custom:
          format: int32
          type: integer
        upgrade_get_status:
          format: int32
          type: integer
        upgrade_result:
          format: int32
          type: integer
        upgrade_update_status:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_task_breakdown_tables:
      description: Number of queries per operation in tables
      properties:
        tasks:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_task_breakdown_tables_tasks'
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_task_breakdown:
      properties:
        db:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_mitre_breakdown_db'
        tables:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_task_breakdown_tables'
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_wazuhdb_breakdown_db:
      description: Number of queries per operation
      properties:
        remove:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown_wazuhdb_breakdown:
      properties:
        db:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_wazuhdb_breakdown_db'
      type: object
    WazuhDBStatsItem_metrics_queries_received_breakdown:
      properties:
        agent:
          description: Number of agent queries through WazuhDB socket
          format: int32
          type: integer
        agent_breakdown:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown'
        global:
          description: Number of global queries through WazuhDB socket
          format: int32
          type: integer
        global_breakdown:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown'
        mitre:
          description: Number of mitre queries through WazuhDB socket
          format: int32
          type: integer
        mitre_breakdown:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_mitre_breakdown'
        task:
          description: Number of task queries through WazuhDB socket
          format: int32
          type: integer
        task_breakdown:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_task_breakdown'
        wazuhdb:
          description: Number of wazuhdb queries through WazuhDB socket
          format: int32
          type: integer
        wazuhdb_breakdown:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_wazuhdb_breakdown'
      type: object
    WazuhDBStatsItem_metrics_queries:
      properties:
        received:
          description: Total number of queries through WazuhDB socket
          format: int32
          type: integer
        received_breakdown:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown'
      type: object
    WazuhDBStatsItem_metrics_time_execution_breakdown_agent_breakdown_db:
      description: Time taken by all queries per operation (milliseconds)
      properties:
        begin:
          format: int32
          type: integer
        close:
          format: int32
          type: integer
        commit:
          format: int32
          type: integer
        remove:
          format: int32
          type: integer
        sql:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_time_execution_breakdown_agent_breakdown_tables:
      description: Time taken by all queries per table (milliseconds)
      properties:
        ciscat:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_ciscat'
        rootcheck:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_rootcheck'
        sca:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_sca'
        sync:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_sync'
        syscheck:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_syscheck'
        syscollector:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_agent_breakdown_tables_syscollector'
      type: object
    WazuhDBStatsItem_metrics_time_execution_breakdown_agent_breakdown:
      properties:
        db:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_time_execution_breakdown_agent_breakdown_db'
        tables:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_time_execution_breakdown_agent_breakdown_tables'
      type: object
    WazuhDBStatsItem_metrics_time_execution_breakdown_global_breakdown_db:
      description: Time taken by all queries per operation (milliseconds)
      properties:
        backup:
          format: int32
          type: integer
        sql:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_time_execution_breakdown_global_breakdown_tables:
      description: Time taken by all queries per operation in tables (milliseconds)
      properties:
        agent:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown_tables_agent'
        belongs:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown_tables_belongs'
        group:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown_tables_group'
        labels:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_global_breakdown_tables_labels'
      type: object
    WazuhDBStatsItem_metrics_time_execution_breakdown_global_breakdown:
      properties:
        db:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_time_execution_breakdown_global_breakdown_db'
        tables:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_time_execution_breakdown_global_breakdown_tables'
      type: object
    WazuhDBStatsItem_metrics_time_execution_breakdown_mitre_breakdown_db:
      description: Time taken by all queries per operation (milliseconds)
      properties:
        sql:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_time_execution_breakdown_mitre_breakdown:
      properties:
        db:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_time_execution_breakdown_mitre_breakdown_db'
      type: object
    WazuhDBStatsItem_metrics_time_execution_breakdown_task_breakdown_tables:
      description: Time taken by all queries per operation in tables (milliseconds)
      properties:
        tasks:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries_received_breakdown_task_breakdown_tables_tasks'
      type: object
    WazuhDBStatsItem_metrics_time_execution_breakdown_task_breakdown:
      properties:
        db:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_time_execution_breakdown_mitre_breakdown_db'
        tables:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_time_execution_breakdown_task_breakdown_tables'
      type: object
    WazuhDBStatsItem_metrics_time_execution_breakdown_wazuhdb_breakdown_db:
      description: Time taken by all queries per operation (milliseconds)
      properties:
        remove:
          format: int32
          type: integer
      type: object
    WazuhDBStatsItem_metrics_time_execution_breakdown_wazuhdb_breakdown:
      properties:
        db:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_time_execution_breakdown_wazuhdb_breakdown_db'
      type: object
    WazuhDBStatsItem_metrics_time_execution_breakdown:
      properties:
        agent:
          description: Time taken by all agent queries (milliseconds)
          format: int32
          type: integer
        agent_breakdown:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_time_execution_breakdown_agent_breakdown'
        global:
          description: Time taken by all global queries (milliseconds)
          format: int32
          type: integer
        global_breakdown:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_time_execution_breakdown_global_breakdown'
        mitre:
          description: Time taken by all mitre queries (milliseconds)
          format: int32
          type: integer
        mitre_breakdown:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_time_execution_breakdown_mitre_breakdown'
        task:
          description: Time taken by all task queries (milliseconds)
          format: int32
          type: integer
        task_breakdown:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_time_execution_breakdown_task_breakdown'
        wazuhdb:
          description: Time taken by all wazuhdb queries (milliseconds)
          format: int32
          type: integer
        wazuhdb_breakdown:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_time_execution_breakdown_wazuhdb_breakdown'
      type: object
    WazuhDBStatsItem_metrics_time:
      properties:
        execution:
          description: Total time taken by all the queries (milliseconds)
          format: int32
          type: integer
        execution_breakdown:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_time_execution_breakdown'
      type: object
    WazuhDBStatsItem_metrics:
      properties:
        queries:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_queries'
        time:
          $ref: '#/components/schemas/WazuhDBStatsItem_metrics_time'
      type: object
    WazuhStats_inner_alerts_inner:
      example:
        times: 1
        level: 9
        sigid: 0
      properties:
        sigid:
          description: Rule ID that matched the event
          format: int32
          type: integer
        level:
          description: Alert level
          format: int32
          maximum: 15
          minimum: 0
          type: integer
        times:
          description: Number of times the alert was raised during the specified hour
          format: int32
          type: integer
      type: object
    WazuhStats_inner:
      example:
        alerts:
        - times: 1
          level: 9
          sigid: 0
        - times: 1
          level: 9
          sigid: 0
        syscheck: 7
        totalAlerts: 9
        hour: 2
        firewall: 5
        events: 5
      properties:
        alerts:
          items:
            $ref: '#/components/schemas/WazuhStats_inner_alerts_inner'
          type: array
        events:
          description: Number of events processed during the specified hour
          format: int32
          type: integer
        firewall:
          description: Number of firewall alerts raised during the specified hour
          format: int32
          type: integer
        hour:
          description: Hour of the day in 24h format
          format: int32
          type: integer
        syscheck:
          description: Number of syscheck alerts raised during the specified hour
          format: int32
          type: integer
        totalAlerts:
          description: Number of alerts raised during the specified hour
          format: int32
          type: integer
      type: object
    APIconfiguration_access:
      additionalProperties: false
      description: API Security Options
      properties:
        max_login_attempts:
          description: "Maximum number of login attempts in {block_time} seconds"
          example: 50
          format: int32
          minimum: 1
          type: integer
        block_time:
          description: "Blocking time for IPs that have exceeded {max_login_attempts}.\
            \ Time counts from the first attempt"
          example: 300
          format: int32
          minimum: 0
          type: integer
        max_request_per_minute:
          description: Maximum number of requests allowed per minute
          example: 300
          format: int32
          minimum: 1
          type: integer
      type: object
    APIconfiguration_logs:
      additionalProperties: false
      properties:
        level:
          default: info
          description: Verbosity level of API logs
          enum:
          - disabled
          - info
          - warning
          - error
          - debug
          - debug2
          type: string
      type: object
    APIconfiguration_cors:
      additionalProperties: false
      properties:
        enabled:
          default: false
          description: Enable CORS
          type: boolean
        source_route:
          description: Sources for which the resources will be available. For example
            'http://client.example.org'
          example: '*'
          type: string
        expose_headers:
          description: Which headers can be exposed as part of the response
          example: '*'
          type: string
        allow_headers:
          description: Which HTTP headers can be used during the actual request
          example: '*'
          type: string
        allow_credentials:
          default: false
          description: Browsers will only expose the response to frontend JavaScript
            code if this is enabled
          type: boolean
      type: object
    NewVersions_last_available_major_semver:
      example:
        patch: 1
        major: 0
        minor: 6
      properties:
        major:
          format: int32
          type: integer
        minor:
          format: int32
          type: integer
        patch:
          format: int32
          type: integer
      type: object
    NewVersions_last_available_major:
      description: Information about the most recent available major update
      example:
        semver:
          patch: 1
          major: 0
          minor: 6
        description: description
        tag: tag
        title: title
        published_date: published_date
      properties:
        tag:
          description: Version in the format vX.Y.Z
          type: string
        description:
          type: string
        title:
          type: string
        published_date:
          type: string
        semver:
          $ref: '#/components/schemas/NewVersions_last_available_major_semver'
      type: object
    NewVersions_last_available_minor:
      description: Information about the most recent available minor update
      example:
        semver:
          patch: 1
          major: 0
          minor: 6
        description: description
        tag: tag
        title: title
        published_date: published_date
      properties:
        tag:
          description: Version in the format vX.Y.Z
          type: string
        description:
          type: string
        title:
          type: string
        published_date:
          type: string
        semver:
          $ref: '#/components/schemas/NewVersions_last_available_major_semver'
      type: object
    NewVersions_last_available_patch:
      description: Information about the most recent available patch update
      example:
        semver:
          patch: 1
          major: 0
          minor: 6
        description: description
        tag: tag
        title: title
        published_date: published_date
      properties:
        tag:
          description: Version in the format vX.Y.Z
          type: string
        description:
          type: string
        title:
          type: string
        published_date:
          type: string
        semver:
          $ref: '#/components/schemas/NewVersions_last_available_major_semver'
      type: object
    Rule_allOf_details:
      description: Rule definition details
      type: object
    SyscollectorHardware_cpu:
      example:
        cores: 0
        name: name
        mhz: 0.5962134
      properties:
        cores:
          description: Number of cores the CPU has
          format: int32
          minimum: 0
          type: integer
        mhz:
          description: Mhz the CPU has
          format: float
          minimum: 0
          type: number
        name:
          description: CPU name
          type: string
      type: object
    SyscollectorHardware_ram:
      example:
        total: 0
        usage: 70
        free: 0
      properties:
        free:
          description: Current free RAM memory
          format: int32
          minimum: 0
          type: integer
        total:
          description: Total RAM memory
          format: int32
          minimum: 0
          type: integer
        usage:
          description: RAM memory currently used
          format: int32
          maximum: 100
          minimum: 0
          type: integer
      type: object
    SyscollectorOS_os:
      example:
        major: major
        minor: minor
        codename: codename
        name: name
        version: version
        platform: platform
      properties:
        codename:
          description: OS version codename
          type: string
        major:
          description: Major release version
          type: string
        minor:
          description: Minor release version
          type: string
        name:
          description: OS name
          type: string
        platform:
          description: OS platform name
          type: string
        version:
          description: Full version name
          type: string
      type: object
    OverviewAgents_nodes_inner:
      example:
        count: 0
        node_name: node_name
      properties:
        count:
          format: int32
          type: integer
        node_name:
          format: alphanumeric_symbols
          type: string
      type: object
    OverviewAgents_agent_os_inner_os:
      example:
        name: name
        version: version
        platform: platform
      properties:
        name:
          format: alphanumeric_symbols
          type: string
        platform:
          format: alphanumeric_symbols
          type: string
        version:
          format: alphanumeric_symbols
          type: string
      type: object
    OverviewAgents_agent_os_inner:
      example:
        os:
          name: name
          version: version
          platform: platform
        count: 6
      properties:
        count:
          format: int32
          type: integer
        os:
          $ref: '#/components/schemas/OverviewAgents_agent_os_inner_os'
      type: object
    OverviewAgents_agent_version_inner:
      example:
        count: 1
        version: version
      properties:
        count:
          format: int32
          type: integer
        version:
          format: alphanumeric_symbols
          type: string
      type: object
  securitySchemes:
    basicAuth:
      description: Intended method to get a token
      scheme: basic
      type: http
      x-basicInfoFunc: api.authentication.check_user
    jwt:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: api.authentication.decode_token
x-rbac-catalog:
  resources:
    '*:*':
      description: "Resource applied in functions acting on resources that do not\
        \ yet exist in the system. We call these functions, resourceless functions"
    agent:group:
      description: Reference agents via group name (i.e. agent:group:web)
    agent:id:
      description: Reference agents via agent ID (i.e. agent:id:001)
    group:id:
      description: Reference agent groups via group ID (i.e. group:id:default)
    node:id:
      description: Reference cluster nodes via node ID (i.e. node:id:worker1)
    decoder:file:
      description: Reference decoder files via its path (i.e. decoder:file:0005-wazuh_decoders.xml)
    list:file:
      description: Reference list files via its filename (i.e. list:file:audit-keys)
    rule:file:
      description: Reference rule files via its path (i.e. rule:file:0610-win-ms_logs_rules.xml)
    policy:id:
      description: Reference security policies via its id (i.e. policy:id:1)
    role:id:
      description: Reference security roles via its id (i.e. role:id:1)
    rule:id:
      description: Reference security rules via its id (i.e. rule:id:1)
    user:id:
      description: Reference security users via its id (i.e. user:id:1)
  actions:
    active-response:command:
      description: Execute active response commands in the agents
      resources:
      - $ref: '#/x-rbac-catalog/resources/agent:id'
      - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions:
        - active-response:command
        resources:
        - agent:id:001
        - agent:group:atlantic
        effect: allow
    agent:create:
      description: Create new agents
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - agent:create
        resources:
        - '*:*:*'
        effect: allow
    agent:read:
      description: "Access agents information (id, name, group, last keep alive, etc)"
      resources:
      - $ref: '#/x-rbac-catalog/resources/agent:id'
      - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions:
        - agent:read
        resources:
        - agent:id:*
        effect: allow
    agent:delete:
      description: Delete agents
      resources:
      - $ref: '#/x-rbac-catalog/resources/agent:id'
      - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions:
        - agent:delete
        resources:
        - agent:id:010
        - agent:group:pacific
        effect: allow
    agent:modify_group:
      description: Change the group of agents
      resources:
      - $ref: '#/x-rbac-catalog/resources/agent:id'
      - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions:
        - agent:modify_group
        resources:
        - agent:id:004
        - agent:group:us-east
        effect: allow
    group:modify_assignments:
      description: Change the agents assigned to the group
      resources:
      - $ref: '#/x-rbac-catalog/resources/group:id'
      example:
        actions:
        - group:modify_assignments
        resources:
        - group:id:*
        effect: allow
    agent:upgrade:
      description: Upgrade the version of the agents
      resources:
      - $ref: '#/x-rbac-catalog/resources/agent:id'
      - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions:
        - agent:upgrade
        resources:
        - agent:id:001
        - agent:group:mediterranean
        effect: allow
    agent:reconnect:
      description: Force reconnect agents
      resources:
      - $ref: '#/x-rbac-catalog/resources/agent:id'
      - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions:
        - agent:reconnect
        resources:
        - agent:id:050
        - agent:id:049
        effect: deny
    agent:restart:
      description: Restart agents
      resources:
      - $ref: '#/x-rbac-catalog/resources/agent:id'
      - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions:
        - agent:restart
        resources:
        - agent:id:050
        - agent:id:049
        effect: deny
    agent:uninstall:
      description: Check user's permission to uninstall agents
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - agent:uninstall
        resources:
        - '*:*:*'
        effect: allow
    group:create:
      description: Create new agent groups
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - group:create
        resources:
        - '*:*:*'
        effect: allow
    group:read:
      description: "Access agent groups information (id, name, agents, etc)"
      resources:
      - $ref: '#/x-rbac-catalog/resources/group:id'
      example:
        actions:
        - group:create
        resources:
        - group:id:*
        effect: allow
    group:update_config:
      description: Change the configuration of agent groups
      resources:
      - $ref: '#/x-rbac-catalog/resources/group:id'
      example:
        actions:
        - group:update_config
        resources:
        - group:id:*
        effect: deny
    group:delete:
      description: Delete agent groups
      resources:
      - $ref: '#/x-rbac-catalog/resources/group:id'
      example:
        actions:
        - group:delete
        resources:
        - group:id:*
        effect: allow
    ciscat:read:
      description: Access CIS-CAT results for agents
      resources:
      - $ref: '#/x-rbac-catalog/resources/agent:id'
      - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions:
        - ciscat:read
        resources:
        - agent:id:001
        - agent:id:003
        - agent:group:default
        effect: deny
    cluster:read:
      description: Read Wazuh's cluster nodes configuration
      resources:
      - $ref: '#/x-rbac-catalog/resources/node:id'
      example:
        actions:
        - cluster:read
        resources:
        - node:id:worker1
        - node:id:worker3
        effect: deny
    cluster:update_config:
      description: Change the Wazuh's cluster node configuration
      resources:
      - $ref: '#/x-rbac-catalog/resources/node:id'
      example:
        actions:
        - cluster:update_config
        resources:
        - node:id:worker1
        effect: allow
    cluster:read_api_config:
      description: Check Wazuh's cluster nodes API configuration
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - cluster:read_api_config
        resources:
        - node:id:worker1
        - node:id:worker3
        effect: allow
    cluster:restart:
      description: Restart Wazuh's cluster nodes
      resources:
      - $ref: '#/x-rbac-catalog/resources/node:id'
      example:
        actions:
        - cluster:restart
        resources:
        - node:id:worker1
        effect: allow
    cluster:status:
      description: Check Wazuh's cluster general status
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - cluster:status
        resources:
        - '*:*:*'
        effect: allow
    manager:read:
      description: Read Wazuh manager configuration
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - manager:read
        resources:
        - '*:*:*'
        effect: allow
    manager:update_config:
      description: Update current Wazuh manager configuration
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - manager:update_config
        resources:
        - '*:*:*'
        effect: allow
    manager:read_api_config:
      description: Read Wazuh manager API configuration
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - manager:read_api_config
        resources:
        - '*:*:*'
        effect: allow
    manager:restart:
      description: Restart Wazuh managers
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - manager:restart
        resources:
        - '*:*:*'
        effect: deny
    mitre:read:
      description: Access information from MITRE database
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - mitre:read
        resources:
        - '*:*:*'
        effect: allow
    decoders:read:
      description: Read decoders files
      resources:
      - $ref: '#/x-rbac-catalog/resources/decoder:file'
      example:
        actions:
        - decoders:read
        resources:
        - decoder:file:*
        effect: allow
    decoders:update:
      description: Update or upload custom decoder files
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - decoders:update
        resources:
        - '*:*:*'
        effect: allow
    decoders:delete:
      description: Delete custom decoder files
      resources:
      - $ref: '#/x-rbac-catalog/resources/decoder:file'
      example:
        actions:
        - decoders:delete
        resources:
        - decoder:file:local_decoder.xml
        effect: allow
    lists:read:
      description: Read CDB lists files
      resources:
      - $ref: '#/x-rbac-catalog/resources/list:file'
      example:
        actions:
        - lists:read
        resources:
        - list:file:audit-keys
        effect: deny
    lists:update:
      description: Update or upload CDB lists files
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - lists:update
        resources:
        - '*:*:*'
        effect: allow
    lists:delete:
      description: Delete CDB lists files
      resources:
      - $ref: '#/x-rbac-catalog/resources/list:file'
      example:
        actions:
        - lists:delete
        resources:
        - list:file:audit-keys
        effect: deny
    logtest:run:
      description: Run logtest tool or end a logtest session
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - logtest:run
        resources:
        - '*:*:*'
        effect: allow
    rootcheck:read:
      description: Access information from agents rootcheck database
      resources:
      - $ref: '#/x-rbac-catalog/resources/agent:id'
      - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions:
        - rootcheck:read
        resources:
        - agent:id:011
        effect: allow
    rootcheck:clear:
      description: Clear the agents rootcheck database
      resources:
      - $ref: '#/x-rbac-catalog/resources/agent:id'
      - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions:
        - rootcheck:clear
        resources:
        - agent:id:*
        effect: deny
    rootcheck:run:
      description: Run agents rootcheck scan
      resources:
      - $ref: '#/x-rbac-catalog/resources/agent:id'
      - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions:
        - rootcheck:run
        resources:
        - agent:id:*
        effect: allow
    rules:read:
      description: Read rules files
      resources:
      - $ref: '#/x-rbac-catalog/resources/rule:file'
      example:
        actions:
        - rules:read
        resources:
        - rule:file:0610-win-ms_logs_rules.xml
        effect: allow
    rules:update:
      description: Update or upload custom rule files
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - rules:update
        resources:
        - '*:*:*'
        effect: allow
    rules:delete:
      description: Delete custom rule files
      resources:
      - $ref: '#/x-rbac-catalog/resources/rule:file'
      example:
        actions:
        - rules:delete
        resources:
        - rule:file:0610-win-ms_logs_rules.xml
        effect: allow
    sca:read:
      description: Access agents security configuration assessment
      resources:
      - $ref: '#/x-rbac-catalog/resources/agent:id'
      - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions:
        - sca:read
        resources:
        - agent:id:*
        effect: allow
    security:create:
      description: Create new system security resources
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - security:create
        resources:
        - '*:*:*'
        effect: deny
    security:create_user:
      description: Create new system users
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - security:create_user
        resources:
        - '*:*:*'
        effect: allow
    security:read:
      description: Access information about system security resources
      resources:
      - $ref: '#/x-rbac-catalog/resources/policy:id'
      - $ref: '#/x-rbac-catalog/resources/role:id'
      - $ref: '#/x-rbac-catalog/resources/user:id'
      - $ref: '#/x-rbac-catalog/resources/rule:id'
      example:
        actions:
        - security:read
        resources:
        - policy:id:*
        - role:id:2
        - user:id:5
        - rule:id:3
        effect: allow
    security:edit_run_as:
      description: Change the value of the allow_run_as flag for a user
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - security:edit_run_as
        resources:
        - '*:*:*'
        effect: allow
    security:update:
      description: Update the information of system security resources
      resources:
      - $ref: '#/x-rbac-catalog/resources/policy:id'
      - $ref: '#/x-rbac-catalog/resources/role:id'
      - $ref: '#/x-rbac-catalog/resources/user:id'
      - $ref: '#/x-rbac-catalog/resources/rule:id'
      example:
        actions:
        - security:update
        resources:
        - policy:id:*
        - role:id:4
        - user:id:3
        - rule:id:4
        effect: deny
    security:delete:
      description: Delete system security resources
      resources:
      - $ref: '#/x-rbac-catalog/resources/policy:id'
      - $ref: '#/x-rbac-catalog/resources/role:id'
      - $ref: '#/x-rbac-catalog/resources/user:id'
      - $ref: '#/x-rbac-catalog/resources/rule:id'
      example:
        actions:
        - security:delete
        resources:
        - policy:id:*
        - role:id:3
        - user:id:4
        - rule:id:2
        effect: deny
    security:read_config:
      description: Read current system security configuration
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - security:read_config
        resources:
        - '*:*:*'
        effect: allow
    security:update_config:
      description: Update current system security configuration
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - security:update_config
        resources:
        - '*:*:*'
        effect: allow
    security:revoke:
      description: Revoke all active JWT tokens
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - security:revoke
        resources:
        - '*:*:*'
        effect: deny
    syscheck:read:
      description: Access information from agents syscheck database
      resources:
      - $ref: '#/x-rbac-catalog/resources/agent:id'
      - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions:
        - syscheck:read
        resources:
        - agent:id:011
        - agent:group:us-west
        effect: allow
    syscheck:clear:
      description: Clear the agents syscheck database
      resources:
      - $ref: '#/x-rbac-catalog/resources/agent:id'
      - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions:
        - syscheck:clear
        resources:
        - agent:id:*
        effect: deny
    syscheck:run:
      description: Run agents syscheck scan
      resources:
      - $ref: '#/x-rbac-catalog/resources/agent:id'
      - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions:
        - syscheck:run
        resources:
        - agent:id:*
        effect: allow
    syscollector:read:
      description: Access agents syscollector information
      resources:
      - $ref: '#/x-rbac-catalog/resources/agent:id'
      - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions:
        - syscollector:read
        resources:
        - agent:id:*
        effect: allow
    task:status:
      description: Access task's status information
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - task:status
        resources:
        - '*:*:*'
        effect: deny
    event:ingest:
      description: Ingest events
      resources:
      - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions:
        - event:ingest
        resources:
        - '*:*:*'
        effect: allow
