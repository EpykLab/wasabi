/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the SyscollectorInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyscollectorInterface{}

// SyscollectorInterface struct for SyscollectorInterface
type SyscollectorInterface struct {
	// MAC Address of the network interface
	Mac *string `json:"mac,omitempty"`
	// Network interface's Maximum Transfer Unit
	Mtu *int32 `json:"mtu,omitempty"`
	// Network interface name
	Name *string `json:"name,omitempty"`
	Rx *NetworkInterfaceReceivedPackets `json:"rx,omitempty"`
	Scan *ScanIdTime `json:"scan,omitempty"`
	// Network interface state
	State *string `json:"state,omitempty"`
	Tx *NetworkInterfaceSentPackets `json:"tx,omitempty"`
	// Network interface type
	Type *string `json:"type,omitempty"`
	// Agent ID
	AgentId *string `json:"agent_id,omitempty"`
}

// NewSyscollectorInterface instantiates a new SyscollectorInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyscollectorInterface() *SyscollectorInterface {
	this := SyscollectorInterface{}
	return &this
}

// NewSyscollectorInterfaceWithDefaults instantiates a new SyscollectorInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyscollectorInterfaceWithDefaults() *SyscollectorInterface {
	this := SyscollectorInterface{}
	return &this
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *SyscollectorInterface) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorInterface) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *SyscollectorInterface) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *SyscollectorInterface) SetMac(v string) {
	o.Mac = &v
}

// GetMtu returns the Mtu field value if set, zero value otherwise.
func (o *SyscollectorInterface) GetMtu() int32 {
	if o == nil || IsNil(o.Mtu) {
		var ret int32
		return ret
	}
	return *o.Mtu
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorInterface) GetMtuOk() (*int32, bool) {
	if o == nil || IsNil(o.Mtu) {
		return nil, false
	}
	return o.Mtu, true
}

// HasMtu returns a boolean if a field has been set.
func (o *SyscollectorInterface) HasMtu() bool {
	if o != nil && !IsNil(o.Mtu) {
		return true
	}

	return false
}

// SetMtu gets a reference to the given int32 and assigns it to the Mtu field.
func (o *SyscollectorInterface) SetMtu(v int32) {
	o.Mtu = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SyscollectorInterface) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorInterface) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SyscollectorInterface) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SyscollectorInterface) SetName(v string) {
	o.Name = &v
}

// GetRx returns the Rx field value if set, zero value otherwise.
func (o *SyscollectorInterface) GetRx() NetworkInterfaceReceivedPackets {
	if o == nil || IsNil(o.Rx) {
		var ret NetworkInterfaceReceivedPackets
		return ret
	}
	return *o.Rx
}

// GetRxOk returns a tuple with the Rx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorInterface) GetRxOk() (*NetworkInterfaceReceivedPackets, bool) {
	if o == nil || IsNil(o.Rx) {
		return nil, false
	}
	return o.Rx, true
}

// HasRx returns a boolean if a field has been set.
func (o *SyscollectorInterface) HasRx() bool {
	if o != nil && !IsNil(o.Rx) {
		return true
	}

	return false
}

// SetRx gets a reference to the given NetworkInterfaceReceivedPackets and assigns it to the Rx field.
func (o *SyscollectorInterface) SetRx(v NetworkInterfaceReceivedPackets) {
	o.Rx = &v
}

// GetScan returns the Scan field value if set, zero value otherwise.
func (o *SyscollectorInterface) GetScan() ScanIdTime {
	if o == nil || IsNil(o.Scan) {
		var ret ScanIdTime
		return ret
	}
	return *o.Scan
}

// GetScanOk returns a tuple with the Scan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorInterface) GetScanOk() (*ScanIdTime, bool) {
	if o == nil || IsNil(o.Scan) {
		return nil, false
	}
	return o.Scan, true
}

// HasScan returns a boolean if a field has been set.
func (o *SyscollectorInterface) HasScan() bool {
	if o != nil && !IsNil(o.Scan) {
		return true
	}

	return false
}

// SetScan gets a reference to the given ScanIdTime and assigns it to the Scan field.
func (o *SyscollectorInterface) SetScan(v ScanIdTime) {
	o.Scan = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *SyscollectorInterface) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorInterface) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *SyscollectorInterface) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *SyscollectorInterface) SetState(v string) {
	o.State = &v
}

// GetTx returns the Tx field value if set, zero value otherwise.
func (o *SyscollectorInterface) GetTx() NetworkInterfaceSentPackets {
	if o == nil || IsNil(o.Tx) {
		var ret NetworkInterfaceSentPackets
		return ret
	}
	return *o.Tx
}

// GetTxOk returns a tuple with the Tx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorInterface) GetTxOk() (*NetworkInterfaceSentPackets, bool) {
	if o == nil || IsNil(o.Tx) {
		return nil, false
	}
	return o.Tx, true
}

// HasTx returns a boolean if a field has been set.
func (o *SyscollectorInterface) HasTx() bool {
	if o != nil && !IsNil(o.Tx) {
		return true
	}

	return false
}

// SetTx gets a reference to the given NetworkInterfaceSentPackets and assigns it to the Tx field.
func (o *SyscollectorInterface) SetTx(v NetworkInterfaceSentPackets) {
	o.Tx = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SyscollectorInterface) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorInterface) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SyscollectorInterface) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SyscollectorInterface) SetType(v string) {
	o.Type = &v
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *SyscollectorInterface) GetAgentId() string {
	if o == nil || IsNil(o.AgentId) {
		var ret string
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorInterface) GetAgentIdOk() (*string, bool) {
	if o == nil || IsNil(o.AgentId) {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *SyscollectorInterface) HasAgentId() bool {
	if o != nil && !IsNil(o.AgentId) {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given string and assigns it to the AgentId field.
func (o *SyscollectorInterface) SetAgentId(v string) {
	o.AgentId = &v
}

func (o SyscollectorInterface) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyscollectorInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.Mtu) {
		toSerialize["mtu"] = o.Mtu
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Rx) {
		toSerialize["rx"] = o.Rx
	}
	if !IsNil(o.Scan) {
		toSerialize["scan"] = o.Scan
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Tx) {
		toSerialize["tx"] = o.Tx
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.AgentId) {
		toSerialize["agent_id"] = o.AgentId
	}
	return toSerialize, nil
}

type NullableSyscollectorInterface struct {
	value *SyscollectorInterface
	isSet bool
}

func (v NullableSyscollectorInterface) Get() *SyscollectorInterface {
	return v.value
}

func (v *NullableSyscollectorInterface) Set(val *SyscollectorInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableSyscollectorInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableSyscollectorInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyscollectorInterface(val *SyscollectorInterface) *NullableSyscollectorInterface {
	return &NullableSyscollectorInterface{value: val, isSet: true}
}

func (v NullableSyscollectorInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyscollectorInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


