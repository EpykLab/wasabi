/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the WazuhInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WazuhInfo{}

// WazuhInfo struct for WazuhInfo
type WazuhInfo struct {
	// Wazuh installation path
	Path *string `json:"path,omitempty"`
	// Wazuh version
	Version *string `json:"version,omitempty"`
	// Wazuh installation type
	Type *string `json:"type,omitempty"`
	// Maximum number of agents that can be registered.
	MaxAgents *string `json:"max_agents,omitempty"`
	OpensslSupport *string `json:"openssl_support,omitempty"`
	TzOffset *string `json:"tz_offset,omitempty"`
	TzName *string `json:"tz_name,omitempty"`
}

// NewWazuhInfo instantiates a new WazuhInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWazuhInfo() *WazuhInfo {
	this := WazuhInfo{}
	return &this
}

// NewWazuhInfoWithDefaults instantiates a new WazuhInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWazuhInfoWithDefaults() *WazuhInfo {
	this := WazuhInfo{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *WazuhInfo) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhInfo) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *WazuhInfo) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *WazuhInfo) SetPath(v string) {
	o.Path = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *WazuhInfo) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhInfo) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *WazuhInfo) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *WazuhInfo) SetVersion(v string) {
	o.Version = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WazuhInfo) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhInfo) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WazuhInfo) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WazuhInfo) SetType(v string) {
	o.Type = &v
}

// GetMaxAgents returns the MaxAgents field value if set, zero value otherwise.
func (o *WazuhInfo) GetMaxAgents() string {
	if o == nil || IsNil(o.MaxAgents) {
		var ret string
		return ret
	}
	return *o.MaxAgents
}

// GetMaxAgentsOk returns a tuple with the MaxAgents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhInfo) GetMaxAgentsOk() (*string, bool) {
	if o == nil || IsNil(o.MaxAgents) {
		return nil, false
	}
	return o.MaxAgents, true
}

// HasMaxAgents returns a boolean if a field has been set.
func (o *WazuhInfo) HasMaxAgents() bool {
	if o != nil && !IsNil(o.MaxAgents) {
		return true
	}

	return false
}

// SetMaxAgents gets a reference to the given string and assigns it to the MaxAgents field.
func (o *WazuhInfo) SetMaxAgents(v string) {
	o.MaxAgents = &v
}

// GetOpensslSupport returns the OpensslSupport field value if set, zero value otherwise.
func (o *WazuhInfo) GetOpensslSupport() string {
	if o == nil || IsNil(o.OpensslSupport) {
		var ret string
		return ret
	}
	return *o.OpensslSupport
}

// GetOpensslSupportOk returns a tuple with the OpensslSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhInfo) GetOpensslSupportOk() (*string, bool) {
	if o == nil || IsNil(o.OpensslSupport) {
		return nil, false
	}
	return o.OpensslSupport, true
}

// HasOpensslSupport returns a boolean if a field has been set.
func (o *WazuhInfo) HasOpensslSupport() bool {
	if o != nil && !IsNil(o.OpensslSupport) {
		return true
	}

	return false
}

// SetOpensslSupport gets a reference to the given string and assigns it to the OpensslSupport field.
func (o *WazuhInfo) SetOpensslSupport(v string) {
	o.OpensslSupport = &v
}

// GetTzOffset returns the TzOffset field value if set, zero value otherwise.
func (o *WazuhInfo) GetTzOffset() string {
	if o == nil || IsNil(o.TzOffset) {
		var ret string
		return ret
	}
	return *o.TzOffset
}

// GetTzOffsetOk returns a tuple with the TzOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhInfo) GetTzOffsetOk() (*string, bool) {
	if o == nil || IsNil(o.TzOffset) {
		return nil, false
	}
	return o.TzOffset, true
}

// HasTzOffset returns a boolean if a field has been set.
func (o *WazuhInfo) HasTzOffset() bool {
	if o != nil && !IsNil(o.TzOffset) {
		return true
	}

	return false
}

// SetTzOffset gets a reference to the given string and assigns it to the TzOffset field.
func (o *WazuhInfo) SetTzOffset(v string) {
	o.TzOffset = &v
}

// GetTzName returns the TzName field value if set, zero value otherwise.
func (o *WazuhInfo) GetTzName() string {
	if o == nil || IsNil(o.TzName) {
		var ret string
		return ret
	}
	return *o.TzName
}

// GetTzNameOk returns a tuple with the TzName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhInfo) GetTzNameOk() (*string, bool) {
	if o == nil || IsNil(o.TzName) {
		return nil, false
	}
	return o.TzName, true
}

// HasTzName returns a boolean if a field has been set.
func (o *WazuhInfo) HasTzName() bool {
	if o != nil && !IsNil(o.TzName) {
		return true
	}

	return false
}

// SetTzName gets a reference to the given string and assigns it to the TzName field.
func (o *WazuhInfo) SetTzName(v string) {
	o.TzName = &v
}

func (o WazuhInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WazuhInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.MaxAgents) {
		toSerialize["max_agents"] = o.MaxAgents
	}
	if !IsNil(o.OpensslSupport) {
		toSerialize["openssl_support"] = o.OpensslSupport
	}
	if !IsNil(o.TzOffset) {
		toSerialize["tz_offset"] = o.TzOffset
	}
	if !IsNil(o.TzName) {
		toSerialize["tz_name"] = o.TzName
	}
	return toSerialize, nil
}

type NullableWazuhInfo struct {
	value *WazuhInfo
	isSet bool
}

func (v NullableWazuhInfo) Get() *WazuhInfo {
	return v.value
}

func (v *NullableWazuhInfo) Set(val *WazuhInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableWazuhInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableWazuhInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWazuhInfo(val *WazuhInfo) *NullableWazuhInfo {
	return &NullableWazuhInfo{value: val, isSet: true}
}

func (v NullableWazuhInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWazuhInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


