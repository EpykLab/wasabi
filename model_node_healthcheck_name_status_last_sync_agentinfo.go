/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the NodeHealthcheckNameStatusLastSyncAgentinfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodeHealthcheckNameStatusLastSyncAgentinfo{}

// NodeHealthcheckNameStatusLastSyncAgentinfo struct for NodeHealthcheckNameStatusLastSyncAgentinfo
type NodeHealthcheckNameStatusLastSyncAgentinfo struct {
	DateStartMaster *string `json:"date_start_master,omitempty"`
	DateEndMaster *string `json:"date_end_master,omitempty"`
	NSyncedChunks *int32 `json:"n_synced_chunks,omitempty"`
}

// NewNodeHealthcheckNameStatusLastSyncAgentinfo instantiates a new NodeHealthcheckNameStatusLastSyncAgentinfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeHealthcheckNameStatusLastSyncAgentinfo() *NodeHealthcheckNameStatusLastSyncAgentinfo {
	this := NodeHealthcheckNameStatusLastSyncAgentinfo{}
	return &this
}

// NewNodeHealthcheckNameStatusLastSyncAgentinfoWithDefaults instantiates a new NodeHealthcheckNameStatusLastSyncAgentinfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeHealthcheckNameStatusLastSyncAgentinfoWithDefaults() *NodeHealthcheckNameStatusLastSyncAgentinfo {
	this := NodeHealthcheckNameStatusLastSyncAgentinfo{}
	return &this
}

// GetDateStartMaster returns the DateStartMaster field value if set, zero value otherwise.
func (o *NodeHealthcheckNameStatusLastSyncAgentinfo) GetDateStartMaster() string {
	if o == nil || IsNil(o.DateStartMaster) {
		var ret string
		return ret
	}
	return *o.DateStartMaster
}

// GetDateStartMasterOk returns a tuple with the DateStartMaster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeHealthcheckNameStatusLastSyncAgentinfo) GetDateStartMasterOk() (*string, bool) {
	if o == nil || IsNil(o.DateStartMaster) {
		return nil, false
	}
	return o.DateStartMaster, true
}

// HasDateStartMaster returns a boolean if a field has been set.
func (o *NodeHealthcheckNameStatusLastSyncAgentinfo) HasDateStartMaster() bool {
	if o != nil && !IsNil(o.DateStartMaster) {
		return true
	}

	return false
}

// SetDateStartMaster gets a reference to the given string and assigns it to the DateStartMaster field.
func (o *NodeHealthcheckNameStatusLastSyncAgentinfo) SetDateStartMaster(v string) {
	o.DateStartMaster = &v
}

// GetDateEndMaster returns the DateEndMaster field value if set, zero value otherwise.
func (o *NodeHealthcheckNameStatusLastSyncAgentinfo) GetDateEndMaster() string {
	if o == nil || IsNil(o.DateEndMaster) {
		var ret string
		return ret
	}
	return *o.DateEndMaster
}

// GetDateEndMasterOk returns a tuple with the DateEndMaster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeHealthcheckNameStatusLastSyncAgentinfo) GetDateEndMasterOk() (*string, bool) {
	if o == nil || IsNil(o.DateEndMaster) {
		return nil, false
	}
	return o.DateEndMaster, true
}

// HasDateEndMaster returns a boolean if a field has been set.
func (o *NodeHealthcheckNameStatusLastSyncAgentinfo) HasDateEndMaster() bool {
	if o != nil && !IsNil(o.DateEndMaster) {
		return true
	}

	return false
}

// SetDateEndMaster gets a reference to the given string and assigns it to the DateEndMaster field.
func (o *NodeHealthcheckNameStatusLastSyncAgentinfo) SetDateEndMaster(v string) {
	o.DateEndMaster = &v
}

// GetNSyncedChunks returns the NSyncedChunks field value if set, zero value otherwise.
func (o *NodeHealthcheckNameStatusLastSyncAgentinfo) GetNSyncedChunks() int32 {
	if o == nil || IsNil(o.NSyncedChunks) {
		var ret int32
		return ret
	}
	return *o.NSyncedChunks
}

// GetNSyncedChunksOk returns a tuple with the NSyncedChunks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeHealthcheckNameStatusLastSyncAgentinfo) GetNSyncedChunksOk() (*int32, bool) {
	if o == nil || IsNil(o.NSyncedChunks) {
		return nil, false
	}
	return o.NSyncedChunks, true
}

// HasNSyncedChunks returns a boolean if a field has been set.
func (o *NodeHealthcheckNameStatusLastSyncAgentinfo) HasNSyncedChunks() bool {
	if o != nil && !IsNil(o.NSyncedChunks) {
		return true
	}

	return false
}

// SetNSyncedChunks gets a reference to the given int32 and assigns it to the NSyncedChunks field.
func (o *NodeHealthcheckNameStatusLastSyncAgentinfo) SetNSyncedChunks(v int32) {
	o.NSyncedChunks = &v
}

func (o NodeHealthcheckNameStatusLastSyncAgentinfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodeHealthcheckNameStatusLastSyncAgentinfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DateStartMaster) {
		toSerialize["date_start_master"] = o.DateStartMaster
	}
	if !IsNil(o.DateEndMaster) {
		toSerialize["date_end_master"] = o.DateEndMaster
	}
	if !IsNil(o.NSyncedChunks) {
		toSerialize["n_synced_chunks"] = o.NSyncedChunks
	}
	return toSerialize, nil
}

type NullableNodeHealthcheckNameStatusLastSyncAgentinfo struct {
	value *NodeHealthcheckNameStatusLastSyncAgentinfo
	isSet bool
}

func (v NullableNodeHealthcheckNameStatusLastSyncAgentinfo) Get() *NodeHealthcheckNameStatusLastSyncAgentinfo {
	return v.value
}

func (v *NullableNodeHealthcheckNameStatusLastSyncAgentinfo) Set(val *NodeHealthcheckNameStatusLastSyncAgentinfo) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeHealthcheckNameStatusLastSyncAgentinfo) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeHealthcheckNameStatusLastSyncAgentinfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeHealthcheckNameStatusLastSyncAgentinfo(val *NodeHealthcheckNameStatusLastSyncAgentinfo) *NullableNodeHealthcheckNameStatusLastSyncAgentinfo {
	return &NullableNodeHealthcheckNameStatusLastSyncAgentinfo{value: val, isSet: true}
}

func (v NullableNodeHealthcheckNameStatusLastSyncAgentinfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeHealthcheckNameStatusLastSyncAgentinfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


