/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the SyscheckDatabase type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyscheckDatabase{}

// SyscheckDatabase struct for SyscheckDatabase
type SyscheckDatabase struct {
	// Number of changes applied
	Changes *int32 `json:"changes,omitempty"`
	// SHA1 checksum of the file
	Sha1 *string `json:"sha1,omitempty"`
	// File name that raised the alert
	File *string `json:"file,omitempty"`
	// MD5 checksum of the file
	Md5 *string `json:"md5,omitempty"`
	// Inode of the file. Only available in Linux agents
	Inode *int32 `json:"inode,omitempty"`
	// UID of the file
	Uid *string `json:"uid,omitempty"`
	// Date when the alert was raised
	Date *time.Time `json:"date,omitempty"`
	// File permissions
	Perm *string `json:"perm,omitempty"`
	// Group name. Only available in Linux agents
	Gname *string `json:"gname,omitempty"`
	// User name of the file
	Uname *string `json:"uname,omitempty"`
	// File size in bytes
	Size *int64 `json:"size,omitempty"`
	// GID of the file. Only available in Linux agents
	Gid *string `json:"gid,omitempty"`
	// Last modification date of the file
	Mtime *string `json:"mtime,omitempty"`
	// SHA256 checksum of the file
	Sha256 *string `json:"sha256,omitempty"`
}

// NewSyscheckDatabase instantiates a new SyscheckDatabase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyscheckDatabase() *SyscheckDatabase {
	this := SyscheckDatabase{}
	return &this
}

// NewSyscheckDatabaseWithDefaults instantiates a new SyscheckDatabase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyscheckDatabaseWithDefaults() *SyscheckDatabase {
	this := SyscheckDatabase{}
	return &this
}

// GetChanges returns the Changes field value if set, zero value otherwise.
func (o *SyscheckDatabase) GetChanges() int32 {
	if o == nil || IsNil(o.Changes) {
		var ret int32
		return ret
	}
	return *o.Changes
}

// GetChangesOk returns a tuple with the Changes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscheckDatabase) GetChangesOk() (*int32, bool) {
	if o == nil || IsNil(o.Changes) {
		return nil, false
	}
	return o.Changes, true
}

// HasChanges returns a boolean if a field has been set.
func (o *SyscheckDatabase) HasChanges() bool {
	if o != nil && !IsNil(o.Changes) {
		return true
	}

	return false
}

// SetChanges gets a reference to the given int32 and assigns it to the Changes field.
func (o *SyscheckDatabase) SetChanges(v int32) {
	o.Changes = &v
}

// GetSha1 returns the Sha1 field value if set, zero value otherwise.
func (o *SyscheckDatabase) GetSha1() string {
	if o == nil || IsNil(o.Sha1) {
		var ret string
		return ret
	}
	return *o.Sha1
}

// GetSha1Ok returns a tuple with the Sha1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscheckDatabase) GetSha1Ok() (*string, bool) {
	if o == nil || IsNil(o.Sha1) {
		return nil, false
	}
	return o.Sha1, true
}

// HasSha1 returns a boolean if a field has been set.
func (o *SyscheckDatabase) HasSha1() bool {
	if o != nil && !IsNil(o.Sha1) {
		return true
	}

	return false
}

// SetSha1 gets a reference to the given string and assigns it to the Sha1 field.
func (o *SyscheckDatabase) SetSha1(v string) {
	o.Sha1 = &v
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *SyscheckDatabase) GetFile() string {
	if o == nil || IsNil(o.File) {
		var ret string
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscheckDatabase) GetFileOk() (*string, bool) {
	if o == nil || IsNil(o.File) {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *SyscheckDatabase) HasFile() bool {
	if o != nil && !IsNil(o.File) {
		return true
	}

	return false
}

// SetFile gets a reference to the given string and assigns it to the File field.
func (o *SyscheckDatabase) SetFile(v string) {
	o.File = &v
}

// GetMd5 returns the Md5 field value if set, zero value otherwise.
func (o *SyscheckDatabase) GetMd5() string {
	if o == nil || IsNil(o.Md5) {
		var ret string
		return ret
	}
	return *o.Md5
}

// GetMd5Ok returns a tuple with the Md5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscheckDatabase) GetMd5Ok() (*string, bool) {
	if o == nil || IsNil(o.Md5) {
		return nil, false
	}
	return o.Md5, true
}

// HasMd5 returns a boolean if a field has been set.
func (o *SyscheckDatabase) HasMd5() bool {
	if o != nil && !IsNil(o.Md5) {
		return true
	}

	return false
}

// SetMd5 gets a reference to the given string and assigns it to the Md5 field.
func (o *SyscheckDatabase) SetMd5(v string) {
	o.Md5 = &v
}

// GetInode returns the Inode field value if set, zero value otherwise.
func (o *SyscheckDatabase) GetInode() int32 {
	if o == nil || IsNil(o.Inode) {
		var ret int32
		return ret
	}
	return *o.Inode
}

// GetInodeOk returns a tuple with the Inode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscheckDatabase) GetInodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Inode) {
		return nil, false
	}
	return o.Inode, true
}

// HasInode returns a boolean if a field has been set.
func (o *SyscheckDatabase) HasInode() bool {
	if o != nil && !IsNil(o.Inode) {
		return true
	}

	return false
}

// SetInode gets a reference to the given int32 and assigns it to the Inode field.
func (o *SyscheckDatabase) SetInode(v int32) {
	o.Inode = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *SyscheckDatabase) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscheckDatabase) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *SyscheckDatabase) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *SyscheckDatabase) SetUid(v string) {
	o.Uid = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *SyscheckDatabase) GetDate() time.Time {
	if o == nil || IsNil(o.Date) {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscheckDatabase) GetDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *SyscheckDatabase) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *SyscheckDatabase) SetDate(v time.Time) {
	o.Date = &v
}

// GetPerm returns the Perm field value if set, zero value otherwise.
func (o *SyscheckDatabase) GetPerm() string {
	if o == nil || IsNil(o.Perm) {
		var ret string
		return ret
	}
	return *o.Perm
}

// GetPermOk returns a tuple with the Perm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscheckDatabase) GetPermOk() (*string, bool) {
	if o == nil || IsNil(o.Perm) {
		return nil, false
	}
	return o.Perm, true
}

// HasPerm returns a boolean if a field has been set.
func (o *SyscheckDatabase) HasPerm() bool {
	if o != nil && !IsNil(o.Perm) {
		return true
	}

	return false
}

// SetPerm gets a reference to the given string and assigns it to the Perm field.
func (o *SyscheckDatabase) SetPerm(v string) {
	o.Perm = &v
}

// GetGname returns the Gname field value if set, zero value otherwise.
func (o *SyscheckDatabase) GetGname() string {
	if o == nil || IsNil(o.Gname) {
		var ret string
		return ret
	}
	return *o.Gname
}

// GetGnameOk returns a tuple with the Gname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscheckDatabase) GetGnameOk() (*string, bool) {
	if o == nil || IsNil(o.Gname) {
		return nil, false
	}
	return o.Gname, true
}

// HasGname returns a boolean if a field has been set.
func (o *SyscheckDatabase) HasGname() bool {
	if o != nil && !IsNil(o.Gname) {
		return true
	}

	return false
}

// SetGname gets a reference to the given string and assigns it to the Gname field.
func (o *SyscheckDatabase) SetGname(v string) {
	o.Gname = &v
}

// GetUname returns the Uname field value if set, zero value otherwise.
func (o *SyscheckDatabase) GetUname() string {
	if o == nil || IsNil(o.Uname) {
		var ret string
		return ret
	}
	return *o.Uname
}

// GetUnameOk returns a tuple with the Uname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscheckDatabase) GetUnameOk() (*string, bool) {
	if o == nil || IsNil(o.Uname) {
		return nil, false
	}
	return o.Uname, true
}

// HasUname returns a boolean if a field has been set.
func (o *SyscheckDatabase) HasUname() bool {
	if o != nil && !IsNil(o.Uname) {
		return true
	}

	return false
}

// SetUname gets a reference to the given string and assigns it to the Uname field.
func (o *SyscheckDatabase) SetUname(v string) {
	o.Uname = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *SyscheckDatabase) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscheckDatabase) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *SyscheckDatabase) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *SyscheckDatabase) SetSize(v int64) {
	o.Size = &v
}

// GetGid returns the Gid field value if set, zero value otherwise.
func (o *SyscheckDatabase) GetGid() string {
	if o == nil || IsNil(o.Gid) {
		var ret string
		return ret
	}
	return *o.Gid
}

// GetGidOk returns a tuple with the Gid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscheckDatabase) GetGidOk() (*string, bool) {
	if o == nil || IsNil(o.Gid) {
		return nil, false
	}
	return o.Gid, true
}

// HasGid returns a boolean if a field has been set.
func (o *SyscheckDatabase) HasGid() bool {
	if o != nil && !IsNil(o.Gid) {
		return true
	}

	return false
}

// SetGid gets a reference to the given string and assigns it to the Gid field.
func (o *SyscheckDatabase) SetGid(v string) {
	o.Gid = &v
}

// GetMtime returns the Mtime field value if set, zero value otherwise.
func (o *SyscheckDatabase) GetMtime() string {
	if o == nil || IsNil(o.Mtime) {
		var ret string
		return ret
	}
	return *o.Mtime
}

// GetMtimeOk returns a tuple with the Mtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscheckDatabase) GetMtimeOk() (*string, bool) {
	if o == nil || IsNil(o.Mtime) {
		return nil, false
	}
	return o.Mtime, true
}

// HasMtime returns a boolean if a field has been set.
func (o *SyscheckDatabase) HasMtime() bool {
	if o != nil && !IsNil(o.Mtime) {
		return true
	}

	return false
}

// SetMtime gets a reference to the given string and assigns it to the Mtime field.
func (o *SyscheckDatabase) SetMtime(v string) {
	o.Mtime = &v
}

// GetSha256 returns the Sha256 field value if set, zero value otherwise.
func (o *SyscheckDatabase) GetSha256() string {
	if o == nil || IsNil(o.Sha256) {
		var ret string
		return ret
	}
	return *o.Sha256
}

// GetSha256Ok returns a tuple with the Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscheckDatabase) GetSha256Ok() (*string, bool) {
	if o == nil || IsNil(o.Sha256) {
		return nil, false
	}
	return o.Sha256, true
}

// HasSha256 returns a boolean if a field has been set.
func (o *SyscheckDatabase) HasSha256() bool {
	if o != nil && !IsNil(o.Sha256) {
		return true
	}

	return false
}

// SetSha256 gets a reference to the given string and assigns it to the Sha256 field.
func (o *SyscheckDatabase) SetSha256(v string) {
	o.Sha256 = &v
}

func (o SyscheckDatabase) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyscheckDatabase) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Changes) {
		toSerialize["changes"] = o.Changes
	}
	if !IsNil(o.Sha1) {
		toSerialize["sha1"] = o.Sha1
	}
	if !IsNil(o.File) {
		toSerialize["file"] = o.File
	}
	if !IsNil(o.Md5) {
		toSerialize["md5"] = o.Md5
	}
	if !IsNil(o.Inode) {
		toSerialize["inode"] = o.Inode
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Perm) {
		toSerialize["perm"] = o.Perm
	}
	if !IsNil(o.Gname) {
		toSerialize["gname"] = o.Gname
	}
	if !IsNil(o.Uname) {
		toSerialize["uname"] = o.Uname
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Gid) {
		toSerialize["gid"] = o.Gid
	}
	if !IsNil(o.Mtime) {
		toSerialize["mtime"] = o.Mtime
	}
	if !IsNil(o.Sha256) {
		toSerialize["sha256"] = o.Sha256
	}
	return toSerialize, nil
}

type NullableSyscheckDatabase struct {
	value *SyscheckDatabase
	isSet bool
}

func (v NullableSyscheckDatabase) Get() *SyscheckDatabase {
	return v.value
}

func (v *NullableSyscheckDatabase) Set(val *SyscheckDatabase) {
	v.value = val
	v.isSet = true
}

func (v NullableSyscheckDatabase) IsSet() bool {
	return v.isSet
}

func (v *NullableSyscheckDatabase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyscheckDatabase(val *SyscheckDatabase) *NullableSyscheckDatabase {
	return &NullableSyscheckDatabase{value: val, isSet: true}
}

func (v NullableSyscheckDatabase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyscheckDatabase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


