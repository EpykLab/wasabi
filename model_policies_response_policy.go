/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PoliciesResponsePolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PoliciesResponsePolicy{}

// PoliciesResponsePolicy New policy definition
type PoliciesResponsePolicy struct {
	// Actions to perform
	Actions []string `json:"actions,omitempty"`
	// Resources to apply the actions on
	Resources []string `json:"resources,omitempty"`
	// Effect of the policy
	Effect *string `json:"effect,omitempty"`
}

// NewPoliciesResponsePolicy instantiates a new PoliciesResponsePolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoliciesResponsePolicy() *PoliciesResponsePolicy {
	this := PoliciesResponsePolicy{}
	return &this
}

// NewPoliciesResponsePolicyWithDefaults instantiates a new PoliciesResponsePolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoliciesResponsePolicyWithDefaults() *PoliciesResponsePolicy {
	this := PoliciesResponsePolicy{}
	return &this
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *PoliciesResponsePolicy) GetActions() []string {
	if o == nil || IsNil(o.Actions) {
		var ret []string
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoliciesResponsePolicy) GetActionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *PoliciesResponsePolicy) HasActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given []string and assigns it to the Actions field.
func (o *PoliciesResponsePolicy) SetActions(v []string) {
	o.Actions = v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *PoliciesResponsePolicy) GetResources() []string {
	if o == nil || IsNil(o.Resources) {
		var ret []string
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoliciesResponsePolicy) GetResourcesOk() ([]string, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *PoliciesResponsePolicy) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given []string and assigns it to the Resources field.
func (o *PoliciesResponsePolicy) SetResources(v []string) {
	o.Resources = v
}

// GetEffect returns the Effect field value if set, zero value otherwise.
func (o *PoliciesResponsePolicy) GetEffect() string {
	if o == nil || IsNil(o.Effect) {
		var ret string
		return ret
	}
	return *o.Effect
}

// GetEffectOk returns a tuple with the Effect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoliciesResponsePolicy) GetEffectOk() (*string, bool) {
	if o == nil || IsNil(o.Effect) {
		return nil, false
	}
	return o.Effect, true
}

// HasEffect returns a boolean if a field has been set.
func (o *PoliciesResponsePolicy) HasEffect() bool {
	if o != nil && !IsNil(o.Effect) {
		return true
	}

	return false
}

// SetEffect gets a reference to the given string and assigns it to the Effect field.
func (o *PoliciesResponsePolicy) SetEffect(v string) {
	o.Effect = &v
}

func (o PoliciesResponsePolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PoliciesResponsePolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	if !IsNil(o.Effect) {
		toSerialize["effect"] = o.Effect
	}
	return toSerialize, nil
}

type NullablePoliciesResponsePolicy struct {
	value *PoliciesResponsePolicy
	isSet bool
}

func (v NullablePoliciesResponsePolicy) Get() *PoliciesResponsePolicy {
	return v.value
}

func (v *NullablePoliciesResponsePolicy) Set(val *PoliciesResponsePolicy) {
	v.value = val
	v.isSet = true
}

func (v NullablePoliciesResponsePolicy) IsSet() bool {
	return v.isSet
}

func (v *NullablePoliciesResponsePolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoliciesResponsePolicy(val *PoliciesResponsePolicy) *NullablePoliciesResponsePolicy {
	return &NullablePoliciesResponsePolicy{value: val, isSet: true}
}

func (v NullablePoliciesResponsePolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoliciesResponsePolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


