/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ClusterStatusData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterStatusData{}

// ClusterStatusData struct for ClusterStatusData
type ClusterStatusData struct {
	// Whether the cluster is enabled in the Wazuh configuration
	Enabled *string `json:"enabled,omitempty"`
	// Whether the cluster daemon is running
	Running *string `json:"running,omitempty"`
}

// NewClusterStatusData instantiates a new ClusterStatusData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterStatusData() *ClusterStatusData {
	this := ClusterStatusData{}
	return &this
}

// NewClusterStatusDataWithDefaults instantiates a new ClusterStatusData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterStatusDataWithDefaults() *ClusterStatusData {
	this := ClusterStatusData{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ClusterStatusData) GetEnabled() string {
	if o == nil || IsNil(o.Enabled) {
		var ret string
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusData) GetEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ClusterStatusData) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given string and assigns it to the Enabled field.
func (o *ClusterStatusData) SetEnabled(v string) {
	o.Enabled = &v
}

// GetRunning returns the Running field value if set, zero value otherwise.
func (o *ClusterStatusData) GetRunning() string {
	if o == nil || IsNil(o.Running) {
		var ret string
		return ret
	}
	return *o.Running
}

// GetRunningOk returns a tuple with the Running field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusData) GetRunningOk() (*string, bool) {
	if o == nil || IsNil(o.Running) {
		return nil, false
	}
	return o.Running, true
}

// HasRunning returns a boolean if a field has been set.
func (o *ClusterStatusData) HasRunning() bool {
	if o != nil && !IsNil(o.Running) {
		return true
	}

	return false
}

// SetRunning gets a reference to the given string and assigns it to the Running field.
func (o *ClusterStatusData) SetRunning(v string) {
	o.Running = &v
}

func (o ClusterStatusData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterStatusData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Running) {
		toSerialize["running"] = o.Running
	}
	return toSerialize, nil
}

type NullableClusterStatusData struct {
	value *ClusterStatusData
	isSet bool
}

func (v NullableClusterStatusData) Get() *ClusterStatusData {
	return v.value
}

func (v *NullableClusterStatusData) Set(val *ClusterStatusData) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterStatusData) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterStatusData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterStatusData(val *ClusterStatusData) *NullableClusterStatusData {
	return &NullableClusterStatusData{value: val, isSet: true}
}

func (v NullableClusterStatusData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterStatusData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


