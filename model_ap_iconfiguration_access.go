/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the APIconfigurationAccess type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIconfigurationAccess{}

// APIconfigurationAccess API Security Options
type APIconfigurationAccess struct {
	// Maximum number of login attempts in {block_time} seconds
	MaxLoginAttempts *int32 `json:"max_login_attempts,omitempty"`
	// Blocking time for IPs that have exceeded {max_login_attempts}. Time counts from the first attempt
	BlockTime *int32 `json:"block_time,omitempty"`
	// Maximum number of requests allowed per minute
	MaxRequestPerMinute *int32 `json:"max_request_per_minute,omitempty"`
}

// NewAPIconfigurationAccess instantiates a new APIconfigurationAccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIconfigurationAccess() *APIconfigurationAccess {
	this := APIconfigurationAccess{}
	return &this
}

// NewAPIconfigurationAccessWithDefaults instantiates a new APIconfigurationAccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIconfigurationAccessWithDefaults() *APIconfigurationAccess {
	this := APIconfigurationAccess{}
	return &this
}

// GetMaxLoginAttempts returns the MaxLoginAttempts field value if set, zero value otherwise.
func (o *APIconfigurationAccess) GetMaxLoginAttempts() int32 {
	if o == nil || IsNil(o.MaxLoginAttempts) {
		var ret int32
		return ret
	}
	return *o.MaxLoginAttempts
}

// GetMaxLoginAttemptsOk returns a tuple with the MaxLoginAttempts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIconfigurationAccess) GetMaxLoginAttemptsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxLoginAttempts) {
		return nil, false
	}
	return o.MaxLoginAttempts, true
}

// HasMaxLoginAttempts returns a boolean if a field has been set.
func (o *APIconfigurationAccess) HasMaxLoginAttempts() bool {
	if o != nil && !IsNil(o.MaxLoginAttempts) {
		return true
	}

	return false
}

// SetMaxLoginAttempts gets a reference to the given int32 and assigns it to the MaxLoginAttempts field.
func (o *APIconfigurationAccess) SetMaxLoginAttempts(v int32) {
	o.MaxLoginAttempts = &v
}

// GetBlockTime returns the BlockTime field value if set, zero value otherwise.
func (o *APIconfigurationAccess) GetBlockTime() int32 {
	if o == nil || IsNil(o.BlockTime) {
		var ret int32
		return ret
	}
	return *o.BlockTime
}

// GetBlockTimeOk returns a tuple with the BlockTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIconfigurationAccess) GetBlockTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.BlockTime) {
		return nil, false
	}
	return o.BlockTime, true
}

// HasBlockTime returns a boolean if a field has been set.
func (o *APIconfigurationAccess) HasBlockTime() bool {
	if o != nil && !IsNil(o.BlockTime) {
		return true
	}

	return false
}

// SetBlockTime gets a reference to the given int32 and assigns it to the BlockTime field.
func (o *APIconfigurationAccess) SetBlockTime(v int32) {
	o.BlockTime = &v
}

// GetMaxRequestPerMinute returns the MaxRequestPerMinute field value if set, zero value otherwise.
func (o *APIconfigurationAccess) GetMaxRequestPerMinute() int32 {
	if o == nil || IsNil(o.MaxRequestPerMinute) {
		var ret int32
		return ret
	}
	return *o.MaxRequestPerMinute
}

// GetMaxRequestPerMinuteOk returns a tuple with the MaxRequestPerMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIconfigurationAccess) GetMaxRequestPerMinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxRequestPerMinute) {
		return nil, false
	}
	return o.MaxRequestPerMinute, true
}

// HasMaxRequestPerMinute returns a boolean if a field has been set.
func (o *APIconfigurationAccess) HasMaxRequestPerMinute() bool {
	if o != nil && !IsNil(o.MaxRequestPerMinute) {
		return true
	}

	return false
}

// SetMaxRequestPerMinute gets a reference to the given int32 and assigns it to the MaxRequestPerMinute field.
func (o *APIconfigurationAccess) SetMaxRequestPerMinute(v int32) {
	o.MaxRequestPerMinute = &v
}

func (o APIconfigurationAccess) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIconfigurationAccess) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxLoginAttempts) {
		toSerialize["max_login_attempts"] = o.MaxLoginAttempts
	}
	if !IsNil(o.BlockTime) {
		toSerialize["block_time"] = o.BlockTime
	}
	if !IsNil(o.MaxRequestPerMinute) {
		toSerialize["max_request_per_minute"] = o.MaxRequestPerMinute
	}
	return toSerialize, nil
}

type NullableAPIconfigurationAccess struct {
	value *APIconfigurationAccess
	isSet bool
}

func (v NullableAPIconfigurationAccess) Get() *APIconfigurationAccess {
	return v.value
}

func (v *NullableAPIconfigurationAccess) Set(val *APIconfigurationAccess) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIconfigurationAccess) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIconfigurationAccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIconfigurationAccess(val *APIconfigurationAccess) *NullableAPIconfigurationAccess {
	return &NullableAPIconfigurationAccess{value: val, isSet: true}
}

func (v NullableAPIconfigurationAccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIconfigurationAccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


