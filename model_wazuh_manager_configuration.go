/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the WazuhManagerConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WazuhManagerConfiguration{}

// WazuhManagerConfiguration struct for WazuhManagerConfiguration
type WazuhManagerConfiguration struct {
	ActiveResponse []map[string]interface{} `json:"active-response,omitempty"`
	Agentless []map[string]interface{} `json:"agentless,omitempty"`
	Alerts map[string]interface{} `json:"alerts,omitempty"`
	Auth map[string]interface{} `json:"auth,omitempty"`
	Cluster map[string]interface{} `json:"cluster,omitempty"`
	Command []map[string]interface{} `json:"command,omitempty"`
	DatabaseOutput map[string]interface{} `json:"database_output,omitempty"`
	EmailAlerts map[string]interface{} `json:"email_alerts,omitempty"`
	GcpPubsub map[string]interface{} `json:"gcp-pubsub,omitempty"`
	Global map[string]interface{} `json:"global,omitempty"`
	Integration []map[string]interface{} `json:"integration,omitempty"`
	Labels map[string]interface{} `json:"labels,omitempty"`
	Localfile []map[string]interface{} `json:"localfile,omitempty"`
	Logging map[string]interface{} `json:"logging,omitempty"`
	Remote []map[string]interface{} `json:"remote,omitempty"`
	Reports map[string]interface{} `json:"reports,omitempty"`
	Rootcheck map[string]interface{} `json:"rootcheck,omitempty"`
	Ruleset map[string]interface{} `json:"ruleset,omitempty"`
	Sca map[string]interface{} `json:"sca,omitempty"`
	Socket map[string]interface{} `json:"socket,omitempty"`
	Syscheck map[string]interface{} `json:"syscheck,omitempty"`
	SyslogOutput []map[string]interface{} `json:"syslog_output,omitempty"`
	AwsS3 map[string]interface{} `json:"aws-s3,omitempty"`
	AzureLogs map[string]interface{} `json:"azure-logs,omitempty"`
	CisCat map[string]interface{} `json:"cis-cat,omitempty"`
	DockerListener map[string]interface{} `json:"docker-listener,omitempty"`
	OpenScap map[string]interface{} `json:"open-scap,omitempty"`
	Osquery map[string]interface{} `json:"osquery,omitempty"`
	Syscollector map[string]interface{} `json:"syscollector,omitempty"`
}

// NewWazuhManagerConfiguration instantiates a new WazuhManagerConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWazuhManagerConfiguration() *WazuhManagerConfiguration {
	this := WazuhManagerConfiguration{}
	return &this
}

// NewWazuhManagerConfigurationWithDefaults instantiates a new WazuhManagerConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWazuhManagerConfigurationWithDefaults() *WazuhManagerConfiguration {
	this := WazuhManagerConfiguration{}
	return &this
}

// GetActiveResponse returns the ActiveResponse field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetActiveResponse() []map[string]interface{} {
	if o == nil || IsNil(o.ActiveResponse) {
		var ret []map[string]interface{}
		return ret
	}
	return o.ActiveResponse
}

// GetActiveResponseOk returns a tuple with the ActiveResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetActiveResponseOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.ActiveResponse) {
		return nil, false
	}
	return o.ActiveResponse, true
}

// HasActiveResponse returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasActiveResponse() bool {
	if o != nil && !IsNil(o.ActiveResponse) {
		return true
	}

	return false
}

// SetActiveResponse gets a reference to the given []map[string]interface{} and assigns it to the ActiveResponse field.
func (o *WazuhManagerConfiguration) SetActiveResponse(v []map[string]interface{}) {
	o.ActiveResponse = v
}

// GetAgentless returns the Agentless field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetAgentless() []map[string]interface{} {
	if o == nil || IsNil(o.Agentless) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Agentless
}

// GetAgentlessOk returns a tuple with the Agentless field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetAgentlessOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Agentless) {
		return nil, false
	}
	return o.Agentless, true
}

// HasAgentless returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasAgentless() bool {
	if o != nil && !IsNil(o.Agentless) {
		return true
	}

	return false
}

// SetAgentless gets a reference to the given []map[string]interface{} and assigns it to the Agentless field.
func (o *WazuhManagerConfiguration) SetAgentless(v []map[string]interface{}) {
	o.Agentless = v
}

// GetAlerts returns the Alerts field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetAlerts() map[string]interface{} {
	if o == nil || IsNil(o.Alerts) {
		var ret map[string]interface{}
		return ret
	}
	return o.Alerts
}

// GetAlertsOk returns a tuple with the Alerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetAlertsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Alerts) {
		return map[string]interface{}{}, false
	}
	return o.Alerts, true
}

// HasAlerts returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasAlerts() bool {
	if o != nil && !IsNil(o.Alerts) {
		return true
	}

	return false
}

// SetAlerts gets a reference to the given map[string]interface{} and assigns it to the Alerts field.
func (o *WazuhManagerConfiguration) SetAlerts(v map[string]interface{}) {
	o.Alerts = v
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetAuth() map[string]interface{} {
	if o == nil || IsNil(o.Auth) {
		var ret map[string]interface{}
		return ret
	}
	return o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetAuthOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Auth) {
		return map[string]interface{}{}, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasAuth() bool {
	if o != nil && !IsNil(o.Auth) {
		return true
	}

	return false
}

// SetAuth gets a reference to the given map[string]interface{} and assigns it to the Auth field.
func (o *WazuhManagerConfiguration) SetAuth(v map[string]interface{}) {
	o.Auth = v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetCluster() map[string]interface{} {
	if o == nil || IsNil(o.Cluster) {
		var ret map[string]interface{}
		return ret
	}
	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetClusterOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Cluster) {
		return map[string]interface{}{}, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given map[string]interface{} and assigns it to the Cluster field.
func (o *WazuhManagerConfiguration) SetCluster(v map[string]interface{}) {
	o.Cluster = v
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetCommand() []map[string]interface{} {
	if o == nil || IsNil(o.Command) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetCommandOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Command) {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasCommand() bool {
	if o != nil && !IsNil(o.Command) {
		return true
	}

	return false
}

// SetCommand gets a reference to the given []map[string]interface{} and assigns it to the Command field.
func (o *WazuhManagerConfiguration) SetCommand(v []map[string]interface{}) {
	o.Command = v
}

// GetDatabaseOutput returns the DatabaseOutput field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetDatabaseOutput() map[string]interface{} {
	if o == nil || IsNil(o.DatabaseOutput) {
		var ret map[string]interface{}
		return ret
	}
	return o.DatabaseOutput
}

// GetDatabaseOutputOk returns a tuple with the DatabaseOutput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetDatabaseOutputOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DatabaseOutput) {
		return map[string]interface{}{}, false
	}
	return o.DatabaseOutput, true
}

// HasDatabaseOutput returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasDatabaseOutput() bool {
	if o != nil && !IsNil(o.DatabaseOutput) {
		return true
	}

	return false
}

// SetDatabaseOutput gets a reference to the given map[string]interface{} and assigns it to the DatabaseOutput field.
func (o *WazuhManagerConfiguration) SetDatabaseOutput(v map[string]interface{}) {
	o.DatabaseOutput = v
}

// GetEmailAlerts returns the EmailAlerts field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetEmailAlerts() map[string]interface{} {
	if o == nil || IsNil(o.EmailAlerts) {
		var ret map[string]interface{}
		return ret
	}
	return o.EmailAlerts
}

// GetEmailAlertsOk returns a tuple with the EmailAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetEmailAlertsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.EmailAlerts) {
		return map[string]interface{}{}, false
	}
	return o.EmailAlerts, true
}

// HasEmailAlerts returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasEmailAlerts() bool {
	if o != nil && !IsNil(o.EmailAlerts) {
		return true
	}

	return false
}

// SetEmailAlerts gets a reference to the given map[string]interface{} and assigns it to the EmailAlerts field.
func (o *WazuhManagerConfiguration) SetEmailAlerts(v map[string]interface{}) {
	o.EmailAlerts = v
}

// GetGcpPubsub returns the GcpPubsub field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetGcpPubsub() map[string]interface{} {
	if o == nil || IsNil(o.GcpPubsub) {
		var ret map[string]interface{}
		return ret
	}
	return o.GcpPubsub
}

// GetGcpPubsubOk returns a tuple with the GcpPubsub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetGcpPubsubOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.GcpPubsub) {
		return map[string]interface{}{}, false
	}
	return o.GcpPubsub, true
}

// HasGcpPubsub returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasGcpPubsub() bool {
	if o != nil && !IsNil(o.GcpPubsub) {
		return true
	}

	return false
}

// SetGcpPubsub gets a reference to the given map[string]interface{} and assigns it to the GcpPubsub field.
func (o *WazuhManagerConfiguration) SetGcpPubsub(v map[string]interface{}) {
	o.GcpPubsub = v
}

// GetGlobal returns the Global field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetGlobal() map[string]interface{} {
	if o == nil || IsNil(o.Global) {
		var ret map[string]interface{}
		return ret
	}
	return o.Global
}

// GetGlobalOk returns a tuple with the Global field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetGlobalOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Global) {
		return map[string]interface{}{}, false
	}
	return o.Global, true
}

// HasGlobal returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasGlobal() bool {
	if o != nil && !IsNil(o.Global) {
		return true
	}

	return false
}

// SetGlobal gets a reference to the given map[string]interface{} and assigns it to the Global field.
func (o *WazuhManagerConfiguration) SetGlobal(v map[string]interface{}) {
	o.Global = v
}

// GetIntegration returns the Integration field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetIntegration() []map[string]interface{} {
	if o == nil || IsNil(o.Integration) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Integration
}

// GetIntegrationOk returns a tuple with the Integration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetIntegrationOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Integration) {
		return nil, false
	}
	return o.Integration, true
}

// HasIntegration returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasIntegration() bool {
	if o != nil && !IsNil(o.Integration) {
		return true
	}

	return false
}

// SetIntegration gets a reference to the given []map[string]interface{} and assigns it to the Integration field.
func (o *WazuhManagerConfiguration) SetIntegration(v []map[string]interface{}) {
	o.Integration = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetLabels() map[string]interface{} {
	if o == nil || IsNil(o.Labels) {
		var ret map[string]interface{}
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetLabelsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Labels) {
		return map[string]interface{}{}, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]interface{} and assigns it to the Labels field.
func (o *WazuhManagerConfiguration) SetLabels(v map[string]interface{}) {
	o.Labels = v
}

// GetLocalfile returns the Localfile field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetLocalfile() []map[string]interface{} {
	if o == nil || IsNil(o.Localfile) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Localfile
}

// GetLocalfileOk returns a tuple with the Localfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetLocalfileOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Localfile) {
		return nil, false
	}
	return o.Localfile, true
}

// HasLocalfile returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasLocalfile() bool {
	if o != nil && !IsNil(o.Localfile) {
		return true
	}

	return false
}

// SetLocalfile gets a reference to the given []map[string]interface{} and assigns it to the Localfile field.
func (o *WazuhManagerConfiguration) SetLocalfile(v []map[string]interface{}) {
	o.Localfile = v
}

// GetLogging returns the Logging field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetLogging() map[string]interface{} {
	if o == nil || IsNil(o.Logging) {
		var ret map[string]interface{}
		return ret
	}
	return o.Logging
}

// GetLoggingOk returns a tuple with the Logging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetLoggingOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Logging) {
		return map[string]interface{}{}, false
	}
	return o.Logging, true
}

// HasLogging returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasLogging() bool {
	if o != nil && !IsNil(o.Logging) {
		return true
	}

	return false
}

// SetLogging gets a reference to the given map[string]interface{} and assigns it to the Logging field.
func (o *WazuhManagerConfiguration) SetLogging(v map[string]interface{}) {
	o.Logging = v
}

// GetRemote returns the Remote field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetRemote() []map[string]interface{} {
	if o == nil || IsNil(o.Remote) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Remote
}

// GetRemoteOk returns a tuple with the Remote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetRemoteOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Remote) {
		return nil, false
	}
	return o.Remote, true
}

// HasRemote returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasRemote() bool {
	if o != nil && !IsNil(o.Remote) {
		return true
	}

	return false
}

// SetRemote gets a reference to the given []map[string]interface{} and assigns it to the Remote field.
func (o *WazuhManagerConfiguration) SetRemote(v []map[string]interface{}) {
	o.Remote = v
}

// GetReports returns the Reports field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetReports() map[string]interface{} {
	if o == nil || IsNil(o.Reports) {
		var ret map[string]interface{}
		return ret
	}
	return o.Reports
}

// GetReportsOk returns a tuple with the Reports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetReportsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Reports) {
		return map[string]interface{}{}, false
	}
	return o.Reports, true
}

// HasReports returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasReports() bool {
	if o != nil && !IsNil(o.Reports) {
		return true
	}

	return false
}

// SetReports gets a reference to the given map[string]interface{} and assigns it to the Reports field.
func (o *WazuhManagerConfiguration) SetReports(v map[string]interface{}) {
	o.Reports = v
}

// GetRootcheck returns the Rootcheck field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetRootcheck() map[string]interface{} {
	if o == nil || IsNil(o.Rootcheck) {
		var ret map[string]interface{}
		return ret
	}
	return o.Rootcheck
}

// GetRootcheckOk returns a tuple with the Rootcheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetRootcheckOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Rootcheck) {
		return map[string]interface{}{}, false
	}
	return o.Rootcheck, true
}

// HasRootcheck returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasRootcheck() bool {
	if o != nil && !IsNil(o.Rootcheck) {
		return true
	}

	return false
}

// SetRootcheck gets a reference to the given map[string]interface{} and assigns it to the Rootcheck field.
func (o *WazuhManagerConfiguration) SetRootcheck(v map[string]interface{}) {
	o.Rootcheck = v
}

// GetRuleset returns the Ruleset field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetRuleset() map[string]interface{} {
	if o == nil || IsNil(o.Ruleset) {
		var ret map[string]interface{}
		return ret
	}
	return o.Ruleset
}

// GetRulesetOk returns a tuple with the Ruleset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetRulesetOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Ruleset) {
		return map[string]interface{}{}, false
	}
	return o.Ruleset, true
}

// HasRuleset returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasRuleset() bool {
	if o != nil && !IsNil(o.Ruleset) {
		return true
	}

	return false
}

// SetRuleset gets a reference to the given map[string]interface{} and assigns it to the Ruleset field.
func (o *WazuhManagerConfiguration) SetRuleset(v map[string]interface{}) {
	o.Ruleset = v
}

// GetSca returns the Sca field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetSca() map[string]interface{} {
	if o == nil || IsNil(o.Sca) {
		var ret map[string]interface{}
		return ret
	}
	return o.Sca
}

// GetScaOk returns a tuple with the Sca field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetScaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Sca) {
		return map[string]interface{}{}, false
	}
	return o.Sca, true
}

// HasSca returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasSca() bool {
	if o != nil && !IsNil(o.Sca) {
		return true
	}

	return false
}

// SetSca gets a reference to the given map[string]interface{} and assigns it to the Sca field.
func (o *WazuhManagerConfiguration) SetSca(v map[string]interface{}) {
	o.Sca = v
}

// GetSocket returns the Socket field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetSocket() map[string]interface{} {
	if o == nil || IsNil(o.Socket) {
		var ret map[string]interface{}
		return ret
	}
	return o.Socket
}

// GetSocketOk returns a tuple with the Socket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetSocketOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Socket) {
		return map[string]interface{}{}, false
	}
	return o.Socket, true
}

// HasSocket returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasSocket() bool {
	if o != nil && !IsNil(o.Socket) {
		return true
	}

	return false
}

// SetSocket gets a reference to the given map[string]interface{} and assigns it to the Socket field.
func (o *WazuhManagerConfiguration) SetSocket(v map[string]interface{}) {
	o.Socket = v
}

// GetSyscheck returns the Syscheck field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetSyscheck() map[string]interface{} {
	if o == nil || IsNil(o.Syscheck) {
		var ret map[string]interface{}
		return ret
	}
	return o.Syscheck
}

// GetSyscheckOk returns a tuple with the Syscheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetSyscheckOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Syscheck) {
		return map[string]interface{}{}, false
	}
	return o.Syscheck, true
}

// HasSyscheck returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasSyscheck() bool {
	if o != nil && !IsNil(o.Syscheck) {
		return true
	}

	return false
}

// SetSyscheck gets a reference to the given map[string]interface{} and assigns it to the Syscheck field.
func (o *WazuhManagerConfiguration) SetSyscheck(v map[string]interface{}) {
	o.Syscheck = v
}

// GetSyslogOutput returns the SyslogOutput field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetSyslogOutput() []map[string]interface{} {
	if o == nil || IsNil(o.SyslogOutput) {
		var ret []map[string]interface{}
		return ret
	}
	return o.SyslogOutput
}

// GetSyslogOutputOk returns a tuple with the SyslogOutput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetSyslogOutputOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.SyslogOutput) {
		return nil, false
	}
	return o.SyslogOutput, true
}

// HasSyslogOutput returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasSyslogOutput() bool {
	if o != nil && !IsNil(o.SyslogOutput) {
		return true
	}

	return false
}

// SetSyslogOutput gets a reference to the given []map[string]interface{} and assigns it to the SyslogOutput field.
func (o *WazuhManagerConfiguration) SetSyslogOutput(v []map[string]interface{}) {
	o.SyslogOutput = v
}

// GetAwsS3 returns the AwsS3 field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetAwsS3() map[string]interface{} {
	if o == nil || IsNil(o.AwsS3) {
		var ret map[string]interface{}
		return ret
	}
	return o.AwsS3
}

// GetAwsS3Ok returns a tuple with the AwsS3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetAwsS3Ok() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AwsS3) {
		return map[string]interface{}{}, false
	}
	return o.AwsS3, true
}

// HasAwsS3 returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasAwsS3() bool {
	if o != nil && !IsNil(o.AwsS3) {
		return true
	}

	return false
}

// SetAwsS3 gets a reference to the given map[string]interface{} and assigns it to the AwsS3 field.
func (o *WazuhManagerConfiguration) SetAwsS3(v map[string]interface{}) {
	o.AwsS3 = v
}

// GetAzureLogs returns the AzureLogs field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetAzureLogs() map[string]interface{} {
	if o == nil || IsNil(o.AzureLogs) {
		var ret map[string]interface{}
		return ret
	}
	return o.AzureLogs
}

// GetAzureLogsOk returns a tuple with the AzureLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetAzureLogsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AzureLogs) {
		return map[string]interface{}{}, false
	}
	return o.AzureLogs, true
}

// HasAzureLogs returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasAzureLogs() bool {
	if o != nil && !IsNil(o.AzureLogs) {
		return true
	}

	return false
}

// SetAzureLogs gets a reference to the given map[string]interface{} and assigns it to the AzureLogs field.
func (o *WazuhManagerConfiguration) SetAzureLogs(v map[string]interface{}) {
	o.AzureLogs = v
}

// GetCisCat returns the CisCat field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetCisCat() map[string]interface{} {
	if o == nil || IsNil(o.CisCat) {
		var ret map[string]interface{}
		return ret
	}
	return o.CisCat
}

// GetCisCatOk returns a tuple with the CisCat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetCisCatOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CisCat) {
		return map[string]interface{}{}, false
	}
	return o.CisCat, true
}

// HasCisCat returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasCisCat() bool {
	if o != nil && !IsNil(o.CisCat) {
		return true
	}

	return false
}

// SetCisCat gets a reference to the given map[string]interface{} and assigns it to the CisCat field.
func (o *WazuhManagerConfiguration) SetCisCat(v map[string]interface{}) {
	o.CisCat = v
}

// GetDockerListener returns the DockerListener field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetDockerListener() map[string]interface{} {
	if o == nil || IsNil(o.DockerListener) {
		var ret map[string]interface{}
		return ret
	}
	return o.DockerListener
}

// GetDockerListenerOk returns a tuple with the DockerListener field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetDockerListenerOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DockerListener) {
		return map[string]interface{}{}, false
	}
	return o.DockerListener, true
}

// HasDockerListener returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasDockerListener() bool {
	if o != nil && !IsNil(o.DockerListener) {
		return true
	}

	return false
}

// SetDockerListener gets a reference to the given map[string]interface{} and assigns it to the DockerListener field.
func (o *WazuhManagerConfiguration) SetDockerListener(v map[string]interface{}) {
	o.DockerListener = v
}

// GetOpenScap returns the OpenScap field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetOpenScap() map[string]interface{} {
	if o == nil || IsNil(o.OpenScap) {
		var ret map[string]interface{}
		return ret
	}
	return o.OpenScap
}

// GetOpenScapOk returns a tuple with the OpenScap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetOpenScapOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.OpenScap) {
		return map[string]interface{}{}, false
	}
	return o.OpenScap, true
}

// HasOpenScap returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasOpenScap() bool {
	if o != nil && !IsNil(o.OpenScap) {
		return true
	}

	return false
}

// SetOpenScap gets a reference to the given map[string]interface{} and assigns it to the OpenScap field.
func (o *WazuhManagerConfiguration) SetOpenScap(v map[string]interface{}) {
	o.OpenScap = v
}

// GetOsquery returns the Osquery field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetOsquery() map[string]interface{} {
	if o == nil || IsNil(o.Osquery) {
		var ret map[string]interface{}
		return ret
	}
	return o.Osquery
}

// GetOsqueryOk returns a tuple with the Osquery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetOsqueryOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Osquery) {
		return map[string]interface{}{}, false
	}
	return o.Osquery, true
}

// HasOsquery returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasOsquery() bool {
	if o != nil && !IsNil(o.Osquery) {
		return true
	}

	return false
}

// SetOsquery gets a reference to the given map[string]interface{} and assigns it to the Osquery field.
func (o *WazuhManagerConfiguration) SetOsquery(v map[string]interface{}) {
	o.Osquery = v
}

// GetSyscollector returns the Syscollector field value if set, zero value otherwise.
func (o *WazuhManagerConfiguration) GetSyscollector() map[string]interface{} {
	if o == nil || IsNil(o.Syscollector) {
		var ret map[string]interface{}
		return ret
	}
	return o.Syscollector
}

// GetSyscollectorOk returns a tuple with the Syscollector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhManagerConfiguration) GetSyscollectorOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Syscollector) {
		return map[string]interface{}{}, false
	}
	return o.Syscollector, true
}

// HasSyscollector returns a boolean if a field has been set.
func (o *WazuhManagerConfiguration) HasSyscollector() bool {
	if o != nil && !IsNil(o.Syscollector) {
		return true
	}

	return false
}

// SetSyscollector gets a reference to the given map[string]interface{} and assigns it to the Syscollector field.
func (o *WazuhManagerConfiguration) SetSyscollector(v map[string]interface{}) {
	o.Syscollector = v
}

func (o WazuhManagerConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WazuhManagerConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActiveResponse) {
		toSerialize["active-response"] = o.ActiveResponse
	}
	if !IsNil(o.Agentless) {
		toSerialize["agentless"] = o.Agentless
	}
	if !IsNil(o.Alerts) {
		toSerialize["alerts"] = o.Alerts
	}
	if !IsNil(o.Auth) {
		toSerialize["auth"] = o.Auth
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Command) {
		toSerialize["command"] = o.Command
	}
	if !IsNil(o.DatabaseOutput) {
		toSerialize["database_output"] = o.DatabaseOutput
	}
	if !IsNil(o.EmailAlerts) {
		toSerialize["email_alerts"] = o.EmailAlerts
	}
	if !IsNil(o.GcpPubsub) {
		toSerialize["gcp-pubsub"] = o.GcpPubsub
	}
	if !IsNil(o.Global) {
		toSerialize["global"] = o.Global
	}
	if !IsNil(o.Integration) {
		toSerialize["integration"] = o.Integration
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Localfile) {
		toSerialize["localfile"] = o.Localfile
	}
	if !IsNil(o.Logging) {
		toSerialize["logging"] = o.Logging
	}
	if !IsNil(o.Remote) {
		toSerialize["remote"] = o.Remote
	}
	if !IsNil(o.Reports) {
		toSerialize["reports"] = o.Reports
	}
	if !IsNil(o.Rootcheck) {
		toSerialize["rootcheck"] = o.Rootcheck
	}
	if !IsNil(o.Ruleset) {
		toSerialize["ruleset"] = o.Ruleset
	}
	if !IsNil(o.Sca) {
		toSerialize["sca"] = o.Sca
	}
	if !IsNil(o.Socket) {
		toSerialize["socket"] = o.Socket
	}
	if !IsNil(o.Syscheck) {
		toSerialize["syscheck"] = o.Syscheck
	}
	if !IsNil(o.SyslogOutput) {
		toSerialize["syslog_output"] = o.SyslogOutput
	}
	if !IsNil(o.AwsS3) {
		toSerialize["aws-s3"] = o.AwsS3
	}
	if !IsNil(o.AzureLogs) {
		toSerialize["azure-logs"] = o.AzureLogs
	}
	if !IsNil(o.CisCat) {
		toSerialize["cis-cat"] = o.CisCat
	}
	if !IsNil(o.DockerListener) {
		toSerialize["docker-listener"] = o.DockerListener
	}
	if !IsNil(o.OpenScap) {
		toSerialize["open-scap"] = o.OpenScap
	}
	if !IsNil(o.Osquery) {
		toSerialize["osquery"] = o.Osquery
	}
	if !IsNil(o.Syscollector) {
		toSerialize["syscollector"] = o.Syscollector
	}
	return toSerialize, nil
}

type NullableWazuhManagerConfiguration struct {
	value *WazuhManagerConfiguration
	isSet bool
}

func (v NullableWazuhManagerConfiguration) Get() *WazuhManagerConfiguration {
	return v.value
}

func (v *NullableWazuhManagerConfiguration) Set(val *WazuhManagerConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableWazuhManagerConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableWazuhManagerConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWazuhManagerConfiguration(val *WazuhManagerConfiguration) *NullableWazuhManagerConfiguration {
	return &NullableWazuhManagerConfiguration{value: val, isSet: true}
}

func (v NullableWazuhManagerConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWazuhManagerConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


