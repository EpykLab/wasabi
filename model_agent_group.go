/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the AgentGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentGroup{}

// AgentGroup struct for AgentGroup
type AgentGroup struct {
	// Number of agents belonging to that group
	Count *int32 `json:"count,omitempty"`
	Name *string `json:"name,omitempty"`
	// MD5 checksum of all group shared files merged in a single one (merged.mg)
	MergedSum *string `json:"mergedSum,omitempty"`
	// MD5 checksum of the group configuration file (agent.conf)
	ConfigSum *string `json:"configSum,omitempty"`
}

// NewAgentGroup instantiates a new AgentGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentGroup() *AgentGroup {
	this := AgentGroup{}
	return &this
}

// NewAgentGroupWithDefaults instantiates a new AgentGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentGroupWithDefaults() *AgentGroup {
	this := AgentGroup{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *AgentGroup) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentGroup) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *AgentGroup) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *AgentGroup) SetCount(v int32) {
	o.Count = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AgentGroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentGroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AgentGroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AgentGroup) SetName(v string) {
	o.Name = &v
}

// GetMergedSum returns the MergedSum field value if set, zero value otherwise.
func (o *AgentGroup) GetMergedSum() string {
	if o == nil || IsNil(o.MergedSum) {
		var ret string
		return ret
	}
	return *o.MergedSum
}

// GetMergedSumOk returns a tuple with the MergedSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentGroup) GetMergedSumOk() (*string, bool) {
	if o == nil || IsNil(o.MergedSum) {
		return nil, false
	}
	return o.MergedSum, true
}

// HasMergedSum returns a boolean if a field has been set.
func (o *AgentGroup) HasMergedSum() bool {
	if o != nil && !IsNil(o.MergedSum) {
		return true
	}

	return false
}

// SetMergedSum gets a reference to the given string and assigns it to the MergedSum field.
func (o *AgentGroup) SetMergedSum(v string) {
	o.MergedSum = &v
}

// GetConfigSum returns the ConfigSum field value if set, zero value otherwise.
func (o *AgentGroup) GetConfigSum() string {
	if o == nil || IsNil(o.ConfigSum) {
		var ret string
		return ret
	}
	return *o.ConfigSum
}

// GetConfigSumOk returns a tuple with the ConfigSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentGroup) GetConfigSumOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigSum) {
		return nil, false
	}
	return o.ConfigSum, true
}

// HasConfigSum returns a boolean if a field has been set.
func (o *AgentGroup) HasConfigSum() bool {
	if o != nil && !IsNil(o.ConfigSum) {
		return true
	}

	return false
}

// SetConfigSum gets a reference to the given string and assigns it to the ConfigSum field.
func (o *AgentGroup) SetConfigSum(v string) {
	o.ConfigSum = &v
}

func (o AgentGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.MergedSum) {
		toSerialize["mergedSum"] = o.MergedSum
	}
	if !IsNil(o.ConfigSum) {
		toSerialize["configSum"] = o.ConfigSum
	}
	return toSerialize, nil
}

type NullableAgentGroup struct {
	value *AgentGroup
	isSet bool
}

func (v NullableAgentGroup) Get() *AgentGroup {
	return v.value
}

func (v *NullableAgentGroup) Set(val *AgentGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentGroup(val *AgentGroup) *NullableAgentGroup {
	return &NullableAgentGroup{value: val, isSet: true}
}

func (v NullableAgentGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


