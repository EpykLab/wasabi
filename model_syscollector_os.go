/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the SyscollectorOS type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyscollectorOS{}

// SyscollectorOS struct for SyscollectorOS
type SyscollectorOS struct {
	// OS architecture
	Architecture *string `json:"architecture,omitempty"`
	// Machine's hostname
	Hostname *string `json:"hostname,omitempty"`
	Os *SyscollectorOSOs `json:"os,omitempty"`
	// Release name
	Release *string `json:"release,omitempty"`
	Scan *ScanIdTime `json:"scan,omitempty"`
	// System name
	Sysname *string `json:"sysname,omitempty"`
	// Release version
	Version *string `json:"version,omitempty"`
	// Agent ID
	AgentId *string `json:"agent_id,omitempty"`
}

// NewSyscollectorOS instantiates a new SyscollectorOS object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyscollectorOS() *SyscollectorOS {
	this := SyscollectorOS{}
	return &this
}

// NewSyscollectorOSWithDefaults instantiates a new SyscollectorOS object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyscollectorOSWithDefaults() *SyscollectorOS {
	this := SyscollectorOS{}
	return &this
}

// GetArchitecture returns the Architecture field value if set, zero value otherwise.
func (o *SyscollectorOS) GetArchitecture() string {
	if o == nil || IsNil(o.Architecture) {
		var ret string
		return ret
	}
	return *o.Architecture
}

// GetArchitectureOk returns a tuple with the Architecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorOS) GetArchitectureOk() (*string, bool) {
	if o == nil || IsNil(o.Architecture) {
		return nil, false
	}
	return o.Architecture, true
}

// HasArchitecture returns a boolean if a field has been set.
func (o *SyscollectorOS) HasArchitecture() bool {
	if o != nil && !IsNil(o.Architecture) {
		return true
	}

	return false
}

// SetArchitecture gets a reference to the given string and assigns it to the Architecture field.
func (o *SyscollectorOS) SetArchitecture(v string) {
	o.Architecture = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *SyscollectorOS) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorOS) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *SyscollectorOS) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *SyscollectorOS) SetHostname(v string) {
	o.Hostname = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *SyscollectorOS) GetOs() SyscollectorOSOs {
	if o == nil || IsNil(o.Os) {
		var ret SyscollectorOSOs
		return ret
	}
	return *o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorOS) GetOsOk() (*SyscollectorOSOs, bool) {
	if o == nil || IsNil(o.Os) {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *SyscollectorOS) HasOs() bool {
	if o != nil && !IsNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given SyscollectorOSOs and assigns it to the Os field.
func (o *SyscollectorOS) SetOs(v SyscollectorOSOs) {
	o.Os = &v
}

// GetRelease returns the Release field value if set, zero value otherwise.
func (o *SyscollectorOS) GetRelease() string {
	if o == nil || IsNil(o.Release) {
		var ret string
		return ret
	}
	return *o.Release
}

// GetReleaseOk returns a tuple with the Release field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorOS) GetReleaseOk() (*string, bool) {
	if o == nil || IsNil(o.Release) {
		return nil, false
	}
	return o.Release, true
}

// HasRelease returns a boolean if a field has been set.
func (o *SyscollectorOS) HasRelease() bool {
	if o != nil && !IsNil(o.Release) {
		return true
	}

	return false
}

// SetRelease gets a reference to the given string and assigns it to the Release field.
func (o *SyscollectorOS) SetRelease(v string) {
	o.Release = &v
}

// GetScan returns the Scan field value if set, zero value otherwise.
func (o *SyscollectorOS) GetScan() ScanIdTime {
	if o == nil || IsNil(o.Scan) {
		var ret ScanIdTime
		return ret
	}
	return *o.Scan
}

// GetScanOk returns a tuple with the Scan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorOS) GetScanOk() (*ScanIdTime, bool) {
	if o == nil || IsNil(o.Scan) {
		return nil, false
	}
	return o.Scan, true
}

// HasScan returns a boolean if a field has been set.
func (o *SyscollectorOS) HasScan() bool {
	if o != nil && !IsNil(o.Scan) {
		return true
	}

	return false
}

// SetScan gets a reference to the given ScanIdTime and assigns it to the Scan field.
func (o *SyscollectorOS) SetScan(v ScanIdTime) {
	o.Scan = &v
}

// GetSysname returns the Sysname field value if set, zero value otherwise.
func (o *SyscollectorOS) GetSysname() string {
	if o == nil || IsNil(o.Sysname) {
		var ret string
		return ret
	}
	return *o.Sysname
}

// GetSysnameOk returns a tuple with the Sysname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorOS) GetSysnameOk() (*string, bool) {
	if o == nil || IsNil(o.Sysname) {
		return nil, false
	}
	return o.Sysname, true
}

// HasSysname returns a boolean if a field has been set.
func (o *SyscollectorOS) HasSysname() bool {
	if o != nil && !IsNil(o.Sysname) {
		return true
	}

	return false
}

// SetSysname gets a reference to the given string and assigns it to the Sysname field.
func (o *SyscollectorOS) SetSysname(v string) {
	o.Sysname = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *SyscollectorOS) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorOS) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *SyscollectorOS) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *SyscollectorOS) SetVersion(v string) {
	o.Version = &v
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *SyscollectorOS) GetAgentId() string {
	if o == nil || IsNil(o.AgentId) {
		var ret string
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorOS) GetAgentIdOk() (*string, bool) {
	if o == nil || IsNil(o.AgentId) {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *SyscollectorOS) HasAgentId() bool {
	if o != nil && !IsNil(o.AgentId) {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given string and assigns it to the AgentId field.
func (o *SyscollectorOS) SetAgentId(v string) {
	o.AgentId = &v
}

func (o SyscollectorOS) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyscollectorOS) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Architecture) {
		toSerialize["architecture"] = o.Architecture
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	if !IsNil(o.Release) {
		toSerialize["release"] = o.Release
	}
	if !IsNil(o.Scan) {
		toSerialize["scan"] = o.Scan
	}
	if !IsNil(o.Sysname) {
		toSerialize["sysname"] = o.Sysname
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.AgentId) {
		toSerialize["agent_id"] = o.AgentId
	}
	return toSerialize, nil
}

type NullableSyscollectorOS struct {
	value *SyscollectorOS
	isSet bool
}

func (v NullableSyscollectorOS) Get() *SyscollectorOS {
	return v.value
}

func (v *NullableSyscollectorOS) Set(val *SyscollectorOS) {
	v.value = val
	v.isSet = true
}

func (v NullableSyscollectorOS) IsSet() bool {
	return v.isSet
}

func (v *NullableSyscollectorOS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyscollectorOS(val *SyscollectorOS) *NullableSyscollectorOS {
	return &NullableSyscollectorOS{value: val, isSet: true}
}

func (v NullableSyscollectorOS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyscollectorOS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


