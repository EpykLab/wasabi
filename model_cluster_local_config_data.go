/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ClusterLocalConfigData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterLocalConfigData{}

// ClusterLocalConfigData struct for ClusterLocalConfigData
type ClusterLocalConfigData struct {
	// Cluster name
	Name *string `json:"name,omitempty"`
	// Node name
	NodeName *string `json:"node_name,omitempty"`
	// Node type
	NodeType *string `json:"node_type,omitempty"`
	// Cluster key used to encrypt messages
	Key *string `json:"key,omitempty"`
	// Port used by the **master** node to communicate with workers
	Port *int32 `json:"port,omitempty"`
	// Network interface used by the **master** to listen to incoming connections
	BindAddr *string `json:"bind_addr,omitempty"`
	// List of cluster master nodes. This list is used by **worker** nodes to connect to the master
	Nodes []string `json:"nodes,omitempty"`
	// Whether to hide the cluster information in the alerts
	Hidden *string `json:"hidden,omitempty"`
	// Whether the cluster is enabled or not
	Disabled *bool `json:"disabled,omitempty"`
}

// NewClusterLocalConfigData instantiates a new ClusterLocalConfigData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterLocalConfigData() *ClusterLocalConfigData {
	this := ClusterLocalConfigData{}
	return &this
}

// NewClusterLocalConfigDataWithDefaults instantiates a new ClusterLocalConfigData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterLocalConfigDataWithDefaults() *ClusterLocalConfigData {
	this := ClusterLocalConfigData{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterLocalConfigData) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLocalConfigData) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClusterLocalConfigData) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterLocalConfigData) SetName(v string) {
	o.Name = &v
}

// GetNodeName returns the NodeName field value if set, zero value otherwise.
func (o *ClusterLocalConfigData) GetNodeName() string {
	if o == nil || IsNil(o.NodeName) {
		var ret string
		return ret
	}
	return *o.NodeName
}

// GetNodeNameOk returns a tuple with the NodeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLocalConfigData) GetNodeNameOk() (*string, bool) {
	if o == nil || IsNil(o.NodeName) {
		return nil, false
	}
	return o.NodeName, true
}

// HasNodeName returns a boolean if a field has been set.
func (o *ClusterLocalConfigData) HasNodeName() bool {
	if o != nil && !IsNil(o.NodeName) {
		return true
	}

	return false
}

// SetNodeName gets a reference to the given string and assigns it to the NodeName field.
func (o *ClusterLocalConfigData) SetNodeName(v string) {
	o.NodeName = &v
}

// GetNodeType returns the NodeType field value if set, zero value otherwise.
func (o *ClusterLocalConfigData) GetNodeType() string {
	if o == nil || IsNil(o.NodeType) {
		var ret string
		return ret
	}
	return *o.NodeType
}

// GetNodeTypeOk returns a tuple with the NodeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLocalConfigData) GetNodeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NodeType) {
		return nil, false
	}
	return o.NodeType, true
}

// HasNodeType returns a boolean if a field has been set.
func (o *ClusterLocalConfigData) HasNodeType() bool {
	if o != nil && !IsNil(o.NodeType) {
		return true
	}

	return false
}

// SetNodeType gets a reference to the given string and assigns it to the NodeType field.
func (o *ClusterLocalConfigData) SetNodeType(v string) {
	o.NodeType = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ClusterLocalConfigData) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLocalConfigData) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ClusterLocalConfigData) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ClusterLocalConfigData) SetKey(v string) {
	o.Key = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ClusterLocalConfigData) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLocalConfigData) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ClusterLocalConfigData) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *ClusterLocalConfigData) SetPort(v int32) {
	o.Port = &v
}

// GetBindAddr returns the BindAddr field value if set, zero value otherwise.
func (o *ClusterLocalConfigData) GetBindAddr() string {
	if o == nil || IsNil(o.BindAddr) {
		var ret string
		return ret
	}
	return *o.BindAddr
}

// GetBindAddrOk returns a tuple with the BindAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLocalConfigData) GetBindAddrOk() (*string, bool) {
	if o == nil || IsNil(o.BindAddr) {
		return nil, false
	}
	return o.BindAddr, true
}

// HasBindAddr returns a boolean if a field has been set.
func (o *ClusterLocalConfigData) HasBindAddr() bool {
	if o != nil && !IsNil(o.BindAddr) {
		return true
	}

	return false
}

// SetBindAddr gets a reference to the given string and assigns it to the BindAddr field.
func (o *ClusterLocalConfigData) SetBindAddr(v string) {
	o.BindAddr = &v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *ClusterLocalConfigData) GetNodes() []string {
	if o == nil || IsNil(o.Nodes) {
		var ret []string
		return ret
	}
	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLocalConfigData) GetNodesOk() ([]string, bool) {
	if o == nil || IsNil(o.Nodes) {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *ClusterLocalConfigData) HasNodes() bool {
	if o != nil && !IsNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given []string and assigns it to the Nodes field.
func (o *ClusterLocalConfigData) SetNodes(v []string) {
	o.Nodes = v
}

// GetHidden returns the Hidden field value if set, zero value otherwise.
func (o *ClusterLocalConfigData) GetHidden() string {
	if o == nil || IsNil(o.Hidden) {
		var ret string
		return ret
	}
	return *o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLocalConfigData) GetHiddenOk() (*string, bool) {
	if o == nil || IsNil(o.Hidden) {
		return nil, false
	}
	return o.Hidden, true
}

// HasHidden returns a boolean if a field has been set.
func (o *ClusterLocalConfigData) HasHidden() bool {
	if o != nil && !IsNil(o.Hidden) {
		return true
	}

	return false
}

// SetHidden gets a reference to the given string and assigns it to the Hidden field.
func (o *ClusterLocalConfigData) SetHidden(v string) {
	o.Hidden = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *ClusterLocalConfigData) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLocalConfigData) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *ClusterLocalConfigData) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *ClusterLocalConfigData) SetDisabled(v bool) {
	o.Disabled = &v
}

func (o ClusterLocalConfigData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterLocalConfigData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NodeName) {
		toSerialize["node_name"] = o.NodeName
	}
	if !IsNil(o.NodeType) {
		toSerialize["node_type"] = o.NodeType
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.BindAddr) {
		toSerialize["bind_addr"] = o.BindAddr
	}
	if !IsNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}
	if !IsNil(o.Hidden) {
		toSerialize["hidden"] = o.Hidden
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	return toSerialize, nil
}

type NullableClusterLocalConfigData struct {
	value *ClusterLocalConfigData
	isSet bool
}

func (v NullableClusterLocalConfigData) Get() *ClusterLocalConfigData {
	return v.value
}

func (v *NullableClusterLocalConfigData) Set(val *ClusterLocalConfigData) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterLocalConfigData) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterLocalConfigData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterLocalConfigData(val *ClusterLocalConfigData) *NullableClusterLocalConfigData {
	return &NullableClusterLocalConfigData{value: val, isSet: true}
}

func (v NullableClusterLocalConfigData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterLocalConfigData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


