/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the AgentDistinct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentDistinct{}

// AgentDistinct struct for AgentDistinct
type AgentDistinct struct {
	// Wazuh version the agent has installed
	Version *string `json:"version,omitempty"`
	// Agent ID
	Id *string `json:"id,omitempty"`
	// Agent name used at the registration process
	Name *string `json:"name,omitempty"`
	Status *AgentStatus `json:"status,omitempty"`
	// MD5 checksum of the group configuration file (agent.conf)
	ConfigSum *string `json:"configSum,omitempty"`
	// List of groups the agent belongs to
	Group []string `json:"group,omitempty"`
	// MD5 checksum of all group shared files merged in a single one (merged.mg)
	MergedSum *string `json:"mergedSum,omitempty"`
	// IP where the agent communicates with the manager. If the manager can't get this information, it will be the same as registerIP field
	Ip *string `json:"ip,omitempty"`
	// IP used at agent the registration process
	RegisterIP *string `json:"registerIP,omitempty"`
	// Hostname of the manager the agent is reporting to
	Manager *string `json:"manager,omitempty"`
	// ID of the node the agent is reporting to
	NodeName *string `json:"node_name,omitempty"`
	// Date when the agent was registered
	DateAdd *string `json:"dateAdd,omitempty"`
	// Date when the last keepalive was received from the agent
	LastKeepAlive *string `json:"lastKeepAlive,omitempty"`
	Os *AgentOs `json:"os,omitempty"`
	// Agent connection status code
	StatusCode *int32 `json:"status_code,omitempty"`
	// Agent groups configuration sync status
	GroupConfigStatus *string `json:"group_config_status,omitempty"`
	// Number of agents with the specified unique fields
	Count *int32 `json:"count,omitempty"`
}

// NewAgentDistinct instantiates a new AgentDistinct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentDistinct() *AgentDistinct {
	this := AgentDistinct{}
	var statusCode int32 = 0
	this.StatusCode = &statusCode
	return &this
}

// NewAgentDistinctWithDefaults instantiates a new AgentDistinct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentDistinctWithDefaults() *AgentDistinct {
	this := AgentDistinct{}
	var statusCode int32 = 0
	this.StatusCode = &statusCode
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AgentDistinct) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AgentDistinct) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AgentDistinct) SetVersion(v string) {
	o.Version = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AgentDistinct) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AgentDistinct) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AgentDistinct) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AgentDistinct) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AgentDistinct) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AgentDistinct) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AgentDistinct) GetStatus() AgentStatus {
	if o == nil || IsNil(o.Status) {
		var ret AgentStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetStatusOk() (*AgentStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AgentDistinct) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AgentStatus and assigns it to the Status field.
func (o *AgentDistinct) SetStatus(v AgentStatus) {
	o.Status = &v
}

// GetConfigSum returns the ConfigSum field value if set, zero value otherwise.
func (o *AgentDistinct) GetConfigSum() string {
	if o == nil || IsNil(o.ConfigSum) {
		var ret string
		return ret
	}
	return *o.ConfigSum
}

// GetConfigSumOk returns a tuple with the ConfigSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetConfigSumOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigSum) {
		return nil, false
	}
	return o.ConfigSum, true
}

// HasConfigSum returns a boolean if a field has been set.
func (o *AgentDistinct) HasConfigSum() bool {
	if o != nil && !IsNil(o.ConfigSum) {
		return true
	}

	return false
}

// SetConfigSum gets a reference to the given string and assigns it to the ConfigSum field.
func (o *AgentDistinct) SetConfigSum(v string) {
	o.ConfigSum = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *AgentDistinct) GetGroup() []string {
	if o == nil || IsNil(o.Group) {
		var ret []string
		return ret
	}
	return o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetGroupOk() ([]string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *AgentDistinct) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given []string and assigns it to the Group field.
func (o *AgentDistinct) SetGroup(v []string) {
	o.Group = v
}

// GetMergedSum returns the MergedSum field value if set, zero value otherwise.
func (o *AgentDistinct) GetMergedSum() string {
	if o == nil || IsNil(o.MergedSum) {
		var ret string
		return ret
	}
	return *o.MergedSum
}

// GetMergedSumOk returns a tuple with the MergedSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetMergedSumOk() (*string, bool) {
	if o == nil || IsNil(o.MergedSum) {
		return nil, false
	}
	return o.MergedSum, true
}

// HasMergedSum returns a boolean if a field has been set.
func (o *AgentDistinct) HasMergedSum() bool {
	if o != nil && !IsNil(o.MergedSum) {
		return true
	}

	return false
}

// SetMergedSum gets a reference to the given string and assigns it to the MergedSum field.
func (o *AgentDistinct) SetMergedSum(v string) {
	o.MergedSum = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *AgentDistinct) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *AgentDistinct) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *AgentDistinct) SetIp(v string) {
	o.Ip = &v
}

// GetRegisterIP returns the RegisterIP field value if set, zero value otherwise.
func (o *AgentDistinct) GetRegisterIP() string {
	if o == nil || IsNil(o.RegisterIP) {
		var ret string
		return ret
	}
	return *o.RegisterIP
}

// GetRegisterIPOk returns a tuple with the RegisterIP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetRegisterIPOk() (*string, bool) {
	if o == nil || IsNil(o.RegisterIP) {
		return nil, false
	}
	return o.RegisterIP, true
}

// HasRegisterIP returns a boolean if a field has been set.
func (o *AgentDistinct) HasRegisterIP() bool {
	if o != nil && !IsNil(o.RegisterIP) {
		return true
	}

	return false
}

// SetRegisterIP gets a reference to the given string and assigns it to the RegisterIP field.
func (o *AgentDistinct) SetRegisterIP(v string) {
	o.RegisterIP = &v
}

// GetManager returns the Manager field value if set, zero value otherwise.
func (o *AgentDistinct) GetManager() string {
	if o == nil || IsNil(o.Manager) {
		var ret string
		return ret
	}
	return *o.Manager
}

// GetManagerOk returns a tuple with the Manager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetManagerOk() (*string, bool) {
	if o == nil || IsNil(o.Manager) {
		return nil, false
	}
	return o.Manager, true
}

// HasManager returns a boolean if a field has been set.
func (o *AgentDistinct) HasManager() bool {
	if o != nil && !IsNil(o.Manager) {
		return true
	}

	return false
}

// SetManager gets a reference to the given string and assigns it to the Manager field.
func (o *AgentDistinct) SetManager(v string) {
	o.Manager = &v
}

// GetNodeName returns the NodeName field value if set, zero value otherwise.
func (o *AgentDistinct) GetNodeName() string {
	if o == nil || IsNil(o.NodeName) {
		var ret string
		return ret
	}
	return *o.NodeName
}

// GetNodeNameOk returns a tuple with the NodeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetNodeNameOk() (*string, bool) {
	if o == nil || IsNil(o.NodeName) {
		return nil, false
	}
	return o.NodeName, true
}

// HasNodeName returns a boolean if a field has been set.
func (o *AgentDistinct) HasNodeName() bool {
	if o != nil && !IsNil(o.NodeName) {
		return true
	}

	return false
}

// SetNodeName gets a reference to the given string and assigns it to the NodeName field.
func (o *AgentDistinct) SetNodeName(v string) {
	o.NodeName = &v
}

// GetDateAdd returns the DateAdd field value if set, zero value otherwise.
func (o *AgentDistinct) GetDateAdd() string {
	if o == nil || IsNil(o.DateAdd) {
		var ret string
		return ret
	}
	return *o.DateAdd
}

// GetDateAddOk returns a tuple with the DateAdd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetDateAddOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdd) {
		return nil, false
	}
	return o.DateAdd, true
}

// HasDateAdd returns a boolean if a field has been set.
func (o *AgentDistinct) HasDateAdd() bool {
	if o != nil && !IsNil(o.DateAdd) {
		return true
	}

	return false
}

// SetDateAdd gets a reference to the given string and assigns it to the DateAdd field.
func (o *AgentDistinct) SetDateAdd(v string) {
	o.DateAdd = &v
}

// GetLastKeepAlive returns the LastKeepAlive field value if set, zero value otherwise.
func (o *AgentDistinct) GetLastKeepAlive() string {
	if o == nil || IsNil(o.LastKeepAlive) {
		var ret string
		return ret
	}
	return *o.LastKeepAlive
}

// GetLastKeepAliveOk returns a tuple with the LastKeepAlive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetLastKeepAliveOk() (*string, bool) {
	if o == nil || IsNil(o.LastKeepAlive) {
		return nil, false
	}
	return o.LastKeepAlive, true
}

// HasLastKeepAlive returns a boolean if a field has been set.
func (o *AgentDistinct) HasLastKeepAlive() bool {
	if o != nil && !IsNil(o.LastKeepAlive) {
		return true
	}

	return false
}

// SetLastKeepAlive gets a reference to the given string and assigns it to the LastKeepAlive field.
func (o *AgentDistinct) SetLastKeepAlive(v string) {
	o.LastKeepAlive = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *AgentDistinct) GetOs() AgentOs {
	if o == nil || IsNil(o.Os) {
		var ret AgentOs
		return ret
	}
	return *o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetOsOk() (*AgentOs, bool) {
	if o == nil || IsNil(o.Os) {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *AgentDistinct) HasOs() bool {
	if o != nil && !IsNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given AgentOs and assigns it to the Os field.
func (o *AgentDistinct) SetOs(v AgentOs) {
	o.Os = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *AgentDistinct) GetStatusCode() int32 {
	if o == nil || IsNil(o.StatusCode) {
		var ret int32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetStatusCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *AgentDistinct) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int32 and assigns it to the StatusCode field.
func (o *AgentDistinct) SetStatusCode(v int32) {
	o.StatusCode = &v
}

// GetGroupConfigStatus returns the GroupConfigStatus field value if set, zero value otherwise.
func (o *AgentDistinct) GetGroupConfigStatus() string {
	if o == nil || IsNil(o.GroupConfigStatus) {
		var ret string
		return ret
	}
	return *o.GroupConfigStatus
}

// GetGroupConfigStatusOk returns a tuple with the GroupConfigStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetGroupConfigStatusOk() (*string, bool) {
	if o == nil || IsNil(o.GroupConfigStatus) {
		return nil, false
	}
	return o.GroupConfigStatus, true
}

// HasGroupConfigStatus returns a boolean if a field has been set.
func (o *AgentDistinct) HasGroupConfigStatus() bool {
	if o != nil && !IsNil(o.GroupConfigStatus) {
		return true
	}

	return false
}

// SetGroupConfigStatus gets a reference to the given string and assigns it to the GroupConfigStatus field.
func (o *AgentDistinct) SetGroupConfigStatus(v string) {
	o.GroupConfigStatus = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *AgentDistinct) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentDistinct) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *AgentDistinct) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *AgentDistinct) SetCount(v int32) {
	o.Count = &v
}

func (o AgentDistinct) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentDistinct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ConfigSum) {
		toSerialize["configSum"] = o.ConfigSum
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.MergedSum) {
		toSerialize["mergedSum"] = o.MergedSum
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.RegisterIP) {
		toSerialize["registerIP"] = o.RegisterIP
	}
	if !IsNil(o.Manager) {
		toSerialize["manager"] = o.Manager
	}
	if !IsNil(o.NodeName) {
		toSerialize["node_name"] = o.NodeName
	}
	if !IsNil(o.DateAdd) {
		toSerialize["dateAdd"] = o.DateAdd
	}
	if !IsNil(o.LastKeepAlive) {
		toSerialize["lastKeepAlive"] = o.LastKeepAlive
	}
	if !IsNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	if !IsNil(o.StatusCode) {
		toSerialize["status_code"] = o.StatusCode
	}
	if !IsNil(o.GroupConfigStatus) {
		toSerialize["group_config_status"] = o.GroupConfigStatus
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return toSerialize, nil
}

type NullableAgentDistinct struct {
	value *AgentDistinct
	isSet bool
}

func (v NullableAgentDistinct) Get() *AgentDistinct {
	return v.value
}

func (v *NullableAgentDistinct) Set(val *AgentDistinct) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentDistinct) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentDistinct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentDistinct(val *AgentDistinct) *NullableAgentDistinct {
	return &NullableAgentDistinct{value: val, isSet: true}
}

func (v NullableAgentDistinct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentDistinct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


