/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the SyscollectorPackages type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyscollectorPackages{}

// SyscollectorPackages struct for SyscollectorPackages
type SyscollectorPackages struct {
	// Package architecture
	Architecture *string `json:"architecture,omitempty"`
	// Brief package description
	Description *string `json:"description,omitempty"`
	// Package format
	Format *string `json:"format,omitempty"`
	// Whether the package has multi architecture support
	Multiarch *string `json:"multiarch,omitempty"`
	// Package name
	Name *string `json:"name,omitempty"`
	// Package priority
	Priority *string `json:"priority,omitempty"`
	Scan *ScanIdTime `json:"scan,omitempty"`
	// Package section
	Section *string `json:"section,omitempty"`
	// Source section
	Source *string `json:"source,omitempty"`
	// Installed package size in bytes
	Size *int32 `json:"size,omitempty"`
	// Vendor name
	Vendor *string `json:"vendor,omitempty"`
	// Release version installed
	Version *string `json:"version,omitempty"`
	// Agent ID
	AgentId *string `json:"agent_id,omitempty"`
}

// NewSyscollectorPackages instantiates a new SyscollectorPackages object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyscollectorPackages() *SyscollectorPackages {
	this := SyscollectorPackages{}
	return &this
}

// NewSyscollectorPackagesWithDefaults instantiates a new SyscollectorPackages object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyscollectorPackagesWithDefaults() *SyscollectorPackages {
	this := SyscollectorPackages{}
	return &this
}

// GetArchitecture returns the Architecture field value if set, zero value otherwise.
func (o *SyscollectorPackages) GetArchitecture() string {
	if o == nil || IsNil(o.Architecture) {
		var ret string
		return ret
	}
	return *o.Architecture
}

// GetArchitectureOk returns a tuple with the Architecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPackages) GetArchitectureOk() (*string, bool) {
	if o == nil || IsNil(o.Architecture) {
		return nil, false
	}
	return o.Architecture, true
}

// HasArchitecture returns a boolean if a field has been set.
func (o *SyscollectorPackages) HasArchitecture() bool {
	if o != nil && !IsNil(o.Architecture) {
		return true
	}

	return false
}

// SetArchitecture gets a reference to the given string and assigns it to the Architecture field.
func (o *SyscollectorPackages) SetArchitecture(v string) {
	o.Architecture = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SyscollectorPackages) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPackages) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SyscollectorPackages) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SyscollectorPackages) SetDescription(v string) {
	o.Description = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *SyscollectorPackages) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPackages) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *SyscollectorPackages) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *SyscollectorPackages) SetFormat(v string) {
	o.Format = &v
}

// GetMultiarch returns the Multiarch field value if set, zero value otherwise.
func (o *SyscollectorPackages) GetMultiarch() string {
	if o == nil || IsNil(o.Multiarch) {
		var ret string
		return ret
	}
	return *o.Multiarch
}

// GetMultiarchOk returns a tuple with the Multiarch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPackages) GetMultiarchOk() (*string, bool) {
	if o == nil || IsNil(o.Multiarch) {
		return nil, false
	}
	return o.Multiarch, true
}

// HasMultiarch returns a boolean if a field has been set.
func (o *SyscollectorPackages) HasMultiarch() bool {
	if o != nil && !IsNil(o.Multiarch) {
		return true
	}

	return false
}

// SetMultiarch gets a reference to the given string and assigns it to the Multiarch field.
func (o *SyscollectorPackages) SetMultiarch(v string) {
	o.Multiarch = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SyscollectorPackages) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPackages) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SyscollectorPackages) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SyscollectorPackages) SetName(v string) {
	o.Name = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *SyscollectorPackages) GetPriority() string {
	if o == nil || IsNil(o.Priority) {
		var ret string
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPackages) GetPriorityOk() (*string, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *SyscollectorPackages) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given string and assigns it to the Priority field.
func (o *SyscollectorPackages) SetPriority(v string) {
	o.Priority = &v
}

// GetScan returns the Scan field value if set, zero value otherwise.
func (o *SyscollectorPackages) GetScan() ScanIdTime {
	if o == nil || IsNil(o.Scan) {
		var ret ScanIdTime
		return ret
	}
	return *o.Scan
}

// GetScanOk returns a tuple with the Scan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPackages) GetScanOk() (*ScanIdTime, bool) {
	if o == nil || IsNil(o.Scan) {
		return nil, false
	}
	return o.Scan, true
}

// HasScan returns a boolean if a field has been set.
func (o *SyscollectorPackages) HasScan() bool {
	if o != nil && !IsNil(o.Scan) {
		return true
	}

	return false
}

// SetScan gets a reference to the given ScanIdTime and assigns it to the Scan field.
func (o *SyscollectorPackages) SetScan(v ScanIdTime) {
	o.Scan = &v
}

// GetSection returns the Section field value if set, zero value otherwise.
func (o *SyscollectorPackages) GetSection() string {
	if o == nil || IsNil(o.Section) {
		var ret string
		return ret
	}
	return *o.Section
}

// GetSectionOk returns a tuple with the Section field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPackages) GetSectionOk() (*string, bool) {
	if o == nil || IsNil(o.Section) {
		return nil, false
	}
	return o.Section, true
}

// HasSection returns a boolean if a field has been set.
func (o *SyscollectorPackages) HasSection() bool {
	if o != nil && !IsNil(o.Section) {
		return true
	}

	return false
}

// SetSection gets a reference to the given string and assigns it to the Section field.
func (o *SyscollectorPackages) SetSection(v string) {
	o.Section = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *SyscollectorPackages) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPackages) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *SyscollectorPackages) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *SyscollectorPackages) SetSource(v string) {
	o.Source = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *SyscollectorPackages) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPackages) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *SyscollectorPackages) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *SyscollectorPackages) SetSize(v int32) {
	o.Size = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *SyscollectorPackages) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPackages) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *SyscollectorPackages) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *SyscollectorPackages) SetVendor(v string) {
	o.Vendor = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *SyscollectorPackages) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPackages) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *SyscollectorPackages) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *SyscollectorPackages) SetVersion(v string) {
	o.Version = &v
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *SyscollectorPackages) GetAgentId() string {
	if o == nil || IsNil(o.AgentId) {
		var ret string
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyscollectorPackages) GetAgentIdOk() (*string, bool) {
	if o == nil || IsNil(o.AgentId) {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *SyscollectorPackages) HasAgentId() bool {
	if o != nil && !IsNil(o.AgentId) {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given string and assigns it to the AgentId field.
func (o *SyscollectorPackages) SetAgentId(v string) {
	o.AgentId = &v
}

func (o SyscollectorPackages) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyscollectorPackages) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Architecture) {
		toSerialize["architecture"] = o.Architecture
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.Multiarch) {
		toSerialize["multiarch"] = o.Multiarch
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Scan) {
		toSerialize["scan"] = o.Scan
	}
	if !IsNil(o.Section) {
		toSerialize["section"] = o.Section
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.AgentId) {
		toSerialize["agent_id"] = o.AgentId
	}
	return toSerialize, nil
}

type NullableSyscollectorPackages struct {
	value *SyscollectorPackages
	isSet bool
}

func (v NullableSyscollectorPackages) Get() *SyscollectorPackages {
	return v.value
}

func (v *NullableSyscollectorPackages) Set(val *SyscollectorPackages) {
	v.value = val
	v.isSet = true
}

func (v NullableSyscollectorPackages) IsSet() bool {
	return v.isSet
}

func (v *NullableSyscollectorPackages) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyscollectorPackages(val *SyscollectorPackages) *NullableSyscollectorPackages {
	return &NullableSyscollectorPackages{value: val, isSet: true}
}

func (v NullableSyscollectorPackages) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyscollectorPackages) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


