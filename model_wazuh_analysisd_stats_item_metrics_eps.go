/*
Wazuh API REST

The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI. Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s) or looking up syscheck details.  # Authentication  Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token. JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate` and obtain a JWT token to run any endpoint.  JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously issued tokens are revoked when any change is performed on security configuration.  Login with USER and PASSWORD:  `curl -u <USER>:<PASSWORD> -k -X POST \"https://<HOST_IP>:55000/security/user/authenticate\"` ```json {     \"data\": {         \"token\": \"<YOUR_JWT_TOKEN>\"     },     \"error\": 0 } ``` Use the token from the previous response to perform any endpoint request:  `curl -k -X <METHOD> \"https://<HOST_IP>:55000/<ENDPOINT>\" -H  \"Authorization: Bearer <YOUR_JWT_TOKEN>\"`  Change the token base duration:  `curl -k -X PUT \"https://<HOST_IP>:55000/security/config\" -H \"Authorization: Bearer <YOUR_JWT_TOKEN>\" -d '{\"auth_token_exp_timeout\": <NEW_EXPIRE_TIME_IN_SECONDS>}'`  <SecurityDefinitions /> 

API version: 4.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the WazuhAnalysisdStatsItemMetricsEps type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WazuhAnalysisdStatsItemMetricsEps{}

// WazuhAnalysisdStatsItemMetricsEps struct for WazuhAnalysisdStatsItemMetricsEps
type WazuhAnalysisdStatsItemMetricsEps struct {
	// Available credits to process events in the current timeframe
	AvailableCredits *int32 `json:"available_credits,omitempty"`
	// Available credits to process events in the previous timeframe
	AvailableCreditsPrev *int32 `json:"available_credits_prev,omitempty"`
	// Events discarded because the EPS limit was reached and queues were full
	EventsDropped *int32 `json:"events_dropped,omitempty"`
	// Events discarded due to causes unrelated to EPS limit
	EventsDroppedNotEps *int32 `json:"events_dropped_not_eps,omitempty"`
	// Time in seconds the EPS limit was exceeded
	SecondsOverLimit *int32 `json:"seconds_over_limit,omitempty"`
}

// NewWazuhAnalysisdStatsItemMetricsEps instantiates a new WazuhAnalysisdStatsItemMetricsEps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWazuhAnalysisdStatsItemMetricsEps() *WazuhAnalysisdStatsItemMetricsEps {
	this := WazuhAnalysisdStatsItemMetricsEps{}
	return &this
}

// NewWazuhAnalysisdStatsItemMetricsEpsWithDefaults instantiates a new WazuhAnalysisdStatsItemMetricsEps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWazuhAnalysisdStatsItemMetricsEpsWithDefaults() *WazuhAnalysisdStatsItemMetricsEps {
	this := WazuhAnalysisdStatsItemMetricsEps{}
	return &this
}

// GetAvailableCredits returns the AvailableCredits field value if set, zero value otherwise.
func (o *WazuhAnalysisdStatsItemMetricsEps) GetAvailableCredits() int32 {
	if o == nil || IsNil(o.AvailableCredits) {
		var ret int32
		return ret
	}
	return *o.AvailableCredits
}

// GetAvailableCreditsOk returns a tuple with the AvailableCredits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStatsItemMetricsEps) GetAvailableCreditsOk() (*int32, bool) {
	if o == nil || IsNil(o.AvailableCredits) {
		return nil, false
	}
	return o.AvailableCredits, true
}

// HasAvailableCredits returns a boolean if a field has been set.
func (o *WazuhAnalysisdStatsItemMetricsEps) HasAvailableCredits() bool {
	if o != nil && !IsNil(o.AvailableCredits) {
		return true
	}

	return false
}

// SetAvailableCredits gets a reference to the given int32 and assigns it to the AvailableCredits field.
func (o *WazuhAnalysisdStatsItemMetricsEps) SetAvailableCredits(v int32) {
	o.AvailableCredits = &v
}

// GetAvailableCreditsPrev returns the AvailableCreditsPrev field value if set, zero value otherwise.
func (o *WazuhAnalysisdStatsItemMetricsEps) GetAvailableCreditsPrev() int32 {
	if o == nil || IsNil(o.AvailableCreditsPrev) {
		var ret int32
		return ret
	}
	return *o.AvailableCreditsPrev
}

// GetAvailableCreditsPrevOk returns a tuple with the AvailableCreditsPrev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStatsItemMetricsEps) GetAvailableCreditsPrevOk() (*int32, bool) {
	if o == nil || IsNil(o.AvailableCreditsPrev) {
		return nil, false
	}
	return o.AvailableCreditsPrev, true
}

// HasAvailableCreditsPrev returns a boolean if a field has been set.
func (o *WazuhAnalysisdStatsItemMetricsEps) HasAvailableCreditsPrev() bool {
	if o != nil && !IsNil(o.AvailableCreditsPrev) {
		return true
	}

	return false
}

// SetAvailableCreditsPrev gets a reference to the given int32 and assigns it to the AvailableCreditsPrev field.
func (o *WazuhAnalysisdStatsItemMetricsEps) SetAvailableCreditsPrev(v int32) {
	o.AvailableCreditsPrev = &v
}

// GetEventsDropped returns the EventsDropped field value if set, zero value otherwise.
func (o *WazuhAnalysisdStatsItemMetricsEps) GetEventsDropped() int32 {
	if o == nil || IsNil(o.EventsDropped) {
		var ret int32
		return ret
	}
	return *o.EventsDropped
}

// GetEventsDroppedOk returns a tuple with the EventsDropped field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStatsItemMetricsEps) GetEventsDroppedOk() (*int32, bool) {
	if o == nil || IsNil(o.EventsDropped) {
		return nil, false
	}
	return o.EventsDropped, true
}

// HasEventsDropped returns a boolean if a field has been set.
func (o *WazuhAnalysisdStatsItemMetricsEps) HasEventsDropped() bool {
	if o != nil && !IsNil(o.EventsDropped) {
		return true
	}

	return false
}

// SetEventsDropped gets a reference to the given int32 and assigns it to the EventsDropped field.
func (o *WazuhAnalysisdStatsItemMetricsEps) SetEventsDropped(v int32) {
	o.EventsDropped = &v
}

// GetEventsDroppedNotEps returns the EventsDroppedNotEps field value if set, zero value otherwise.
func (o *WazuhAnalysisdStatsItemMetricsEps) GetEventsDroppedNotEps() int32 {
	if o == nil || IsNil(o.EventsDroppedNotEps) {
		var ret int32
		return ret
	}
	return *o.EventsDroppedNotEps
}

// GetEventsDroppedNotEpsOk returns a tuple with the EventsDroppedNotEps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStatsItemMetricsEps) GetEventsDroppedNotEpsOk() (*int32, bool) {
	if o == nil || IsNil(o.EventsDroppedNotEps) {
		return nil, false
	}
	return o.EventsDroppedNotEps, true
}

// HasEventsDroppedNotEps returns a boolean if a field has been set.
func (o *WazuhAnalysisdStatsItemMetricsEps) HasEventsDroppedNotEps() bool {
	if o != nil && !IsNil(o.EventsDroppedNotEps) {
		return true
	}

	return false
}

// SetEventsDroppedNotEps gets a reference to the given int32 and assigns it to the EventsDroppedNotEps field.
func (o *WazuhAnalysisdStatsItemMetricsEps) SetEventsDroppedNotEps(v int32) {
	o.EventsDroppedNotEps = &v
}

// GetSecondsOverLimit returns the SecondsOverLimit field value if set, zero value otherwise.
func (o *WazuhAnalysisdStatsItemMetricsEps) GetSecondsOverLimit() int32 {
	if o == nil || IsNil(o.SecondsOverLimit) {
		var ret int32
		return ret
	}
	return *o.SecondsOverLimit
}

// GetSecondsOverLimitOk returns a tuple with the SecondsOverLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WazuhAnalysisdStatsItemMetricsEps) GetSecondsOverLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.SecondsOverLimit) {
		return nil, false
	}
	return o.SecondsOverLimit, true
}

// HasSecondsOverLimit returns a boolean if a field has been set.
func (o *WazuhAnalysisdStatsItemMetricsEps) HasSecondsOverLimit() bool {
	if o != nil && !IsNil(o.SecondsOverLimit) {
		return true
	}

	return false
}

// SetSecondsOverLimit gets a reference to the given int32 and assigns it to the SecondsOverLimit field.
func (o *WazuhAnalysisdStatsItemMetricsEps) SetSecondsOverLimit(v int32) {
	o.SecondsOverLimit = &v
}

func (o WazuhAnalysisdStatsItemMetricsEps) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WazuhAnalysisdStatsItemMetricsEps) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailableCredits) {
		toSerialize["available_credits"] = o.AvailableCredits
	}
	if !IsNil(o.AvailableCreditsPrev) {
		toSerialize["available_credits_prev"] = o.AvailableCreditsPrev
	}
	if !IsNil(o.EventsDropped) {
		toSerialize["events_dropped"] = o.EventsDropped
	}
	if !IsNil(o.EventsDroppedNotEps) {
		toSerialize["events_dropped_not_eps"] = o.EventsDroppedNotEps
	}
	if !IsNil(o.SecondsOverLimit) {
		toSerialize["seconds_over_limit"] = o.SecondsOverLimit
	}
	return toSerialize, nil
}

type NullableWazuhAnalysisdStatsItemMetricsEps struct {
	value *WazuhAnalysisdStatsItemMetricsEps
	isSet bool
}

func (v NullableWazuhAnalysisdStatsItemMetricsEps) Get() *WazuhAnalysisdStatsItemMetricsEps {
	return v.value
}

func (v *NullableWazuhAnalysisdStatsItemMetricsEps) Set(val *WazuhAnalysisdStatsItemMetricsEps) {
	v.value = val
	v.isSet = true
}

func (v NullableWazuhAnalysisdStatsItemMetricsEps) IsSet() bool {
	return v.isSet
}

func (v *NullableWazuhAnalysisdStatsItemMetricsEps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWazuhAnalysisdStatsItemMetricsEps(val *WazuhAnalysisdStatsItemMetricsEps) *NullableWazuhAnalysisdStatsItemMetricsEps {
	return &NullableWazuhAnalysisdStatsItemMetricsEps{value: val, isSet: true}
}

func (v NullableWazuhAnalysisdStatsItemMetricsEps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWazuhAnalysisdStatsItemMetricsEps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


